# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from clay_hr_python_sdk.pydantic.candidate_applications_model import CandidateApplicationsModel
from clay_hr_python_sdk.pydantic.location_model import LocationModel
from clay_hr_python_sdk.pydantic.position_approval_level_model import PositionApprovalLevelModel
if TYPE_CHECKING:
    from clay_hr_python_sdk.pydantic.project_model import ProjectModel
from clay_hr_python_sdk.pydantic.user_position_approval_model import UserPositionApprovalModel
from clay_hr_python_sdk.pydantic.user_profile_model import UserProfileModel
from clay_hr_python_sdk.pydantic.user_view_model import UserViewModel

class PositionModel(BaseModel):
    description: typing.Optional[str] = Field(None, alias='description')

    access_level: typing.Optional[str] = Field(None, alias='accessLevel')

    application_due_date: typing.Optional[date] = Field(None, alias='applicationDueDate')

    application_form_id: typing.Optional[int] = Field(None, alias='applicationFormId')

    approval_flow_id: typing.Optional[int] = Field(None, alias='approvalFlowId')

    approval_status: typing.Optional[str] = Field(None, alias='approvalStatus')

    assessment_form_id: typing.Optional[int] = Field(None, alias='assessmentFormId')

    assessment_template_id: typing.Optional[int] = Field(None, alias='assessmentTemplateId')

    candidate_position_model_list: typing.Optional[typing.List[CandidateApplicationsModel]] = Field(None, alias='candidatePositionModelList')

    cid: typing.Optional[int] = Field(None, alias='cid')

    count: typing.Optional[int] = Field(None, alias='count')

    create_date: typing.Optional[date] = Field(None, alias='createDate')

    create_user_id: typing.Optional[int] = Field(None, alias='createUserId')

    custom_location: typing.Optional[str] = Field(None, alias='customLocation')

    date_close: typing.Optional[date] = Field(None, alias='dateClose')

    department_id: typing.Optional[int] = Field(None, alias='departmentId')

    funnel_id: typing.Optional[int] = Field(None, alias='funnelId')

    hiring_manager_id: typing.Optional[int] = Field(None, alias='hiringManagerId')

    html_template: typing.Optional[str] = Field(None, alias='htmlTemplate')

    is_recommended: typing.Optional[bool] = Field(None, alias='isRecommended')

    last_updatets: typing.Optional[date] = Field(None, alias='lastUpdatets')

    lastupdateuserid: typing.Optional[int] = Field(None, alias='lastupdateuserid')

    location_model: typing.Optional[LocationModel] = Field(None, alias='locationModel')

    locationid: typing.Optional[int] = Field(None, alias='locationid')

    name: typing.Optional[str] = Field(None, alias='name')

    position_approval_level_list: typing.Optional[typing.List[PositionApprovalLevelModel]] = Field(None, alias='positionApprovalLevelList')

    position_u_i_d: typing.Optional[str] = Field(None, alias='positionUID')

    positionid: typing.Optional[int] = Field(None, alias='positionid')

    profile_model: typing.Optional[UserProfileModel] = Field(None, alias='profileModel')

    profileid: typing.Optional[int] = Field(None, alias='profileid')

    project_model: typing.Optional['ProjectModel'] = Field(None, alias='projectModel')

    projectid: typing.Optional[int] = Field(None, alias='projectid')

    recommended: typing.Optional[bool] = Field(None, alias='recommended')

    recruiter_id: typing.Optional[int] = Field(None, alias='recruiterId')

    recruiter_model: typing.Optional[UserViewModel] = Field(None, alias='recruiterModel')

    request_approval_id: typing.Optional[int] = Field(None, alias='requestApprovalId')

    requirements: typing.Optional[str] = Field(None, alias='requirements')

    responsibilities: typing.Optional[str] = Field(None, alias='responsibilities')

    seo_url: typing.Optional[str] = Field(None, alias='seoUrl')

    status: typing.Optional[str] = Field(None, alias='status')

    totalcandidate: typing.Optional[int] = Field(None, alias='totalcandidate')

    user_name: typing.Optional[str] = Field(None, alias='userName')

    user_view_model: typing.Optional[UserViewModel] = Field(None, alias='userViewModel')

    userapproval_list: typing.Optional[typing.List[UserPositionApprovalModel]] = Field(None, alias='userapprovalList')

    id: typing.Optional[int] = Field(None, alias='id')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
