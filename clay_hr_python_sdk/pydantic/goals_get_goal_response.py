# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from clay_hr_python_sdk.pydantic.goals_get_goal_response_assigned_user_model import GoalsGetGoalResponseAssignedUserModel
from clay_hr_python_sdk.pydantic.goals_get_goal_response_goal_collaboration_model import GoalsGetGoalResponseGoalCollaborationModel
from clay_hr_python_sdk.pydantic.goals_get_goal_response_goal_type_model import GoalsGetGoalResponseGoalTypeModel
from clay_hr_python_sdk.pydantic.goals_get_goal_response_project_model import GoalsGetGoalResponseProjectModel
from clay_hr_python_sdk.pydantic.goals_get_goal_response_reviewer_user_model import GoalsGetGoalResponseReviewerUserModel

class GoalsGetGoalResponse(BaseModel):
    summary: typing.Optional[str] = Field(None, alias='summary')

    description: typing.Optional[str] = Field(None, alias='description')

    goal_id: typing.Optional[str] = Field(None, alias='goalId')

    additive: typing.Optional[str] = Field(None, alias='additive')

    visible_to_direct_reports: typing.Optional[str] = Field(None, alias='visibleToDirectReports')

    freeze_goal: typing.Optional[str] = Field(None, alias='freezeGoal')

    is_forward: typing.Optional[str] = Field(None, alias='isForward')

    company_goal: typing.Optional[str] = Field(None, alias='companyGoal')

    elapsed_time_ratio: typing.Optional[str] = Field(None, alias='elapsedTimeRatio')

    completion_ratio: typing.Optional[str] = Field(None, alias='completionRatio')

    progress_ratio: typing.Optional[str] = Field(None, alias='progressRatio')

    typecode: typing.Optional[str] = Field(None, alias='typecode')

    status: typing.Optional[str] = Field(None, alias='status')

    state: typing.Optional[str] = Field(None, alias='state')

    predictive_index: typing.Optional[str] = Field(None, alias='predictiveIndex')

    objective_id: typing.Optional[str] = Field(None, alias='objectiveId')

    cid: typing.Optional[str] = Field(None, alias='cid')

    disposition: typing.Optional[str] = Field(None, alias='disposition')

    units: typing.Optional[str] = Field(None, alias='units')

    assigned_user_model: typing.Optional[GoalsGetGoalResponseAssignedUserModel] = Field(None, alias='assignedUserModel')

    reviewer_user_model: typing.Optional[GoalsGetGoalResponseReviewerUserModel] = Field(None, alias='reviewerUserModel')

    goal_collaboration_model: typing.Optional[GoalsGetGoalResponseGoalCollaborationModel] = Field(None, alias='goalCollaborationModel')

    crediteatets: typing.Optional[str] = Field(None, alias='crediteatets')

    comment_crediteatets: typing.Optional[str] = Field(None, alias='commentCrediteatets')

    comment_description: typing.Optional[str] = Field(None, alias='commentDescription')

    uname: typing.Optional[str] = Field(None, alias='uname')

    has_goal_approval_permission: typing.Optional[str] = Field(None, alias='hasGoalApprovalPermission')

    begindate: typing.Optional[str] = Field(None, alias='begindate')

    goal_weightage: typing.Optional[str] = Field(None, alias='goalWeightage')

    createuserid: typing.Optional[str] = Field(None, alias='createuserid')

    createts: typing.Optional[int] = Field(None, alias='createts')

    project_model: typing.Optional[GoalsGetGoalResponseProjectModel] = Field(None, alias='projectModel')

    goal_type_model: typing.Optional[GoalsGetGoalResponseGoalTypeModel] = Field(None, alias='goalTypeModel')

    parent_goal_id: typing.Optional[str] = Field(None, alias='parentGoalId')

    id: typing.Optional[str] = Field(None, alias='id')

    create_user_id: typing.Optional[str] = Field(None, alias='createUserId')

    last_update_user_id: typing.Optional[str] = Field(None, alias='lastUpdateUserId')

    projectid: typing.Optional[str] = Field(None, alias='projectid')

    targetdate: typing.Optional[str] = Field(None, alias='targetdate')

    initialvalue: typing.Optional[str] = Field(None, alias='initialvalue')

    currentvalue: typing.Optional[str] = Field(None, alias='currentvalue')

    goalvalue: typing.Optional[str] = Field(None, alias='goalvalue')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
