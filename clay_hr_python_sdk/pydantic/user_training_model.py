# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

if TYPE_CHECKING:
    from clay_hr_python_sdk.pydantic.candidate_model import CandidateModel
from clay_hr_python_sdk.pydantic.timestamp import Timestamp
if TYPE_CHECKING:
    from clay_hr_python_sdk.pydantic.training_model import TrainingModel
from clay_hr_python_sdk.pydantic.user_view_model import UserViewModel

class UserTrainingModel(BaseModel):
    assessment_score: typing.Optional[typing.Union[int, float]] = Field(None, alias='assessmentScore')

    assigned_by_user_id: typing.Optional[int] = Field(None, alias='assignedByUserId')

    candidate_model: typing.Optional['CandidateModel'] = Field(None, alias='candidateModel')

    candidateid: typing.Optional[int] = Field(None, alias='candidateid')

    cid: typing.Optional[int] = Field(None, alias='cid')

    completionts: typing.Optional[Timestamp] = Field(None, alias='completionts')

    coordinator_name: typing.Optional[str] = Field(None, alias='coordinatorName')

    createts: typing.Optional[Timestamp] = Field(None, alias='createts')

    due_date: typing.Optional[date] = Field(None, alias='dueDate')

    dyna_form_assignment_id: typing.Optional[int] = Field(None, alias='dynaFormAssignmentId')

    status: typing.Optional[str] = Field(None, alias='status')

    test_result: typing.Optional[str] = Field(None, alias='testResult')

    training_coordinator: typing.Optional[int] = Field(None, alias='trainingCoordinator')

    training_id: typing.Optional[int] = Field(None, alias='trainingId')

    training_model: typing.Optional['TrainingModel'] = Field(None, alias='trainingModel')

    traininguser_id: typing.Optional[int] = Field(None, alias='traininguserId')

    user_model: typing.Optional[UserViewModel] = Field(None, alias='userModel')

    userid: typing.Optional[int] = Field(None, alias='userid')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
