# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from clay_hr_python_sdk.pydantic.people_and_permissions_create_or_update_user_details_request_address_list import PeopleAndPermissionsCreateOrUpdateUserDetailsRequestAddressList
from clay_hr_python_sdk.pydantic.people_and_permissions_create_or_update_user_details_request_contact_list import PeopleAndPermissionsCreateOrUpdateUserDetailsRequestContactList
from clay_hr_python_sdk.pydantic.people_and_permissions_create_or_update_user_details_request_education_list import PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationList
from clay_hr_python_sdk.pydantic.people_and_permissions_create_or_update_user_details_request_financial_list import PeopleAndPermissionsCreateOrUpdateUserDetailsRequestFinancialList
from clay_hr_python_sdk.pydantic.people_and_permissions_create_or_update_user_details_request_reports_to_email import PeopleAndPermissionsCreateOrUpdateUserDetailsRequestReportsToEmail

class PeopleAndPermissionsCreateOrUpdateUserDetailsRequest(BaseModel):
    # First name of user.
    first_name: typing.Optional[str] = Field(None, alias='firstName')

    # Mail ID of user.
    email: typing.Optional[str] = Field(None, alias='email')

    # Last name of user.
    last_name: typing.Optional[str] = Field(None, alias='lastName')

    # Employee ID of the user.
    emp_id: typing.Optional[str] = Field(None, alias='empId')

    # Gender of the user.
    gender: typing.Optional[str] = Field(None, alias='gender')

    # The unique system generated ID of the user.
    guid: typing.Optional[str] = Field(None, alias='guid')

    # Status of the user. A - Active, I - Inactive, F - Future Joiner
    status: typing.Optional[Literal["A", "I", "F"]] = Field(None, alias='status')

    # Display name of the user.
    display_full_name: typing.Optional[str] = Field(None, alias='displayFullName')

    # Middle name of user.
    middle_name: typing.Optional[str] = Field(None, alias='middleName')

    # Second Last name of user.
    second_last_name: typing.Optional[str] = Field(None, alias='secondLastName')

    # Short name of user.
    short_name: typing.Optional[str] = Field(None, alias='shortName')

    # Name Pronunciation
    name_pronunciation: typing.Optional[str] = Field(None, alias='namePronunciation')

    # Family Suffix
    family_suffix: typing.Optional[str] = Field(None, alias='familySuffix')

    # Worker type of the user.
    worker_type: typing.Optional[str] = Field(None, alias='workerType')

    # Birth date of user.
    user_date_of_birth: typing.Optional[str] = Field(None, alias='userDateOfBirth')

    # Phone number of the user.
    phone: typing.Optional[str] = Field(None, alias='phone')

    # Cell phone of the user.
    cell_phone: typing.Optional[str] = Field(None, alias='cellPhone')

    # Profile ID of the user.
    position: typing.Optional[int] = Field(None, alias='position')

    # Org Unit ID of the user.
    department_i_d: typing.Optional[int] = Field(None, alias='departmentID')

    # Location ID of the user.
    location_id: typing.Optional[int] = Field(None, alias='locationId')

    # Location of user.
    location_name: typing.Optional[str] = Field(None, alias='locationName')

    # Start Date of user.
    user_start_date: typing.Optional[str] = Field(None, alias='userStartDate')

    reports_to_email: typing.Optional[PeopleAndPermissionsCreateOrUpdateUserDetailsRequestReportsToEmail] = Field(None, alias='reportsToEmail')

    address_list: typing.Optional[PeopleAndPermissionsCreateOrUpdateUserDetailsRequestAddressList] = Field(None, alias='addressList')

    education_list: typing.Optional[PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationList] = Field(None, alias='educationList')

    contact_list: typing.Optional[PeopleAndPermissionsCreateOrUpdateUserDetailsRequestContactList] = Field(None, alias='contactList')

    financial_list: typing.Optional[PeopleAndPermissionsCreateOrUpdateUserDetailsRequestFinancialList] = Field(None, alias='financialList')

    # key - cfcode , value - cfvalue
    custom_field_values: typing.Optional[str] = Field(None, alias='customFieldValues')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
