# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from clay_hr_python_sdk.pydantic.address_model import AddressModel
from clay_hr_python_sdk.pydantic.award_model import AwardModel
from clay_hr_python_sdk.pydantic.bank_account_model import BankAccountModel
from clay_hr_python_sdk.pydantic.certification_model import CertificationModel
from clay_hr_python_sdk.pydantic.custom_field_value_model import CustomFieldValueModel
from clay_hr_python_sdk.pydantic.custom_table_model import CustomTableModel
from clay_hr_python_sdk.pydantic.department_model import DepartmentModel
from clay_hr_python_sdk.pydantic.education_model import EducationModel
from clay_hr_python_sdk.pydantic.employment_model import EmploymentModel
from clay_hr_python_sdk.pydantic.financial_model import FinancialModel
from clay_hr_python_sdk.pydantic.hr_calendar_model import HRCalendarModel
from clay_hr_python_sdk.pydantic.location_model import LocationModel
if TYPE_CHECKING:
    from clay_hr_python_sdk.pydantic.project_model import ProjectModel
from clay_hr_python_sdk.pydantic.skill_user_model import SkillUserModel
from clay_hr_python_sdk.pydantic.timestamp import Timestamp
from clay_hr_python_sdk.pydantic.user_model_reports_to_list_map import UserModelReportsToListMap
from clay_hr_python_sdk.pydantic.user_profile_model import UserProfileModel
from clay_hr_python_sdk.pydantic.user_thin_model import UserThinModel
from clay_hr_python_sdk.pydantic.user_training_model import UserTrainingModel
from clay_hr_python_sdk.pydantic.worker_type_model import WorkerTypeModel

class UserModel(BaseModel):
    user_id: int = Field(alias='userId')

    address_model_list: typing.Optional[typing.List[AddressModel]] = Field(None, alias='addressModelList')

    adp_associate_o_i_d: typing.Optional[str] = Field(None, alias='adpAssociateOID')

    allocation: typing.Optional[typing.Union[int, float]] = Field(None, alias='allocation')

    apple_user_identifier: typing.Optional[str] = Field(None, alias='appleUserIdentifier')

    assignments: typing.Optional[str] = Field(None, alias='assignments')

    award_model_list: typing.Optional[typing.List[AwardModel]] = Field(None, alias='awardModelList')

    bank_account_model: typing.Optional[BankAccountModel] = Field(None, alias='bankAccountModel')

    cal_week_pref: typing.Optional[str] = Field(None, alias='calWeekPref')

    calendar_id: typing.Optional[int] = Field(None, alias='calendarId')

    calendar_model: typing.Optional[HRCalendarModel] = Field(None, alias='calendarModel')

    candidate_id: typing.Optional[int] = Field(None, alias='candidateId')

    career_pathway_id: typing.Optional[int] = Field(None, alias='careerPathwayId')

    cell_phone: typing.Optional[str] = Field(None, alias='cellPhone')

    cid: typing.Optional[int] = Field(None, alias='cid')

    country_id: typing.Optional[int] = Field(None, alias='countryId')

    createts: typing.Optional[Timestamp] = Field(None, alias='createts')

    custom_field_value_model_list: typing.Optional[typing.List[CustomFieldValueModel]] = Field(None, alias='customFieldValueModelList')

    custom_table_model_list: typing.Optional['typing.List[CustomTableModel]'] = Field(None, alias='customTableModelList')

    department_model: typing.Optional[DepartmentModel] = Field(None, alias='departmentModel')

    department_name: typing.Optional[str] = Field(None, alias='departmentName')

    display_full_name: typing.Optional[str] = Field(None, alias='displayFullName')

    education_model_list: typing.Optional[typing.List[EducationModel]] = Field(None, alias='educationModelList')

    email: typing.Optional[str] = Field(None, alias='email')

    emp_id: typing.Optional[str] = Field(None, alias='empId')

    employment_model_list: typing.Optional[typing.List[EmploymentModel]] = Field(None, alias='employmentModelList')

    family_suffix: typing.Optional[str] = Field(None, alias='familySuffix')

    financial_model_list: typing.Optional[typing.List[FinancialModel]] = Field(None, alias='financialModelList')

    first_name: typing.Optional[str] = Field(None, alias='firstName')

    gender: typing.Optional[str] = Field(None, alias='gender')

    guid: typing.Optional[str] = Field(None, alias='guid')

    has_access: typing.Optional[bool] = Field(None, alias='hasAccess')

    hr_portal: typing.Optional[str] = Field(None, alias='hrPortal')

    im: typing.Optional[str] = Field(None, alias='im')

    image_name: typing.Optional[str] = Field(None, alias='imageName')

    is_view: typing.Optional[bool] = Field(None, alias='isView')

    job_grade: typing.Optional[str] = Field(None, alias='jobGrade')

    language_preference: typing.Optional[str] = Field(None, alias='languagePreference')

    last_name: typing.Optional[str] = Field(None, alias='lastName')

    last_update_username: typing.Optional[str] = Field(None, alias='lastUpdateUsername')

    lastupdatets: typing.Optional[date] = Field(None, alias='lastupdatets')

    lastupdateuserid: typing.Optional[int] = Field(None, alias='lastupdateuserid')

    license_model_list: typing.Optional[typing.List[CertificationModel]] = Field(None, alias='licenseModelList')

    location_model: typing.Optional[LocationModel] = Field(None, alias='locationModel')

    mfa_preference: typing.Optional[bool] = Field(None, alias='mfaPreference')

    mfa_secret_key: typing.Optional[str] = Field(None, alias='mfaSecretKey')

    middle_name: typing.Optional[str] = Field(None, alias='middleName')

    name_pronunciation: typing.Optional[str] = Field(None, alias='namePronunciation')

    notifications: typing.Optional[bool] = Field(None, alias='notifications')

    pa_id: typing.Optional[int] = Field(None, alias='paId')

    phone: typing.Optional[str] = Field(None, alias='phone')

    position: typing.Optional[str] = Field(None, alias='position')

    prefix_salutation: typing.Optional[str] = Field(None, alias='prefixSalutation')

    profile_id: typing.Optional[int] = Field(None, alias='profileId')

    profile_name: typing.Optional[str] = Field(None, alias='profileName')

    project_model: typing.Optional['ProjectModel'] = Field(None, alias='projectModel')

    project_model_list: typing.Optional['typing.List[ProjectModel]'] = Field(None, alias='projectModelList')

    ptoannual: typing.Optional[typing.Union[int, float]] = Field(None, alias='ptoannual')

    ptobalance: typing.Optional[typing.Union[int, float]] = Field(None, alias='ptobalance')

    qbo_pref: typing.Optional[int] = Field(None, alias='qboPref')

    relative_date: typing.Optional[str] = Field(None, alias='relativeDate')

    reports_to_list_map: typing.Optional[UserModelReportsToListMap] = Field(None, alias='reportsToListMap')

    second_last_name: typing.Optional[str] = Field(None, alias='secondLastName')

    short_name: typing.Optional[str] = Field(None, alias='shortName')

    skill_user_model_list: typing.Optional['typing.List[SkillUserModel]'] = Field(None, alias='skillUserModelList')

    star: typing.Optional[int] = Field(None, alias='star')

    status: typing.Optional[str] = Field(None, alias='status')

    stripe_id: typing.Optional[str] = Field(None, alias='stripeId')

    supervisor_model_list: typing.Optional[typing.List[UserThinModel]] = Field(None, alias='supervisorModelList')

    thumbnail: typing.Optional[str] = Field(None, alias='thumbnail')

    timecard_period_pref: typing.Optional[str] = Field(None, alias='timecardPeriodPref')

    timezone: typing.Optional[str] = Field(None, alias='timezone')

    tos_version: typing.Optional[str] = Field(None, alias='tosVersion')

    user_country: typing.Optional[str] = Field(None, alias='userCountry')

    user_date_format: typing.Optional[str] = Field(None, alias='userDateFormat')

    user_date_of_birth: typing.Optional[date] = Field(None, alias='userDateOfBirth')

    user_display_name: typing.Optional[str] = Field(None, alias='userDisplayName')

    user_end_date: typing.Optional[date] = Field(None, alias='userEndDate')

    user_name_format: typing.Optional[str] = Field(None, alias='userNameFormat')

    user_profile_model: typing.Optional[UserProfileModel] = Field(None, alias='userProfileModel')

    user_start_date: typing.Optional[date] = Field(None, alias='userStartDate')

    user_training_model_list: typing.Optional['typing.List[UserTrainingModel]'] = Field(None, alias='userTrainingModelList')

    user_type: typing.Optional[str] = Field(None, alias='userType')

    view: typing.Optional[bool] = Field(None, alias='view')

    worker_type: typing.Optional[str] = Field(None, alias='workerType')

    worker_type_model: typing.Optional[WorkerTypeModel] = Field(None, alias='workerTypeModel')

    working_days: typing.Optional[str] = Field(None, alias='workingDays')

    user_name: typing.Optional[str] = Field(None, alias='userName')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
