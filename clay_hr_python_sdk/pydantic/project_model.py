# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from clay_hr_python_sdk.pydantic.account_model import AccountModel
from clay_hr_python_sdk.pydantic.project_group_model import ProjectGroupModel
from clay_hr_python_sdk.pydantic.timestamp import Timestamp
from clay_hr_python_sdk.pydantic.user_model import UserModel
from clay_hr_python_sdk.pydantic.user_view_model import UserViewModel

class ProjectModel(BaseModel):
    probability: typing.Optional[int] = Field(None, alias='Probability')

    account: typing.Optional[int] = Field(None, alias='account')

    account_model: typing.Optional[AccountModel] = Field(None, alias='accountModel')

    account_name: typing.Optional[str] = Field(None, alias='accountName')

    billing_type: typing.Optional[str] = Field(None, alias='billing_type')

    cid: typing.Optional[int] = Field(None, alias='cid')

    contact_person: typing.Optional[int] = Field(None, alias='contactPerson')

    contact_person_name: typing.Optional[str] = Field(None, alias='contactPersonName')

    createts: typing.Optional[Timestamp] = Field(None, alias='createts')

    createuserid: typing.Optional[int] = Field(None, alias='createuserid')

    end_date: typing.Optional[date] = Field(None, alias='endDate')

    group_name: typing.Optional[str] = Field(None, alias='groupName')

    industry: typing.Optional[str] = Field(None, alias='industry')

    lastupdateuserid: typing.Optional[int] = Field(None, alias='lastupdateuserid')

    locationid: typing.Optional[int] = Field(None, alias='locationid')

    pgroupid: typing.Optional[int] = Field(None, alias='pgroupid')

    pm_mail: typing.Optional[str] = Field(None, alias='pmMail')

    probability: typing.Optional[int] = Field(None, alias='probability')

    proj_probability: typing.Optional[int] = Field(None, alias='projProbability')

    proj_status: typing.Optional[str] = Field(None, alias='projStatus')

    project_desc: typing.Optional[str] = Field(None, alias='projectDesc')

    project_group_model: typing.Optional[ProjectGroupModel] = Field(None, alias='projectGroupModel')

    project_id: typing.Optional[int] = Field(None, alias='projectId')

    project_name: typing.Optional[str] = Field(None, alias='projectName')

    puid: typing.Optional[str] = Field(None, alias='puid')

    report_method: typing.Optional[str] = Field(None, alias='reportMethod')

    short_code: typing.Optional[str] = Field(None, alias='shortCode')

    start_date: typing.Optional[date] = Field(None, alias='startDate')

    status: typing.Optional[str] = Field(None, alias='status')

    status_value: typing.Optional[str] = Field(None, alias='statusValue')

    user_model: typing.Optional[UserViewModel] = Field(None, alias='userModel')

    user_model_list: typing.Optional['typing.List[UserModel]'] = Field(None, alias='userModelList')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
