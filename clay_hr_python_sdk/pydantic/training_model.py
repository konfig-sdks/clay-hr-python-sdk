# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

if TYPE_CHECKING:
    from clay_hr_python_sdk.pydantic.dyna_form_slim_model import DynaFormSlimModel
from clay_hr_python_sdk.pydantic.timestamp import Timestamp

class TrainingModel(BaseModel):
    description: typing.Optional[str] = Field(None, alias='description')

    approval_status: typing.Optional[str] = Field(None, alias='approvalStatus')

    assigned_users_count: typing.Optional[int] = Field(None, alias='assignedUsersCount')

    attachment_id: typing.Optional[int] = Field(None, alias='attachmentId')

    charge_type: typing.Optional[str] = Field(None, alias='chargeType')

    cid: typing.Optional[int] = Field(None, alias='cid')

    city: typing.Optional[str] = Field(None, alias='city')

    content_mandatory: typing.Optional[int] = Field(None, alias='contentMandatory')

    content_u_r_l: typing.Optional[str] = Field(None, alias='contentURL')

    country: typing.Optional[str] = Field(None, alias='country')

    course_name: typing.Optional[str] = Field(None, alias='courseName')

    createts: typing.Optional[Timestamp] = Field(None, alias='createts')

    currency_code: typing.Optional[str] = Field(None, alias='currencyCode')

    dyna_form_slim_model: typing.Optional['DynaFormSlimModel'] = Field(None, alias='dynaFormSlimModel')

    end_date: typing.Optional[date] = Field(None, alias='endDate')

    external_source: typing.Optional[str] = Field(None, alias='externalSource')

    external_training_id: typing.Optional[int] = Field(None, alias='externalTrainingId')

    guid: typing.Optional[str] = Field(None, alias='guid')

    has_certificate: typing.Optional[int] = Field(None, alias='hasCertificate')

    hours: typing.Optional[typing.Union[int, float]] = Field(None, alias='hours')

    institution: typing.Optional[str] = Field(None, alias='institution')

    institution_url: typing.Optional[str] = Field(None, alias='institutionUrl')

    is_assigned_to_candidate: typing.Optional[int] = Field(None, alias='isAssignedToCandidate')

    is_assigned_to_user: typing.Optional[int] = Field(None, alias='isAssignedToUser')

    is_user_assigned: typing.Optional[bool] = Field(None, alias='isUserAssigned')

    isactive: typing.Optional[int] = Field(None, alias='isactive')

    parent_training_id: typing.Optional[int] = Field(None, alias='parentTrainingId')

    price: typing.Optional[typing.Union[int, float]] = Field(None, alias='price')

    rating: typing.Optional[typing.Union[int, float]] = Field(None, alias='rating')

    self_assign: typing.Optional[int] = Field(None, alias='selfAssign')

    start_date: typing.Optional[date] = Field(None, alias='startDate')

    state: typing.Optional[str] = Field(None, alias='state')

    status: typing.Optional[str] = Field(None, alias='status')

    study_course: typing.Optional[str] = Field(None, alias='studyCourse')

    thumbnail: typing.Optional[str] = Field(None, alias='thumbnail')

    training_id: typing.Optional[int] = Field(None, alias='trainingId')

    update_skill_level: typing.Optional[int] = Field(None, alias='updateSkillLevel')

    url: typing.Optional[str] = Field(None, alias='url')

    user_assigned: typing.Optional[bool] = Field(None, alias='userAssigned')

    video_url: typing.Optional[str] = Field(None, alias='videoUrl')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
