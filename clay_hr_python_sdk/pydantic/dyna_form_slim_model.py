# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from clay_hr_python_sdk.pydantic.timestamp import Timestamp
from clay_hr_python_sdk.pydantic.user_group_model import UserGroupModel
if TYPE_CHECKING:
    from clay_hr_python_sdk.pydantic.user_model import UserModel
from clay_hr_python_sdk.pydantic.user_view_model import UserViewModel

class DynaFormSlimModel(BaseModel):
    description: typing.Optional[str] = Field(None, alias='description')

    anonymous: typing.Optional[int] = Field(None, alias='anonymous')

    attempt_limit: typing.Optional[str] = Field(None, alias='attemptLimit')

    availability: typing.Optional[str] = Field(None, alias='availability')

    cid: typing.Optional[int] = Field(None, alias='cid')

    create_user_model: typing.Optional['UserModel'] = Field(None, alias='createUserModel')

    create_user_view_model: typing.Optional[UserViewModel] = Field(None, alias='createUserViewModel')

    createts: typing.Optional[Timestamp] = Field(None, alias='createts')

    data_flow: typing.Optional[str] = Field(None, alias='dataFlow')

    dyna_form_code: typing.Optional[str] = Field(None, alias='dynaFormCode')

    dynamic_form_id: typing.Optional[int] = Field(None, alias='dynamicFormId')

    form_type: typing.Optional[str] = Field(None, alias='formType')

    layout: typing.Optional[str] = Field(None, alias='layout')

    mapped_entity: typing.Optional[str] = Field(None, alias='mappedEntity')

    name: typing.Optional[str] = Field(None, alias='name')

    presentation_style: typing.Optional[str] = Field(None, alias='presentationStyle')

    public_summary: typing.Optional[bool] = Field(None, alias='publicSummary')

    sec_sequence: typing.Optional[str] = Field(None, alias='secSequence')

    show_correct: typing.Optional[bool] = Field(None, alias='showCorrect')

    status: typing.Optional[str] = Field(None, alias='status')

    threshold_score: typing.Optional[typing.Union[int, float]] = Field(None, alias='thresholdScore')

    time_limit: typing.Optional[int] = Field(None, alias='timeLimit')

    updatets: typing.Optional[Timestamp] = Field(None, alias='updatets')

    user_group_model: typing.Optional[UserGroupModel] = Field(None, alias='userGroupModel')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
