# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from clay_hr_python_sdk.pydantic.people_and_permissions_get_users_response_data_item_user_reporter_list import PeopleAndPermissionsGetUsersResponseDataItemUserReporterList

class PeopleAndPermissionsGetUsersResponseDataItem(BaseModel):
    resource_id: typing.Optional[str] = Field(None, alias='resourceId')

    name: typing.Optional[str] = Field(None, alias='name')

    position: typing.Optional[str] = Field(None, alias='position')

    assignments: typing.Optional[str] = Field(None, alias='assignments')

    allocation: typing.Optional[str] = Field(None, alias='allocation')

    start_date: typing.Optional[str] = Field(None, alias='startDate')

    end_date: typing.Optional[str] = Field(None, alias='endDate')

    worker_type: typing.Optional[str] = Field(None, alias='workerType')

    location: typing.Optional[str] = Field(None, alias='location')

    time_zone: typing.Optional[str] = Field(None, alias='timeZone')

    notes: typing.Optional[str] = Field(None, alias='notes')

    email_address: typing.Optional[str] = Field(None, alias='emailAddress')

    phone: typing.Optional[str] = Field(None, alias='phone')

    im: typing.Optional[str] = Field(None, alias='im')

    date_of_birth: typing.Optional[str] = Field(None, alias='dateOfBirth')

    gender: typing.Optional[str] = Field(None, alias='gender')

    image_name: typing.Optional[str] = Field(None, alias='imageName')

    custom_field_list: typing.Optional[str] = Field(None, alias='customFieldList')

    department: typing.Optional[str] = Field(None, alias='department')

    department_label: typing.Optional[str] = Field(None, alias='departmentLabel')

    profile_name: typing.Optional[str] = Field(None, alias='profileName')

    user_reporter_list: typing.Optional[PeopleAndPermissionsGetUsersResponseDataItemUserReporterList] = Field(None, alias='userReporterList')

    # The unique identity of the employee. 
    emp_id: typing.Optional[str] = Field(None, alias='empId')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
