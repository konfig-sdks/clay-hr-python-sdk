# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from clay_hr_python_sdk.pydantic.custom_table_column_model import CustomTableColumnModel
from clay_hr_python_sdk.pydantic.custom_table_value_model import CustomTableValueModel
from clay_hr_python_sdk.pydantic.timestamp import Timestamp
from clay_hr_python_sdk.pydantic.user_group_model import UserGroupModel
if TYPE_CHECKING:
    from clay_hr_python_sdk.pydantic.user_model import UserModel

class CustomTableModel(BaseModel):
    candidate_access: typing.Optional[str] = Field(None, alias='candidateAccess')

    cid: typing.Optional[int] = Field(None, alias='cid')

    create_user_model: typing.Optional['UserModel'] = Field(None, alias='createUserModel')

    createts: typing.Optional[Timestamp] = Field(None, alias='createts')

    ct_column_list: typing.Optional[typing.List[CustomTableColumnModel]] = Field(None, alias='ctColumnList')

    ct_value_list: typing.Optional[typing.List[CustomTableValueModel]] = Field(None, alias='ctValueList')

    custom_table_id: typing.Optional[int] = Field(None, alias='customTableId')

    help_text: typing.Optional[str] = Field(None, alias='helpText')

    object_type: typing.Optional[str] = Field(None, alias='objectType')

    read_access: typing.Optional[str] = Field(None, alias='readAccess')

    read_user_group_id: typing.Optional[int] = Field(None, alias='readUserGroupId')

    read_user_group_model: typing.Optional[UserGroupModel] = Field(None, alias='readUserGroupModel')

    sequence: typing.Optional[int] = Field(None, alias='sequence')

    table_name: typing.Optional[str] = Field(None, alias='tableName')

    user_access: typing.Optional[str] = Field(None, alias='userAccess')

    write_access: typing.Optional[str] = Field(None, alias='writeAccess')

    write_user_group_id: typing.Optional[int] = Field(None, alias='writeUserGroupId')

    write_user_group_model: typing.Optional[UserGroupModel] = Field(None, alias='writeUserGroupModel')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
