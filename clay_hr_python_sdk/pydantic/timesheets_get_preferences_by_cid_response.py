# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class TimesheetsGetPreferencesByCidResponse(BaseModel):
    timesheet_start_day: typing.Optional[str] = Field(None, alias='timesheetStartDay')

    billable_pref_value: typing.Optional[str] = Field(None, alias='billablePrefValue')

    future_tc_pref_value: typing.Optional[str] = Field(None, alias='futureTcPrefValue')

    end_date: typing.Optional[str] = Field(None, alias='endDate')

    project_area_pref_value: typing.Optional[str] = Field(None, alias='projectAreaPrefValue')

    compliance_msg: typing.Optional[str] = Field(None, alias='complianceMsg')

    activity_type_pref_value: typing.Optional[str] = Field(None, alias='activityTypePrefValue')

    mobile_app_clock_in_pref_value: typing.Optional[str] = Field(None, alias='mobileAppClockInPrefValue')

    allocated_project_pref_value: typing.Optional[str] = Field(None, alias='allocatedProjectPrefValue')

    add_edit_tc_pref_value: typing.Optional[str] = Field(None, alias='addEditTcPrefValue')

    backdated_tc_reason_pref_value: typing.Optional[str] = Field(None, alias='backdatedTcReasonPrefValue')

    timesheet_period: typing.Optional[str] = Field(None, alias='timesheetPeriod')

    category_pref_value: typing.Optional[str] = Field(None, alias='categoryPrefValue')

    start_time_end_time_required: typing.Optional[str] = Field(None, alias='startTimeEndTimeRequired')

    working_hrs_per_day: typing.Optional[str] = Field(None, alias='workingHrsPerDay')

    kiosk_app_clock_in_pref_value: typing.Optional[str] = Field(None, alias='kioskAppClockInPrefValue')

    qr_code_clock_in_pref_value: typing.Optional[str] = Field(None, alias='qrCodeClockInPrefValue')

    tc_approval_reason_pref_value: typing.Optional[str] = Field(None, alias='tcApprovalReasonPrefValue')

    clock_in_outside_geofence_preference_value: typing.Optional[str] = Field(None, alias='clockInOutsideGeofencePreferenceValue')

    start_date: typing.Optional[str] = Field(None, alias='startDate')

    tc_rejection_reason_pref_value: typing.Optional[str] = Field(None, alias='tcRejectionReasonPrefValue')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
