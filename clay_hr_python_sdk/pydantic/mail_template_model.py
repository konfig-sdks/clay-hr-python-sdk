# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from clay_hr_python_sdk.pydantic.timestamp import Timestamp
from clay_hr_python_sdk.pydantic.user_model import UserModel

class MailTemplateModel(BaseModel):
    title: typing.Optional[str] = Field(None, alias='title')

    cid: typing.Optional[int] = Field(None, alias='cid')

    communication_type: typing.Optional[str] = Field(None, alias='communicationType')

    create_user_model: typing.Optional[UserModel] = Field(None, alias='createUserModel')

    createts: typing.Optional[Timestamp] = Field(None, alias='createts')

    footer_additional_info: typing.Optional[str] = Field(None, alias='footerAdditionalInfo')

    footer_company_address: typing.Optional[bool] = Field(None, alias='footerCompanyAddress')

    footer_company_logo: typing.Optional[bool] = Field(None, alias='footerCompanyLogo')

    footer_content_alignmnet: typing.Optional[str] = Field(None, alias='footerContentAlignmnet')

    header_additional_info: typing.Optional[str] = Field(None, alias='headerAdditionalInfo')

    header_company_address: typing.Optional[bool] = Field(None, alias='headerCompanyAddress')

    header_company_logo: typing.Optional[bool] = Field(None, alias='headerCompanyLogo')

    header_content_alignment: typing.Optional[str] = Field(None, alias='headerContentAlignment')

    lastupdatets: typing.Optional[Timestamp] = Field(None, alias='lastupdatets')

    message: typing.Optional[str] = Field(None, alias='message')

    object: typing.Optional[str] = Field(None, alias='object')

    subject: typing.Optional[str] = Field(None, alias='subject')

    system_usage: typing.Optional[str] = Field(None, alias='systemUsage')

    template_id: typing.Optional[int] = Field(None, alias='templateId')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
