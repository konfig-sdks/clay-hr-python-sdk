# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from clay_hr_python_sdk.pydantic.feedback_list_feedback_response_feedback_list_item_assigned_user_model import FeedbackListFeedbackResponseFeedbackListItemAssignedUserModel

class FeedbackListFeedbackResponseFeedbackListItem(BaseModel):
    feedbackid: typing.Optional[str] = Field(None, alias='feedbackid')

    feedback: typing.Optional[str] = Field(None, alias='feedback')

    feedback_desc: typing.Optional[str] = Field(None, alias='feedbackDesc')

    assigned_user_model: typing.Optional[FeedbackListFeedbackResponseFeedbackListItemAssignedUserModel] = Field(None, alias='assignedUserModel')

    cid: typing.Optional[str] = Field(None, alias='cid')

    createts: typing.Optional[str] = Field(None, alias='createts')

    pf_skill_list: typing.Optional[str] = Field(None, alias='pfSkillList')

    create_user_model: typing.Optional[str] = Field(None, alias='createUserModel')

    assessment: typing.Optional[str] = Field(None, alias='assessment')

    status: typing.Optional[str] = Field(None, alias='status')

    recipient_status: typing.Optional[str] = Field(None, alias='recipientStatus')

    object_type: typing.Optional[str] = Field(None, alias='objectType')

    sentiment_code: typing.Optional[str] = Field(None, alias='sentimentCode')

    sentiment_score: typing.Optional[str] = Field(None, alias='sentimentScore')

    pf_badge_list: typing.Optional[str] = Field(None, alias='pfBadgeList')

    user_name: typing.Optional[str] = Field(None, alias='userName')

    custom_field_model_list: typing.Optional[str] = Field(None, alias='customFieldModelList')

    badge_names: typing.Optional[str] = Field(None, alias='badgeNames')

    attachment_model_list: typing.Optional[str] = Field(None, alias='attachmentModelList')

    wall_name: typing.Optional[str] = Field(None, alias='wallName')

    skill_string: typing.Optional[str] = Field(None, alias='skillString')

    reaction_type: typing.Optional[str] = Field(None, alias='reactionType')

    id: typing.Optional[str] = Field(None, alias='id')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
