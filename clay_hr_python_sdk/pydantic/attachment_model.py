# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from clay_hr_python_sdk.pydantic.attachment_folder_model import AttachmentFolderModel
from clay_hr_python_sdk.pydantic.object_access_model import ObjectAccessModel
if TYPE_CHECKING:
    from clay_hr_python_sdk.pydantic.project_model import ProjectModel
from clay_hr_python_sdk.pydantic.state_country_model import StateCountryModel
from clay_hr_python_sdk.pydantic.user_group_model import UserGroupModel
if TYPE_CHECKING:
    from clay_hr_python_sdk.pydantic.user_model import UserModel

class AttachmentModel(BaseModel):
    access: typing.Optional[str] = Field(None, alias='access')

    ann_id: typing.Optional[int] = Field(None, alias='annId')

    appraisal_assignment_id: typing.Optional[int] = Field(None, alias='appraisalAssignmentId')

    appraisal_item_response_id: typing.Optional[int] = Field(None, alias='appraisalItemResponseId')

    appraisalid: typing.Optional[int] = Field(None, alias='appraisalid')

    assetid: typing.Optional[int] = Field(None, alias='assetid')

    atch_type: typing.Optional[str] = Field(None, alias='atchType')

    attach_user_model: typing.Optional['UserModel'] = Field(None, alias='attachUserModel')

    attachid: typing.Optional[int] = Field(None, alias='attachid')

    attachment_folder_model: typing.Optional[AttachmentFolderModel] = Field(None, alias='attachmentFolderModel')

    authkey: typing.Optional[str] = Field(None, alias='authkey')

    candidate_access: typing.Optional[bool] = Field(None, alias='candidateAccess')

    candidateid: typing.Optional[int] = Field(None, alias='candidateid')

    category: typing.Optional[str] = Field(None, alias='category')

    cid: typing.Optional[int] = Field(None, alias='cid')

    comments: typing.Optional[str] = Field(None, alias='comments')

    createts: typing.Optional[datetime] = Field(None, alias='createts')

    createuserid: typing.Optional[int] = Field(None, alias='createuserid')

    customer_id: typing.Optional[int] = Field(None, alias='customerId')

    d_l_expiry_date: typing.Optional[str] = Field(None, alias='dLExpiryDate')

    d_l_issue_date: typing.Optional[str] = Field(None, alias='dLIssueDate')

    document_content: typing.Optional[str] = Field(None, alias='documentContent')

    document_expiry_date: typing.Optional[datetime] = Field(None, alias='documentExpiryDate')

    document_type: typing.Optional[str] = Field(None, alias='documentType')

    documnet_issue_date: typing.Optional[datetime] = Field(None, alias='documnetIssueDate')

    expense_item_id: typing.Optional[int] = Field(None, alias='expenseItemId')

    expenseid: typing.Optional[int] = Field(None, alias='expenseid')

    file_extn: typing.Optional[str] = Field(None, alias='fileExtn')

    filename: typing.Optional[str] = Field(None, alias='filename')

    folder: typing.Optional[str] = Field(None, alias='folder')

    folder_id: typing.Optional[int] = Field(None, alias='folder_id')

    global_: typing.Optional[bool] = Field(None, alias='global')

    goalid: typing.Optional[int] = Field(None, alias='goalid')

    language: typing.Optional[str] = Field(None, alias='language')

    leaveid: typing.Optional[int] = Field(None, alias='leaveid')

    multi_signing: typing.Optional[int] = Field(None, alias='multiSigning')

    object_access_model_list: typing.Optional[typing.List[ObjectAccessModel]] = Field(None, alias='objectAccessModelList')

    object_type: typing.Optional[str] = Field(None, alias='objectType')

    obtype: typing.Optional[str] = Field(None, alias='obtype')

    pay_stub_id: typing.Optional[int] = Field(None, alias='payStubId')

    positionid: typing.Optional[int] = Field(None, alias='positionid')

    project_model: typing.Optional['ProjectModel'] = Field(None, alias='projectModel')

    projectid: typing.Optional[int] = Field(None, alias='projectid')

    resume: typing.Optional[bool] = Field(None, alias='resume')

    ruleid: typing.Optional[int] = Field(None, alias='ruleid')

    s3id: typing.Optional[str] = Field(None, alias='s3id')

    sign_now_doc_id: typing.Optional[str] = Field(None, alias='signNowDocId')

    sign_now_template_id: typing.Optional[str] = Field(None, alias='signNowTemplateId')

    sign_status: typing.Optional[str] = Field(None, alias='signStatus')

    signature_id: typing.Optional[str] = Field(None, alias='signatureId')

    signature_request_id: typing.Optional[str] = Field(None, alias='signatureRequestId')

    signing_date: typing.Optional[datetime] = Field(None, alias='signingDate')

    size: typing.Optional[int] = Field(None, alias='size')

    skilluser_id: typing.Optional[int] = Field(None, alias='skilluserId')

    state_country_model: typing.Optional[StateCountryModel] = Field(None, alias='stateCountryModel')

    status: typing.Optional[str] = Field(None, alias='status')

    task_id: typing.Optional[int] = Field(None, alias='taskId')

    ticket_id: typing.Optional[int] = Field(None, alias='ticketId')

    timecardid: typing.Optional[int] = Field(None, alias='timecardid')

    topic: typing.Optional[str] = Field(None, alias='topic')

    training_id: typing.Optional[int] = Field(None, alias='trainingId')

    user_access: typing.Optional[int] = Field(None, alias='userAccess')

    user_group_model: typing.Optional[UserGroupModel] = Field(None, alias='userGroupModel')

    user_model: typing.Optional['UserModel'] = Field(None, alias='userModel')

    userid: typing.Optional[int] = Field(None, alias='userid')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
