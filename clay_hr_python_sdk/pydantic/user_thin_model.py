# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from clay_hr_python_sdk.pydantic.timestamp import Timestamp
from clay_hr_python_sdk.pydantic.worker_type_model import WorkerTypeModel

class UserThinModel(BaseModel):
    adp_associate_o_i_d: typing.Optional[str] = Field(None, alias='adpAssociateOID')

    career_pathway_id: typing.Optional[int] = Field(None, alias='careerPathwayId')

    cell_phone: typing.Optional[str] = Field(None, alias='cellPhone')

    cid: typing.Optional[int] = Field(None, alias='cid')

    country_id: typing.Optional[int] = Field(None, alias='countryId')

    createts: typing.Optional[Timestamp] = Field(None, alias='createts')

    department_i_d: typing.Optional[int] = Field(None, alias='departmentID')

    display_full_name: typing.Optional[str] = Field(None, alias='displayFullName')

    email: typing.Optional[str] = Field(None, alias='email')

    emp_id: typing.Optional[str] = Field(None, alias='empId')

    family_suffix: typing.Optional[str] = Field(None, alias='familySuffix')

    first_name: typing.Optional[str] = Field(None, alias='firstName')

    gender: typing.Optional[str] = Field(None, alias='gender')

    guid: typing.Optional[str] = Field(None, alias='guid')

    hr_portal: typing.Optional[str] = Field(None, alias='hrPortal')

    im: typing.Optional[str] = Field(None, alias='im')

    image_name: typing.Optional[str] = Field(None, alias='imageName')

    job_grade: typing.Optional[str] = Field(None, alias='jobGrade')

    language_preference: typing.Optional[str] = Field(None, alias='languagePreference')

    last_name: typing.Optional[str] = Field(None, alias='lastName')

    lastupdatets: typing.Optional[date] = Field(None, alias='lastupdatets')

    lastupdateuserid: typing.Optional[int] = Field(None, alias='lastupdateuserid')

    location_id: typing.Optional[int] = Field(None, alias='locationId')

    middle_name: typing.Optional[str] = Field(None, alias='middleName')

    pa_id: typing.Optional[int] = Field(None, alias='paId')

    passcode: typing.Optional[str] = Field(None, alias='passcode')

    phone: typing.Optional[str] = Field(None, alias='phone')

    position: typing.Optional[str] = Field(None, alias='position')

    prefix_salutation: typing.Optional[str] = Field(None, alias='prefixSalutation')

    profile_id: typing.Optional[int] = Field(None, alias='profileId')

    ptoannual: typing.Optional[typing.Union[int, float]] = Field(None, alias='ptoannual')

    ptobalance: typing.Optional[typing.Union[int, float]] = Field(None, alias='ptobalance')

    relative_date: typing.Optional[str] = Field(None, alias='relativeDate')

    second_last_name: typing.Optional[str] = Field(None, alias='secondLastName')

    short_name: typing.Optional[str] = Field(None, alias='shortName')

    star: typing.Optional[int] = Field(None, alias='star')

    status: typing.Optional[str] = Field(None, alias='status')

    stripe_id: typing.Optional[str] = Field(None, alias='stripeId')

    thumbnail: typing.Optional[str] = Field(None, alias='thumbnail')

    timecard_period_pref: typing.Optional[str] = Field(None, alias='timecardPeriodPref')

    timezone: typing.Optional[str] = Field(None, alias='timezone')

    tos_version: typing.Optional[str] = Field(None, alias='tosVersion')

    user_date_format: typing.Optional[str] = Field(None, alias='userDateFormat')

    user_display_name: typing.Optional[str] = Field(None, alias='userDisplayName')

    user_id: typing.Optional[int] = Field(None, alias='userId')

    user_name_format: typing.Optional[str] = Field(None, alias='userNameFormat')

    user_start_date: typing.Optional[date] = Field(None, alias='userStartDate')

    user_type: typing.Optional[str] = Field(None, alias='userType')

    worker_type: typing.Optional[str] = Field(None, alias='workerType')

    worker_type_model: typing.Optional[WorkerTypeModel] = Field(None, alias='workerTypeModel')

    user_name: typing.Optional[str] = Field(None, alias='userName')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
