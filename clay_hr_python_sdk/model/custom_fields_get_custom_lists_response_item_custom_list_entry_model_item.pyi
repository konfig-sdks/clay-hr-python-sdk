# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from clay_hr_python_sdk import schemas  # noqa: F401


class CustomFieldsGetCustomListsResponseItemCustomListEntryModelItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            entryId = schemas.StrSchema
            entryCode = schemas.StrSchema
            entryValue = schemas.StrSchema
            listId = schemas.StrSchema
            cid = schemas.StrSchema
            __annotations__ = {
                "entryId": entryId,
                "entryCode": entryCode,
                "entryValue": entryValue,
                "listId": listId,
                "cid": cid,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["entryId"]) -> MetaOapg.properties.entryId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["entryCode"]) -> MetaOapg.properties.entryCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["entryValue"]) -> MetaOapg.properties.entryValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["listId"]) -> MetaOapg.properties.listId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cid"]) -> MetaOapg.properties.cid: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["entryId", "entryCode", "entryValue", "listId", "cid", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["entryId"]) -> typing.Union[MetaOapg.properties.entryId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["entryCode"]) -> typing.Union[MetaOapg.properties.entryCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["entryValue"]) -> typing.Union[MetaOapg.properties.entryValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["listId"]) -> typing.Union[MetaOapg.properties.listId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cid"]) -> typing.Union[MetaOapg.properties.cid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["entryId", "entryCode", "entryValue", "listId", "cid", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        entryId: typing.Union[MetaOapg.properties.entryId, str, schemas.Unset] = schemas.unset,
        entryCode: typing.Union[MetaOapg.properties.entryCode, str, schemas.Unset] = schemas.unset,
        entryValue: typing.Union[MetaOapg.properties.entryValue, str, schemas.Unset] = schemas.unset,
        listId: typing.Union[MetaOapg.properties.listId, str, schemas.Unset] = schemas.unset,
        cid: typing.Union[MetaOapg.properties.cid, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CustomFieldsGetCustomListsResponseItemCustomListEntryModelItem':
        return super().__new__(
            cls,
            *args,
            entryId=entryId,
            entryCode=entryCode,
            entryValue=entryValue,
            listId=listId,
            cid=cid,
            _configuration=_configuration,
            **kwargs,
        )
