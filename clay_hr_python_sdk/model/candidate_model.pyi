# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from clay_hr_python_sdk import schemas  # noqa: F401


class CandidateModel(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            acceptance1 = schemas.BoolSchema
            acceptance2 = schemas.BoolSchema
            accessCode = schemas.StrSchema
            
            
            class addressModelList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['AddressModel']:
                        return AddressModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['AddressModel'], typing.List['AddressModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'addressModelList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'AddressModel':
                    return super().__getitem__(i)
        
            @staticmethod
            def assessmentModel() -> typing.Type['AssessmentModel']:
                return AssessmentModel
            
            
            class attachmentModelList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['AttachmentModel']:
                        return AttachmentModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['AttachmentModel'], typing.List['AttachmentModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'attachmentModelList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'AttachmentModel':
                    return super().__getitem__(i)
            candidateLock = schemas.Int32Schema
            
            
            class candidatePositionsModelList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['CandidateApplicationsModel']:
                        return CandidateApplicationsModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['CandidateApplicationsModel'], typing.List['CandidateApplicationsModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'candidatePositionsModelList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'CandidateApplicationsModel':
                    return super().__getitem__(i)
        
            @staticmethod
            def candidateStatusModel() -> typing.Type['CandidateStatusModel']:
                return CandidateStatusModel
            
            
            class certificationModelList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['CertificationModel']:
                        return CertificationModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['CertificationModel'], typing.List['CertificationModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'certificationModelList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'CertificationModel':
                    return super().__getitem__(i)
            cid = schemas.Int32Schema
            cloudSearchSync = schemas.Int32Schema
        
            @staticmethod
            def createts() -> typing.Type['Timestamp']:
                return Timestamp
            createuserid = schemas.Int32Schema
            
            
            class customFieldValueModelList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['CustomFieldValueModel']:
                        return CustomFieldValueModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['CustomFieldValueModel'], typing.List['CustomFieldValueModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'customFieldValueModelList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'CustomFieldValueModel':
                    return super().__getitem__(i)
            
            
            class customfieldvalue(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['CustomFieldValueModel']:
                        return CustomFieldValueModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['CustomFieldValueModel'], typing.List['CustomFieldValueModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'customfieldvalue':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'CustomFieldValueModel':
                    return super().__getitem__(i)
            dateOfBirth = schemas.DateSchema
            
            
            class educationModelList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['EducationModel']:
                        return EducationModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['EducationModel'], typing.List['EducationModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'educationModelList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'EducationModel':
                    return super().__getitem__(i)
            educationStr = schemas.StrSchema
            email = schemas.StrSchema
            
            
            class employmentModelList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['EmploymentModel']:
                        return EmploymentModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['EmploymentModel'], typing.List['EmploymentModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'employmentModelList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'EmploymentModel':
                    return super().__getitem__(i)
            isInternalCand = schemas.BoolSchema
            isNewCand = schemas.BoolSchema
            languagePreference = schemas.StrSchema
            lastupdateuserid = schemas.Int32Schema
            name = schemas.StrSchema
            notes = schemas.StrSchema
            passwordHash = schemas.StrSchema
            phone = schemas.StrSchema
        
            @staticmethod
            def positionModel() -> typing.Type['PositionModel']:
                return PositionModel
            positionName = schemas.StrSchema
            recruitId = schemas.Int32Schema
            recruiter = schemas.StrSchema
            recruiterUserId = schemas.Int32Schema
            referrer = schemas.StrSchema
            referrerId = schemas.Int32Schema
            salaryAmount = schemas.Int32Schema
            salaryCurrencyCode = schemas.StrSchema
            score = schemas.Float64Schema
            
            
            class skillModelList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['SkillUserModel']:
                        return SkillUserModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['SkillUserModel'], typing.List['SkillUserModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'skillModelList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'SkillUserModel':
                    return super().__getitem__(i)
            source = schemas.StrSchema
            status = schemas.StrSchema
            statusid = schemas.Int32Schema
            summaryByCandidate = schemas.StrSchema
            systemReco = schemas.StrSchema
            systemRecoHelp = schemas.StrSchema
            templateId = schemas.Int32Schema
            timezone = schemas.StrSchema
            trainingAccess = schemas.BoolSchema
        
            @staticmethod
            def updatedOn() -> typing.Type['Timestamp']:
                return Timestamp
            userId = schemas.Int32Schema
            verificationCode = schemas.Int32Schema
            verified = schemas.StrSchema
            workflowId = schemas.Int32Schema
        
            @staticmethod
            def workflowModel() -> typing.Type['WorkflowModel']:
                return WorkflowModel
            workflowName = schemas.StrSchema
            __annotations__ = {
                "acceptance1": acceptance1,
                "acceptance2": acceptance2,
                "accessCode": accessCode,
                "addressModelList": addressModelList,
                "assessmentModel": assessmentModel,
                "attachmentModelList": attachmentModelList,
                "candidateLock": candidateLock,
                "candidatePositionsModelList": candidatePositionsModelList,
                "candidateStatusModel": candidateStatusModel,
                "certificationModelList": certificationModelList,
                "cid": cid,
                "cloudSearchSync": cloudSearchSync,
                "createts": createts,
                "createuserid": createuserid,
                "customFieldValueModelList": customFieldValueModelList,
                "customfieldvalue": customfieldvalue,
                "dateOfBirth": dateOfBirth,
                "educationModelList": educationModelList,
                "educationStr": educationStr,
                "email": email,
                "employmentModelList": employmentModelList,
                "isInternalCand": isInternalCand,
                "isNewCand": isNewCand,
                "languagePreference": languagePreference,
                "lastupdateuserid": lastupdateuserid,
                "name": name,
                "notes": notes,
                "passwordHash": passwordHash,
                "phone": phone,
                "positionModel": positionModel,
                "positionName": positionName,
                "recruitId": recruitId,
                "recruiter": recruiter,
                "recruiterUserId": recruiterUserId,
                "referrer": referrer,
                "referrerId": referrerId,
                "salaryAmount": salaryAmount,
                "salaryCurrencyCode": salaryCurrencyCode,
                "score": score,
                "skillModelList": skillModelList,
                "source": source,
                "status": status,
                "statusid": statusid,
                "summaryByCandidate": summaryByCandidate,
                "systemReco": systemReco,
                "systemRecoHelp": systemRecoHelp,
                "templateId": templateId,
                "timezone": timezone,
                "trainingAccess": trainingAccess,
                "updatedOn": updatedOn,
                "userId": userId,
                "verificationCode": verificationCode,
                "verified": verified,
                "workflowId": workflowId,
                "workflowModel": workflowModel,
                "workflowName": workflowName,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["acceptance1"]) -> MetaOapg.properties.acceptance1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["acceptance2"]) -> MetaOapg.properties.acceptance2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["accessCode"]) -> MetaOapg.properties.accessCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressModelList"]) -> MetaOapg.properties.addressModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["assessmentModel"]) -> 'AssessmentModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["attachmentModelList"]) -> MetaOapg.properties.attachmentModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["candidateLock"]) -> MetaOapg.properties.candidateLock: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["candidatePositionsModelList"]) -> MetaOapg.properties.candidatePositionsModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["candidateStatusModel"]) -> 'CandidateStatusModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["certificationModelList"]) -> MetaOapg.properties.certificationModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cid"]) -> MetaOapg.properties.cid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cloudSearchSync"]) -> MetaOapg.properties.cloudSearchSync: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createts"]) -> 'Timestamp': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createuserid"]) -> MetaOapg.properties.createuserid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customFieldValueModelList"]) -> MetaOapg.properties.customFieldValueModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customfieldvalue"]) -> MetaOapg.properties.customfieldvalue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dateOfBirth"]) -> MetaOapg.properties.dateOfBirth: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["educationModelList"]) -> MetaOapg.properties.educationModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["educationStr"]) -> MetaOapg.properties.educationStr: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["email"]) -> MetaOapg.properties.email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employmentModelList"]) -> MetaOapg.properties.employmentModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isInternalCand"]) -> MetaOapg.properties.isInternalCand: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isNewCand"]) -> MetaOapg.properties.isNewCand: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["languagePreference"]) -> MetaOapg.properties.languagePreference: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastupdateuserid"]) -> MetaOapg.properties.lastupdateuserid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["notes"]) -> MetaOapg.properties.notes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["passwordHash"]) -> MetaOapg.properties.passwordHash: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["phone"]) -> MetaOapg.properties.phone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["positionModel"]) -> 'PositionModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["positionName"]) -> MetaOapg.properties.positionName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["recruitId"]) -> MetaOapg.properties.recruitId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["recruiter"]) -> MetaOapg.properties.recruiter: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["recruiterUserId"]) -> MetaOapg.properties.recruiterUserId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["referrer"]) -> MetaOapg.properties.referrer: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["referrerId"]) -> MetaOapg.properties.referrerId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["salaryAmount"]) -> MetaOapg.properties.salaryAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["salaryCurrencyCode"]) -> MetaOapg.properties.salaryCurrencyCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["score"]) -> MetaOapg.properties.score: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["skillModelList"]) -> MetaOapg.properties.skillModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["source"]) -> MetaOapg.properties.source: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statusid"]) -> MetaOapg.properties.statusid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["summaryByCandidate"]) -> MetaOapg.properties.summaryByCandidate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["systemReco"]) -> MetaOapg.properties.systemReco: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["systemRecoHelp"]) -> MetaOapg.properties.systemRecoHelp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["templateId"]) -> MetaOapg.properties.templateId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timezone"]) -> MetaOapg.properties.timezone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["trainingAccess"]) -> MetaOapg.properties.trainingAccess: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["updatedOn"]) -> 'Timestamp': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userId"]) -> MetaOapg.properties.userId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["verificationCode"]) -> MetaOapg.properties.verificationCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["verified"]) -> MetaOapg.properties.verified: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["workflowId"]) -> MetaOapg.properties.workflowId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["workflowModel"]) -> 'WorkflowModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["workflowName"]) -> MetaOapg.properties.workflowName: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["acceptance1", "acceptance2", "accessCode", "addressModelList", "assessmentModel", "attachmentModelList", "candidateLock", "candidatePositionsModelList", "candidateStatusModel", "certificationModelList", "cid", "cloudSearchSync", "createts", "createuserid", "customFieldValueModelList", "customfieldvalue", "dateOfBirth", "educationModelList", "educationStr", "email", "employmentModelList", "isInternalCand", "isNewCand", "languagePreference", "lastupdateuserid", "name", "notes", "passwordHash", "phone", "positionModel", "positionName", "recruitId", "recruiter", "recruiterUserId", "referrer", "referrerId", "salaryAmount", "salaryCurrencyCode", "score", "skillModelList", "source", "status", "statusid", "summaryByCandidate", "systemReco", "systemRecoHelp", "templateId", "timezone", "trainingAccess", "updatedOn", "userId", "verificationCode", "verified", "workflowId", "workflowModel", "workflowName", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["acceptance1"]) -> typing.Union[MetaOapg.properties.acceptance1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["acceptance2"]) -> typing.Union[MetaOapg.properties.acceptance2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["accessCode"]) -> typing.Union[MetaOapg.properties.accessCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressModelList"]) -> typing.Union[MetaOapg.properties.addressModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["assessmentModel"]) -> typing.Union['AssessmentModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["attachmentModelList"]) -> typing.Union[MetaOapg.properties.attachmentModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["candidateLock"]) -> typing.Union[MetaOapg.properties.candidateLock, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["candidatePositionsModelList"]) -> typing.Union[MetaOapg.properties.candidatePositionsModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["candidateStatusModel"]) -> typing.Union['CandidateStatusModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["certificationModelList"]) -> typing.Union[MetaOapg.properties.certificationModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cid"]) -> typing.Union[MetaOapg.properties.cid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cloudSearchSync"]) -> typing.Union[MetaOapg.properties.cloudSearchSync, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createts"]) -> typing.Union['Timestamp', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createuserid"]) -> typing.Union[MetaOapg.properties.createuserid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customFieldValueModelList"]) -> typing.Union[MetaOapg.properties.customFieldValueModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customfieldvalue"]) -> typing.Union[MetaOapg.properties.customfieldvalue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dateOfBirth"]) -> typing.Union[MetaOapg.properties.dateOfBirth, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["educationModelList"]) -> typing.Union[MetaOapg.properties.educationModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["educationStr"]) -> typing.Union[MetaOapg.properties.educationStr, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["email"]) -> typing.Union[MetaOapg.properties.email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employmentModelList"]) -> typing.Union[MetaOapg.properties.employmentModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isInternalCand"]) -> typing.Union[MetaOapg.properties.isInternalCand, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isNewCand"]) -> typing.Union[MetaOapg.properties.isNewCand, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["languagePreference"]) -> typing.Union[MetaOapg.properties.languagePreference, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastupdateuserid"]) -> typing.Union[MetaOapg.properties.lastupdateuserid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["notes"]) -> typing.Union[MetaOapg.properties.notes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["passwordHash"]) -> typing.Union[MetaOapg.properties.passwordHash, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["phone"]) -> typing.Union[MetaOapg.properties.phone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["positionModel"]) -> typing.Union['PositionModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["positionName"]) -> typing.Union[MetaOapg.properties.positionName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["recruitId"]) -> typing.Union[MetaOapg.properties.recruitId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["recruiter"]) -> typing.Union[MetaOapg.properties.recruiter, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["recruiterUserId"]) -> typing.Union[MetaOapg.properties.recruiterUserId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["referrer"]) -> typing.Union[MetaOapg.properties.referrer, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["referrerId"]) -> typing.Union[MetaOapg.properties.referrerId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["salaryAmount"]) -> typing.Union[MetaOapg.properties.salaryAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["salaryCurrencyCode"]) -> typing.Union[MetaOapg.properties.salaryCurrencyCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["score"]) -> typing.Union[MetaOapg.properties.score, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["skillModelList"]) -> typing.Union[MetaOapg.properties.skillModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["source"]) -> typing.Union[MetaOapg.properties.source, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union[MetaOapg.properties.status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statusid"]) -> typing.Union[MetaOapg.properties.statusid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["summaryByCandidate"]) -> typing.Union[MetaOapg.properties.summaryByCandidate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["systemReco"]) -> typing.Union[MetaOapg.properties.systemReco, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["systemRecoHelp"]) -> typing.Union[MetaOapg.properties.systemRecoHelp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["templateId"]) -> typing.Union[MetaOapg.properties.templateId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timezone"]) -> typing.Union[MetaOapg.properties.timezone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["trainingAccess"]) -> typing.Union[MetaOapg.properties.trainingAccess, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["updatedOn"]) -> typing.Union['Timestamp', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userId"]) -> typing.Union[MetaOapg.properties.userId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["verificationCode"]) -> typing.Union[MetaOapg.properties.verificationCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["verified"]) -> typing.Union[MetaOapg.properties.verified, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["workflowId"]) -> typing.Union[MetaOapg.properties.workflowId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["workflowModel"]) -> typing.Union['WorkflowModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["workflowName"]) -> typing.Union[MetaOapg.properties.workflowName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["acceptance1", "acceptance2", "accessCode", "addressModelList", "assessmentModel", "attachmentModelList", "candidateLock", "candidatePositionsModelList", "candidateStatusModel", "certificationModelList", "cid", "cloudSearchSync", "createts", "createuserid", "customFieldValueModelList", "customfieldvalue", "dateOfBirth", "educationModelList", "educationStr", "email", "employmentModelList", "isInternalCand", "isNewCand", "languagePreference", "lastupdateuserid", "name", "notes", "passwordHash", "phone", "positionModel", "positionName", "recruitId", "recruiter", "recruiterUserId", "referrer", "referrerId", "salaryAmount", "salaryCurrencyCode", "score", "skillModelList", "source", "status", "statusid", "summaryByCandidate", "systemReco", "systemRecoHelp", "templateId", "timezone", "trainingAccess", "updatedOn", "userId", "verificationCode", "verified", "workflowId", "workflowModel", "workflowName", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        acceptance1: typing.Union[MetaOapg.properties.acceptance1, bool, schemas.Unset] = schemas.unset,
        acceptance2: typing.Union[MetaOapg.properties.acceptance2, bool, schemas.Unset] = schemas.unset,
        accessCode: typing.Union[MetaOapg.properties.accessCode, str, schemas.Unset] = schemas.unset,
        addressModelList: typing.Union[MetaOapg.properties.addressModelList, list, tuple, schemas.Unset] = schemas.unset,
        assessmentModel: typing.Union['AssessmentModel', schemas.Unset] = schemas.unset,
        attachmentModelList: typing.Union[MetaOapg.properties.attachmentModelList, list, tuple, schemas.Unset] = schemas.unset,
        candidateLock: typing.Union[MetaOapg.properties.candidateLock, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        candidatePositionsModelList: typing.Union[MetaOapg.properties.candidatePositionsModelList, list, tuple, schemas.Unset] = schemas.unset,
        candidateStatusModel: typing.Union['CandidateStatusModel', schemas.Unset] = schemas.unset,
        certificationModelList: typing.Union[MetaOapg.properties.certificationModelList, list, tuple, schemas.Unset] = schemas.unset,
        cid: typing.Union[MetaOapg.properties.cid, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        cloudSearchSync: typing.Union[MetaOapg.properties.cloudSearchSync, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        createts: typing.Union['Timestamp', schemas.Unset] = schemas.unset,
        createuserid: typing.Union[MetaOapg.properties.createuserid, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        customFieldValueModelList: typing.Union[MetaOapg.properties.customFieldValueModelList, list, tuple, schemas.Unset] = schemas.unset,
        customfieldvalue: typing.Union[MetaOapg.properties.customfieldvalue, list, tuple, schemas.Unset] = schemas.unset,
        dateOfBirth: typing.Union[MetaOapg.properties.dateOfBirth, str, date, schemas.Unset] = schemas.unset,
        educationModelList: typing.Union[MetaOapg.properties.educationModelList, list, tuple, schemas.Unset] = schemas.unset,
        educationStr: typing.Union[MetaOapg.properties.educationStr, str, schemas.Unset] = schemas.unset,
        email: typing.Union[MetaOapg.properties.email, str, schemas.Unset] = schemas.unset,
        employmentModelList: typing.Union[MetaOapg.properties.employmentModelList, list, tuple, schemas.Unset] = schemas.unset,
        isInternalCand: typing.Union[MetaOapg.properties.isInternalCand, bool, schemas.Unset] = schemas.unset,
        isNewCand: typing.Union[MetaOapg.properties.isNewCand, bool, schemas.Unset] = schemas.unset,
        languagePreference: typing.Union[MetaOapg.properties.languagePreference, str, schemas.Unset] = schemas.unset,
        lastupdateuserid: typing.Union[MetaOapg.properties.lastupdateuserid, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        name: typing.Union[MetaOapg.properties.name, str, schemas.Unset] = schemas.unset,
        notes: typing.Union[MetaOapg.properties.notes, str, schemas.Unset] = schemas.unset,
        passwordHash: typing.Union[MetaOapg.properties.passwordHash, str, schemas.Unset] = schemas.unset,
        phone: typing.Union[MetaOapg.properties.phone, str, schemas.Unset] = schemas.unset,
        positionModel: typing.Union['PositionModel', schemas.Unset] = schemas.unset,
        positionName: typing.Union[MetaOapg.properties.positionName, str, schemas.Unset] = schemas.unset,
        recruitId: typing.Union[MetaOapg.properties.recruitId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        recruiter: typing.Union[MetaOapg.properties.recruiter, str, schemas.Unset] = schemas.unset,
        recruiterUserId: typing.Union[MetaOapg.properties.recruiterUserId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        referrer: typing.Union[MetaOapg.properties.referrer, str, schemas.Unset] = schemas.unset,
        referrerId: typing.Union[MetaOapg.properties.referrerId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        salaryAmount: typing.Union[MetaOapg.properties.salaryAmount, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        salaryCurrencyCode: typing.Union[MetaOapg.properties.salaryCurrencyCode, str, schemas.Unset] = schemas.unset,
        score: typing.Union[MetaOapg.properties.score, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        skillModelList: typing.Union[MetaOapg.properties.skillModelList, list, tuple, schemas.Unset] = schemas.unset,
        source: typing.Union[MetaOapg.properties.source, str, schemas.Unset] = schemas.unset,
        status: typing.Union[MetaOapg.properties.status, str, schemas.Unset] = schemas.unset,
        statusid: typing.Union[MetaOapg.properties.statusid, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        summaryByCandidate: typing.Union[MetaOapg.properties.summaryByCandidate, str, schemas.Unset] = schemas.unset,
        systemReco: typing.Union[MetaOapg.properties.systemReco, str, schemas.Unset] = schemas.unset,
        systemRecoHelp: typing.Union[MetaOapg.properties.systemRecoHelp, str, schemas.Unset] = schemas.unset,
        templateId: typing.Union[MetaOapg.properties.templateId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        timezone: typing.Union[MetaOapg.properties.timezone, str, schemas.Unset] = schemas.unset,
        trainingAccess: typing.Union[MetaOapg.properties.trainingAccess, bool, schemas.Unset] = schemas.unset,
        updatedOn: typing.Union['Timestamp', schemas.Unset] = schemas.unset,
        userId: typing.Union[MetaOapg.properties.userId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        verificationCode: typing.Union[MetaOapg.properties.verificationCode, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        verified: typing.Union[MetaOapg.properties.verified, str, schemas.Unset] = schemas.unset,
        workflowId: typing.Union[MetaOapg.properties.workflowId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        workflowModel: typing.Union['WorkflowModel', schemas.Unset] = schemas.unset,
        workflowName: typing.Union[MetaOapg.properties.workflowName, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CandidateModel':
        return super().__new__(
            cls,
            *args,
            acceptance1=acceptance1,
            acceptance2=acceptance2,
            accessCode=accessCode,
            addressModelList=addressModelList,
            assessmentModel=assessmentModel,
            attachmentModelList=attachmentModelList,
            candidateLock=candidateLock,
            candidatePositionsModelList=candidatePositionsModelList,
            candidateStatusModel=candidateStatusModel,
            certificationModelList=certificationModelList,
            cid=cid,
            cloudSearchSync=cloudSearchSync,
            createts=createts,
            createuserid=createuserid,
            customFieldValueModelList=customFieldValueModelList,
            customfieldvalue=customfieldvalue,
            dateOfBirth=dateOfBirth,
            educationModelList=educationModelList,
            educationStr=educationStr,
            email=email,
            employmentModelList=employmentModelList,
            isInternalCand=isInternalCand,
            isNewCand=isNewCand,
            languagePreference=languagePreference,
            lastupdateuserid=lastupdateuserid,
            name=name,
            notes=notes,
            passwordHash=passwordHash,
            phone=phone,
            positionModel=positionModel,
            positionName=positionName,
            recruitId=recruitId,
            recruiter=recruiter,
            recruiterUserId=recruiterUserId,
            referrer=referrer,
            referrerId=referrerId,
            salaryAmount=salaryAmount,
            salaryCurrencyCode=salaryCurrencyCode,
            score=score,
            skillModelList=skillModelList,
            source=source,
            status=status,
            statusid=statusid,
            summaryByCandidate=summaryByCandidate,
            systemReco=systemReco,
            systemRecoHelp=systemRecoHelp,
            templateId=templateId,
            timezone=timezone,
            trainingAccess=trainingAccess,
            updatedOn=updatedOn,
            userId=userId,
            verificationCode=verificationCode,
            verified=verified,
            workflowId=workflowId,
            workflowModel=workflowModel,
            workflowName=workflowName,
            _configuration=_configuration,
            **kwargs,
        )

from clay_hr_python_sdk.model.address_model import AddressModel
from clay_hr_python_sdk.model.assessment_model import AssessmentModel
from clay_hr_python_sdk.model.attachment_model import AttachmentModel
from clay_hr_python_sdk.model.candidate_applications_model import CandidateApplicationsModel
from clay_hr_python_sdk.model.candidate_status_model import CandidateStatusModel
from clay_hr_python_sdk.model.certification_model import CertificationModel
from clay_hr_python_sdk.model.custom_field_value_model import CustomFieldValueModel
from clay_hr_python_sdk.model.education_model import EducationModel
from clay_hr_python_sdk.model.employment_model import EmploymentModel
from clay_hr_python_sdk.model.position_model import PositionModel
from clay_hr_python_sdk.model.skill_user_model import SkillUserModel
from clay_hr_python_sdk.model.timestamp import Timestamp
from clay_hr_python_sdk.model.workflow_model import WorkflowModel
