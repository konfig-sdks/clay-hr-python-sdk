# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from clay_hr_python_sdk import schemas  # noqa: F401


class DynamicFormSectionModel(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            description = schemas.StrSchema
            assignee = schemas.StrSchema
        
            @staticmethod
            def assigneeModel() -> typing.Type['UserModel']:
                return UserModel
        
            @staticmethod
            def attachmentModel() -> typing.Type['AttachmentModel']:
                return AttachmentModel
            cid = schemas.Int32Schema
            createUserId = schemas.Int32Schema
            dynamicFormId = schemas.Int32Schema
            
            
            class dynamicFormItemModelList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['DynamicFormItemModel']:
                        return DynamicFormItemModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['DynamicFormItemModel'], typing.List['DynamicFormItemModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'dynamicFormItemModelList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'DynamicFormItemModel':
                    return super().__getitem__(i)
            hidden = schemas.BoolSchema
            name = schemas.StrSchema
            sectionId = schemas.Int32Schema
            sequence = schemas.Int32Schema
            totalweightage = schemas.Float64Schema
        
            @staticmethod
            def userGroupModel() -> typing.Type['UserGroupModel']:
                return UserGroupModel
            __annotations__ = {
                "description": description,
                "assignee": assignee,
                "assigneeModel": assigneeModel,
                "attachmentModel": attachmentModel,
                "cid": cid,
                "createUserId": createUserId,
                "dynamicFormId": dynamicFormId,
                "dynamicFormItemModelList": dynamicFormItemModelList,
                "hidden": hidden,
                "name": name,
                "sectionId": sectionId,
                "sequence": sequence,
                "totalweightage": totalweightage,
                "userGroupModel": userGroupModel,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["assignee"]) -> MetaOapg.properties.assignee: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["assigneeModel"]) -> 'UserModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["attachmentModel"]) -> 'AttachmentModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cid"]) -> MetaOapg.properties.cid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createUserId"]) -> MetaOapg.properties.createUserId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dynamicFormId"]) -> MetaOapg.properties.dynamicFormId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dynamicFormItemModelList"]) -> MetaOapg.properties.dynamicFormItemModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hidden"]) -> MetaOapg.properties.hidden: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sectionId"]) -> MetaOapg.properties.sectionId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sequence"]) -> MetaOapg.properties.sequence: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totalweightage"]) -> MetaOapg.properties.totalweightage: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userGroupModel"]) -> 'UserGroupModel': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["description", "assignee", "assigneeModel", "attachmentModel", "cid", "createUserId", "dynamicFormId", "dynamicFormItemModelList", "hidden", "name", "sectionId", "sequence", "totalweightage", "userGroupModel", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> typing.Union[MetaOapg.properties.description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["assignee"]) -> typing.Union[MetaOapg.properties.assignee, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["assigneeModel"]) -> typing.Union['UserModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["attachmentModel"]) -> typing.Union['AttachmentModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cid"]) -> typing.Union[MetaOapg.properties.cid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createUserId"]) -> typing.Union[MetaOapg.properties.createUserId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dynamicFormId"]) -> typing.Union[MetaOapg.properties.dynamicFormId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dynamicFormItemModelList"]) -> typing.Union[MetaOapg.properties.dynamicFormItemModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hidden"]) -> typing.Union[MetaOapg.properties.hidden, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sectionId"]) -> typing.Union[MetaOapg.properties.sectionId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sequence"]) -> typing.Union[MetaOapg.properties.sequence, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totalweightage"]) -> typing.Union[MetaOapg.properties.totalweightage, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userGroupModel"]) -> typing.Union['UserGroupModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["description", "assignee", "assigneeModel", "attachmentModel", "cid", "createUserId", "dynamicFormId", "dynamicFormItemModelList", "hidden", "name", "sectionId", "sequence", "totalweightage", "userGroupModel", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        description: typing.Union[MetaOapg.properties.description, str, schemas.Unset] = schemas.unset,
        assignee: typing.Union[MetaOapg.properties.assignee, str, schemas.Unset] = schemas.unset,
        assigneeModel: typing.Union['UserModel', schemas.Unset] = schemas.unset,
        attachmentModel: typing.Union['AttachmentModel', schemas.Unset] = schemas.unset,
        cid: typing.Union[MetaOapg.properties.cid, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        createUserId: typing.Union[MetaOapg.properties.createUserId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        dynamicFormId: typing.Union[MetaOapg.properties.dynamicFormId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        dynamicFormItemModelList: typing.Union[MetaOapg.properties.dynamicFormItemModelList, list, tuple, schemas.Unset] = schemas.unset,
        hidden: typing.Union[MetaOapg.properties.hidden, bool, schemas.Unset] = schemas.unset,
        name: typing.Union[MetaOapg.properties.name, str, schemas.Unset] = schemas.unset,
        sectionId: typing.Union[MetaOapg.properties.sectionId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        sequence: typing.Union[MetaOapg.properties.sequence, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        totalweightage: typing.Union[MetaOapg.properties.totalweightage, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        userGroupModel: typing.Union['UserGroupModel', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'DynamicFormSectionModel':
        return super().__new__(
            cls,
            *args,
            description=description,
            assignee=assignee,
            assigneeModel=assigneeModel,
            attachmentModel=attachmentModel,
            cid=cid,
            createUserId=createUserId,
            dynamicFormId=dynamicFormId,
            dynamicFormItemModelList=dynamicFormItemModelList,
            hidden=hidden,
            name=name,
            sectionId=sectionId,
            sequence=sequence,
            totalweightage=totalweightage,
            userGroupModel=userGroupModel,
            _configuration=_configuration,
            **kwargs,
        )

from clay_hr_python_sdk.model.attachment_model import AttachmentModel
from clay_hr_python_sdk.model.dynamic_form_item_model import DynamicFormItemModel
from clay_hr_python_sdk.model.user_group_model import UserGroupModel
from clay_hr_python_sdk.model.user_model import UserModel
