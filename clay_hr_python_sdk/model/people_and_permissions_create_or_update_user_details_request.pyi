# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from clay_hr_python_sdk import schemas  # noqa: F401


class PeopleAndPermissionsCreateOrUpdateUserDetailsRequest(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            firstName = schemas.StrSchema
            email = schemas.StrSchema
            lastName = schemas.StrSchema
            empId = schemas.StrSchema
            gender = schemas.StrSchema
            guid = schemas.StrSchema
            
            
            class status(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def A(cls):
                    return cls("A")
                
                @schemas.classproperty
                def I(cls):
                    return cls("I")
                
                @schemas.classproperty
                def F(cls):
                    return cls("F")
            displayFullName = schemas.StrSchema
            middleName = schemas.StrSchema
            secondLastName = schemas.StrSchema
            shortName = schemas.StrSchema
            namePronunciation = schemas.StrSchema
            familySuffix = schemas.StrSchema
            workerType = schemas.StrSchema
            userDateOfBirth = schemas.StrSchema
            phone = schemas.StrSchema
            cellPhone = schemas.StrSchema
            position = schemas.Int32Schema
            departmentID = schemas.Int32Schema
            locationId = schemas.Int32Schema
            locationName = schemas.StrSchema
            userStartDate = schemas.StrSchema
        
            @staticmethod
            def reportsToEmail() -> typing.Type['PeopleAndPermissionsCreateOrUpdateUserDetailsRequestReportsToEmail']:
                return PeopleAndPermissionsCreateOrUpdateUserDetailsRequestReportsToEmail
        
            @staticmethod
            def addressList() -> typing.Type['PeopleAndPermissionsCreateOrUpdateUserDetailsRequestAddressList']:
                return PeopleAndPermissionsCreateOrUpdateUserDetailsRequestAddressList
        
            @staticmethod
            def educationList() -> typing.Type['PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationList']:
                return PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationList
        
            @staticmethod
            def contactList() -> typing.Type['PeopleAndPermissionsCreateOrUpdateUserDetailsRequestContactList']:
                return PeopleAndPermissionsCreateOrUpdateUserDetailsRequestContactList
        
            @staticmethod
            def financialList() -> typing.Type['PeopleAndPermissionsCreateOrUpdateUserDetailsRequestFinancialList']:
                return PeopleAndPermissionsCreateOrUpdateUserDetailsRequestFinancialList
            customFieldValues = schemas.StrSchema
            __annotations__ = {
                "firstName": firstName,
                "email": email,
                "lastName": lastName,
                "empId": empId,
                "gender": gender,
                "guid": guid,
                "status": status,
                "displayFullName": displayFullName,
                "middleName": middleName,
                "secondLastName": secondLastName,
                "shortName": shortName,
                "namePronunciation": namePronunciation,
                "familySuffix": familySuffix,
                "workerType": workerType,
                "userDateOfBirth": userDateOfBirth,
                "phone": phone,
                "cellPhone": cellPhone,
                "position": position,
                "departmentID": departmentID,
                "locationId": locationId,
                "locationName": locationName,
                "userStartDate": userStartDate,
                "reportsToEmail": reportsToEmail,
                "addressList": addressList,
                "educationList": educationList,
                "contactList": contactList,
                "financialList": financialList,
                "customFieldValues": customFieldValues,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["firstName"]) -> MetaOapg.properties.firstName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["email"]) -> MetaOapg.properties.email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastName"]) -> MetaOapg.properties.lastName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["empId"]) -> MetaOapg.properties.empId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gender"]) -> MetaOapg.properties.gender: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["guid"]) -> MetaOapg.properties.guid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["displayFullName"]) -> MetaOapg.properties.displayFullName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["middleName"]) -> MetaOapg.properties.middleName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["secondLastName"]) -> MetaOapg.properties.secondLastName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["shortName"]) -> MetaOapg.properties.shortName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["namePronunciation"]) -> MetaOapg.properties.namePronunciation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["familySuffix"]) -> MetaOapg.properties.familySuffix: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["workerType"]) -> MetaOapg.properties.workerType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userDateOfBirth"]) -> MetaOapg.properties.userDateOfBirth: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["phone"]) -> MetaOapg.properties.phone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cellPhone"]) -> MetaOapg.properties.cellPhone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["position"]) -> MetaOapg.properties.position: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["departmentID"]) -> MetaOapg.properties.departmentID: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["locationId"]) -> MetaOapg.properties.locationId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["locationName"]) -> MetaOapg.properties.locationName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userStartDate"]) -> MetaOapg.properties.userStartDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reportsToEmail"]) -> 'PeopleAndPermissionsCreateOrUpdateUserDetailsRequestReportsToEmail': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressList"]) -> 'PeopleAndPermissionsCreateOrUpdateUserDetailsRequestAddressList': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["educationList"]) -> 'PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationList': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["contactList"]) -> 'PeopleAndPermissionsCreateOrUpdateUserDetailsRequestContactList': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["financialList"]) -> 'PeopleAndPermissionsCreateOrUpdateUserDetailsRequestFinancialList': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customFieldValues"]) -> MetaOapg.properties.customFieldValues: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["firstName", "email", "lastName", "empId", "gender", "guid", "status", "displayFullName", "middleName", "secondLastName", "shortName", "namePronunciation", "familySuffix", "workerType", "userDateOfBirth", "phone", "cellPhone", "position", "departmentID", "locationId", "locationName", "userStartDate", "reportsToEmail", "addressList", "educationList", "contactList", "financialList", "customFieldValues", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["firstName"]) -> typing.Union[MetaOapg.properties.firstName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["email"]) -> typing.Union[MetaOapg.properties.email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastName"]) -> typing.Union[MetaOapg.properties.lastName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["empId"]) -> typing.Union[MetaOapg.properties.empId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gender"]) -> typing.Union[MetaOapg.properties.gender, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["guid"]) -> typing.Union[MetaOapg.properties.guid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union[MetaOapg.properties.status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["displayFullName"]) -> typing.Union[MetaOapg.properties.displayFullName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["middleName"]) -> typing.Union[MetaOapg.properties.middleName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["secondLastName"]) -> typing.Union[MetaOapg.properties.secondLastName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["shortName"]) -> typing.Union[MetaOapg.properties.shortName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["namePronunciation"]) -> typing.Union[MetaOapg.properties.namePronunciation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["familySuffix"]) -> typing.Union[MetaOapg.properties.familySuffix, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["workerType"]) -> typing.Union[MetaOapg.properties.workerType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userDateOfBirth"]) -> typing.Union[MetaOapg.properties.userDateOfBirth, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["phone"]) -> typing.Union[MetaOapg.properties.phone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cellPhone"]) -> typing.Union[MetaOapg.properties.cellPhone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["position"]) -> typing.Union[MetaOapg.properties.position, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["departmentID"]) -> typing.Union[MetaOapg.properties.departmentID, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["locationId"]) -> typing.Union[MetaOapg.properties.locationId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["locationName"]) -> typing.Union[MetaOapg.properties.locationName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userStartDate"]) -> typing.Union[MetaOapg.properties.userStartDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reportsToEmail"]) -> typing.Union['PeopleAndPermissionsCreateOrUpdateUserDetailsRequestReportsToEmail', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressList"]) -> typing.Union['PeopleAndPermissionsCreateOrUpdateUserDetailsRequestAddressList', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["educationList"]) -> typing.Union['PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationList', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["contactList"]) -> typing.Union['PeopleAndPermissionsCreateOrUpdateUserDetailsRequestContactList', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["financialList"]) -> typing.Union['PeopleAndPermissionsCreateOrUpdateUserDetailsRequestFinancialList', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customFieldValues"]) -> typing.Union[MetaOapg.properties.customFieldValues, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["firstName", "email", "lastName", "empId", "gender", "guid", "status", "displayFullName", "middleName", "secondLastName", "shortName", "namePronunciation", "familySuffix", "workerType", "userDateOfBirth", "phone", "cellPhone", "position", "departmentID", "locationId", "locationName", "userStartDate", "reportsToEmail", "addressList", "educationList", "contactList", "financialList", "customFieldValues", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        firstName: typing.Union[MetaOapg.properties.firstName, str, schemas.Unset] = schemas.unset,
        email: typing.Union[MetaOapg.properties.email, str, schemas.Unset] = schemas.unset,
        lastName: typing.Union[MetaOapg.properties.lastName, str, schemas.Unset] = schemas.unset,
        empId: typing.Union[MetaOapg.properties.empId, str, schemas.Unset] = schemas.unset,
        gender: typing.Union[MetaOapg.properties.gender, str, schemas.Unset] = schemas.unset,
        guid: typing.Union[MetaOapg.properties.guid, str, schemas.Unset] = schemas.unset,
        status: typing.Union[MetaOapg.properties.status, str, schemas.Unset] = schemas.unset,
        displayFullName: typing.Union[MetaOapg.properties.displayFullName, str, schemas.Unset] = schemas.unset,
        middleName: typing.Union[MetaOapg.properties.middleName, str, schemas.Unset] = schemas.unset,
        secondLastName: typing.Union[MetaOapg.properties.secondLastName, str, schemas.Unset] = schemas.unset,
        shortName: typing.Union[MetaOapg.properties.shortName, str, schemas.Unset] = schemas.unset,
        namePronunciation: typing.Union[MetaOapg.properties.namePronunciation, str, schemas.Unset] = schemas.unset,
        familySuffix: typing.Union[MetaOapg.properties.familySuffix, str, schemas.Unset] = schemas.unset,
        workerType: typing.Union[MetaOapg.properties.workerType, str, schemas.Unset] = schemas.unset,
        userDateOfBirth: typing.Union[MetaOapg.properties.userDateOfBirth, str, schemas.Unset] = schemas.unset,
        phone: typing.Union[MetaOapg.properties.phone, str, schemas.Unset] = schemas.unset,
        cellPhone: typing.Union[MetaOapg.properties.cellPhone, str, schemas.Unset] = schemas.unset,
        position: typing.Union[MetaOapg.properties.position, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        departmentID: typing.Union[MetaOapg.properties.departmentID, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        locationId: typing.Union[MetaOapg.properties.locationId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        locationName: typing.Union[MetaOapg.properties.locationName, str, schemas.Unset] = schemas.unset,
        userStartDate: typing.Union[MetaOapg.properties.userStartDate, str, schemas.Unset] = schemas.unset,
        reportsToEmail: typing.Union['PeopleAndPermissionsCreateOrUpdateUserDetailsRequestReportsToEmail', schemas.Unset] = schemas.unset,
        addressList: typing.Union['PeopleAndPermissionsCreateOrUpdateUserDetailsRequestAddressList', schemas.Unset] = schemas.unset,
        educationList: typing.Union['PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationList', schemas.Unset] = schemas.unset,
        contactList: typing.Union['PeopleAndPermissionsCreateOrUpdateUserDetailsRequestContactList', schemas.Unset] = schemas.unset,
        financialList: typing.Union['PeopleAndPermissionsCreateOrUpdateUserDetailsRequestFinancialList', schemas.Unset] = schemas.unset,
        customFieldValues: typing.Union[MetaOapg.properties.customFieldValues, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PeopleAndPermissionsCreateOrUpdateUserDetailsRequest':
        return super().__new__(
            cls,
            *args,
            firstName=firstName,
            email=email,
            lastName=lastName,
            empId=empId,
            gender=gender,
            guid=guid,
            status=status,
            displayFullName=displayFullName,
            middleName=middleName,
            secondLastName=secondLastName,
            shortName=shortName,
            namePronunciation=namePronunciation,
            familySuffix=familySuffix,
            workerType=workerType,
            userDateOfBirth=userDateOfBirth,
            phone=phone,
            cellPhone=cellPhone,
            position=position,
            departmentID=departmentID,
            locationId=locationId,
            locationName=locationName,
            userStartDate=userStartDate,
            reportsToEmail=reportsToEmail,
            addressList=addressList,
            educationList=educationList,
            contactList=contactList,
            financialList=financialList,
            customFieldValues=customFieldValues,
            _configuration=_configuration,
            **kwargs,
        )

from clay_hr_python_sdk.model.people_and_permissions_create_or_update_user_details_request_address_list import PeopleAndPermissionsCreateOrUpdateUserDetailsRequestAddressList
from clay_hr_python_sdk.model.people_and_permissions_create_or_update_user_details_request_contact_list import PeopleAndPermissionsCreateOrUpdateUserDetailsRequestContactList
from clay_hr_python_sdk.model.people_and_permissions_create_or_update_user_details_request_education_list import PeopleAndPermissionsCreateOrUpdateUserDetailsRequestEducationList
from clay_hr_python_sdk.model.people_and_permissions_create_or_update_user_details_request_financial_list import PeopleAndPermissionsCreateOrUpdateUserDetailsRequestFinancialList
from clay_hr_python_sdk.model.people_and_permissions_create_or_update_user_details_request_reports_to_email import PeopleAndPermissionsCreateOrUpdateUserDetailsRequestReportsToEmail
