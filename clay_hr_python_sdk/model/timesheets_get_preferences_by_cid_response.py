# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from clay_hr_python_sdk import schemas  # noqa: F401


class TimesheetsGetPreferencesByCidResponse(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            timesheetStartDay = schemas.StrSchema
            billablePrefValue = schemas.StrSchema
            futureTcPrefValue = schemas.StrSchema
            endDate = schemas.StrSchema
            projectAreaPrefValue = schemas.StrSchema
            complianceMsg = schemas.StrSchema
            activityTypePrefValue = schemas.StrSchema
            mobileAppClockInPrefValue = schemas.StrSchema
            allocatedProjectPrefValue = schemas.StrSchema
            addEditTcPrefValue = schemas.StrSchema
            backdatedTcReasonPrefValue = schemas.StrSchema
            timesheetPeriod = schemas.StrSchema
            categoryPrefValue = schemas.StrSchema
            startTimeEndTimeRequired = schemas.StrSchema
            workingHrsPerDay = schemas.StrSchema
            kioskAppClockInPrefValue = schemas.StrSchema
            qrCodeClockInPrefValue = schemas.StrSchema
            tcApprovalReasonPrefValue = schemas.StrSchema
            clockInOutsideGeofencePreferenceValue = schemas.StrSchema
            startDate = schemas.StrSchema
            tcRejectionReasonPrefValue = schemas.StrSchema
            __annotations__ = {
                "timesheetStartDay": timesheetStartDay,
                "billablePrefValue": billablePrefValue,
                "futureTcPrefValue": futureTcPrefValue,
                "endDate": endDate,
                "projectAreaPrefValue": projectAreaPrefValue,
                "complianceMsg": complianceMsg,
                "activityTypePrefValue": activityTypePrefValue,
                "mobileAppClockInPrefValue": mobileAppClockInPrefValue,
                "allocatedProjectPrefValue": allocatedProjectPrefValue,
                "addEditTcPrefValue": addEditTcPrefValue,
                "backdatedTcReasonPrefValue": backdatedTcReasonPrefValue,
                "timesheetPeriod": timesheetPeriod,
                "categoryPrefValue": categoryPrefValue,
                "startTimeEndTimeRequired": startTimeEndTimeRequired,
                "workingHrsPerDay": workingHrsPerDay,
                "kioskAppClockInPrefValue": kioskAppClockInPrefValue,
                "qrCodeClockInPrefValue": qrCodeClockInPrefValue,
                "tcApprovalReasonPrefValue": tcApprovalReasonPrefValue,
                "clockInOutsideGeofencePreferenceValue": clockInOutsideGeofencePreferenceValue,
                "startDate": startDate,
                "tcRejectionReasonPrefValue": tcRejectionReasonPrefValue,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timesheetStartDay"]) -> MetaOapg.properties.timesheetStartDay: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["billablePrefValue"]) -> MetaOapg.properties.billablePrefValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["futureTcPrefValue"]) -> MetaOapg.properties.futureTcPrefValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["endDate"]) -> MetaOapg.properties.endDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["projectAreaPrefValue"]) -> MetaOapg.properties.projectAreaPrefValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["complianceMsg"]) -> MetaOapg.properties.complianceMsg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["activityTypePrefValue"]) -> MetaOapg.properties.activityTypePrefValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mobileAppClockInPrefValue"]) -> MetaOapg.properties.mobileAppClockInPrefValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["allocatedProjectPrefValue"]) -> MetaOapg.properties.allocatedProjectPrefValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addEditTcPrefValue"]) -> MetaOapg.properties.addEditTcPrefValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["backdatedTcReasonPrefValue"]) -> MetaOapg.properties.backdatedTcReasonPrefValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timesheetPeriod"]) -> MetaOapg.properties.timesheetPeriod: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["categoryPrefValue"]) -> MetaOapg.properties.categoryPrefValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["startTimeEndTimeRequired"]) -> MetaOapg.properties.startTimeEndTimeRequired: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["workingHrsPerDay"]) -> MetaOapg.properties.workingHrsPerDay: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["kioskAppClockInPrefValue"]) -> MetaOapg.properties.kioskAppClockInPrefValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["qrCodeClockInPrefValue"]) -> MetaOapg.properties.qrCodeClockInPrefValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tcApprovalReasonPrefValue"]) -> MetaOapg.properties.tcApprovalReasonPrefValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["clockInOutsideGeofencePreferenceValue"]) -> MetaOapg.properties.clockInOutsideGeofencePreferenceValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["startDate"]) -> MetaOapg.properties.startDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tcRejectionReasonPrefValue"]) -> MetaOapg.properties.tcRejectionReasonPrefValue: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["timesheetStartDay", "billablePrefValue", "futureTcPrefValue", "endDate", "projectAreaPrefValue", "complianceMsg", "activityTypePrefValue", "mobileAppClockInPrefValue", "allocatedProjectPrefValue", "addEditTcPrefValue", "backdatedTcReasonPrefValue", "timesheetPeriod", "categoryPrefValue", "startTimeEndTimeRequired", "workingHrsPerDay", "kioskAppClockInPrefValue", "qrCodeClockInPrefValue", "tcApprovalReasonPrefValue", "clockInOutsideGeofencePreferenceValue", "startDate", "tcRejectionReasonPrefValue", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timesheetStartDay"]) -> typing.Union[MetaOapg.properties.timesheetStartDay, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["billablePrefValue"]) -> typing.Union[MetaOapg.properties.billablePrefValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["futureTcPrefValue"]) -> typing.Union[MetaOapg.properties.futureTcPrefValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["endDate"]) -> typing.Union[MetaOapg.properties.endDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["projectAreaPrefValue"]) -> typing.Union[MetaOapg.properties.projectAreaPrefValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["complianceMsg"]) -> typing.Union[MetaOapg.properties.complianceMsg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["activityTypePrefValue"]) -> typing.Union[MetaOapg.properties.activityTypePrefValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mobileAppClockInPrefValue"]) -> typing.Union[MetaOapg.properties.mobileAppClockInPrefValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["allocatedProjectPrefValue"]) -> typing.Union[MetaOapg.properties.allocatedProjectPrefValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addEditTcPrefValue"]) -> typing.Union[MetaOapg.properties.addEditTcPrefValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["backdatedTcReasonPrefValue"]) -> typing.Union[MetaOapg.properties.backdatedTcReasonPrefValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timesheetPeriod"]) -> typing.Union[MetaOapg.properties.timesheetPeriod, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["categoryPrefValue"]) -> typing.Union[MetaOapg.properties.categoryPrefValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["startTimeEndTimeRequired"]) -> typing.Union[MetaOapg.properties.startTimeEndTimeRequired, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["workingHrsPerDay"]) -> typing.Union[MetaOapg.properties.workingHrsPerDay, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["kioskAppClockInPrefValue"]) -> typing.Union[MetaOapg.properties.kioskAppClockInPrefValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["qrCodeClockInPrefValue"]) -> typing.Union[MetaOapg.properties.qrCodeClockInPrefValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tcApprovalReasonPrefValue"]) -> typing.Union[MetaOapg.properties.tcApprovalReasonPrefValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["clockInOutsideGeofencePreferenceValue"]) -> typing.Union[MetaOapg.properties.clockInOutsideGeofencePreferenceValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["startDate"]) -> typing.Union[MetaOapg.properties.startDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tcRejectionReasonPrefValue"]) -> typing.Union[MetaOapg.properties.tcRejectionReasonPrefValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["timesheetStartDay", "billablePrefValue", "futureTcPrefValue", "endDate", "projectAreaPrefValue", "complianceMsg", "activityTypePrefValue", "mobileAppClockInPrefValue", "allocatedProjectPrefValue", "addEditTcPrefValue", "backdatedTcReasonPrefValue", "timesheetPeriod", "categoryPrefValue", "startTimeEndTimeRequired", "workingHrsPerDay", "kioskAppClockInPrefValue", "qrCodeClockInPrefValue", "tcApprovalReasonPrefValue", "clockInOutsideGeofencePreferenceValue", "startDate", "tcRejectionReasonPrefValue", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        timesheetStartDay: typing.Union[MetaOapg.properties.timesheetStartDay, str, schemas.Unset] = schemas.unset,
        billablePrefValue: typing.Union[MetaOapg.properties.billablePrefValue, str, schemas.Unset] = schemas.unset,
        futureTcPrefValue: typing.Union[MetaOapg.properties.futureTcPrefValue, str, schemas.Unset] = schemas.unset,
        endDate: typing.Union[MetaOapg.properties.endDate, str, schemas.Unset] = schemas.unset,
        projectAreaPrefValue: typing.Union[MetaOapg.properties.projectAreaPrefValue, str, schemas.Unset] = schemas.unset,
        complianceMsg: typing.Union[MetaOapg.properties.complianceMsg, str, schemas.Unset] = schemas.unset,
        activityTypePrefValue: typing.Union[MetaOapg.properties.activityTypePrefValue, str, schemas.Unset] = schemas.unset,
        mobileAppClockInPrefValue: typing.Union[MetaOapg.properties.mobileAppClockInPrefValue, str, schemas.Unset] = schemas.unset,
        allocatedProjectPrefValue: typing.Union[MetaOapg.properties.allocatedProjectPrefValue, str, schemas.Unset] = schemas.unset,
        addEditTcPrefValue: typing.Union[MetaOapg.properties.addEditTcPrefValue, str, schemas.Unset] = schemas.unset,
        backdatedTcReasonPrefValue: typing.Union[MetaOapg.properties.backdatedTcReasonPrefValue, str, schemas.Unset] = schemas.unset,
        timesheetPeriod: typing.Union[MetaOapg.properties.timesheetPeriod, str, schemas.Unset] = schemas.unset,
        categoryPrefValue: typing.Union[MetaOapg.properties.categoryPrefValue, str, schemas.Unset] = schemas.unset,
        startTimeEndTimeRequired: typing.Union[MetaOapg.properties.startTimeEndTimeRequired, str, schemas.Unset] = schemas.unset,
        workingHrsPerDay: typing.Union[MetaOapg.properties.workingHrsPerDay, str, schemas.Unset] = schemas.unset,
        kioskAppClockInPrefValue: typing.Union[MetaOapg.properties.kioskAppClockInPrefValue, str, schemas.Unset] = schemas.unset,
        qrCodeClockInPrefValue: typing.Union[MetaOapg.properties.qrCodeClockInPrefValue, str, schemas.Unset] = schemas.unset,
        tcApprovalReasonPrefValue: typing.Union[MetaOapg.properties.tcApprovalReasonPrefValue, str, schemas.Unset] = schemas.unset,
        clockInOutsideGeofencePreferenceValue: typing.Union[MetaOapg.properties.clockInOutsideGeofencePreferenceValue, str, schemas.Unset] = schemas.unset,
        startDate: typing.Union[MetaOapg.properties.startDate, str, schemas.Unset] = schemas.unset,
        tcRejectionReasonPrefValue: typing.Union[MetaOapg.properties.tcRejectionReasonPrefValue, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'TimesheetsGetPreferencesByCidResponse':
        return super().__new__(
            cls,
            *args,
            timesheetStartDay=timesheetStartDay,
            billablePrefValue=billablePrefValue,
            futureTcPrefValue=futureTcPrefValue,
            endDate=endDate,
            projectAreaPrefValue=projectAreaPrefValue,
            complianceMsg=complianceMsg,
            activityTypePrefValue=activityTypePrefValue,
            mobileAppClockInPrefValue=mobileAppClockInPrefValue,
            allocatedProjectPrefValue=allocatedProjectPrefValue,
            addEditTcPrefValue=addEditTcPrefValue,
            backdatedTcReasonPrefValue=backdatedTcReasonPrefValue,
            timesheetPeriod=timesheetPeriod,
            categoryPrefValue=categoryPrefValue,
            startTimeEndTimeRequired=startTimeEndTimeRequired,
            workingHrsPerDay=workingHrsPerDay,
            kioskAppClockInPrefValue=kioskAppClockInPrefValue,
            qrCodeClockInPrefValue=qrCodeClockInPrefValue,
            tcApprovalReasonPrefValue=tcApprovalReasonPrefValue,
            clockInOutsideGeofencePreferenceValue=clockInOutsideGeofencePreferenceValue,
            startDate=startDate,
            tcRejectionReasonPrefValue=tcRejectionReasonPrefValue,
            _configuration=_configuration,
            **kwargs,
        )
