# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from clay_hr_python_sdk import schemas  # noqa: F401


class AttachmentFolderModel(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            atchFolderId = schemas.Int32Schema
            atchFolderName = schemas.StrSchema
            cid = schemas.Int32Schema
            createuserid = schemas.Int32Schema
            usedCount = schemas.Int32Schema
            __annotations__ = {
                "atchFolderId": atchFolderId,
                "atchFolderName": atchFolderName,
                "cid": cid,
                "createuserid": createuserid,
                "usedCount": usedCount,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["atchFolderId"]) -> MetaOapg.properties.atchFolderId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["atchFolderName"]) -> MetaOapg.properties.atchFolderName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cid"]) -> MetaOapg.properties.cid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createuserid"]) -> MetaOapg.properties.createuserid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usedCount"]) -> MetaOapg.properties.usedCount: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["atchFolderId", "atchFolderName", "cid", "createuserid", "usedCount", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["atchFolderId"]) -> typing.Union[MetaOapg.properties.atchFolderId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["atchFolderName"]) -> typing.Union[MetaOapg.properties.atchFolderName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cid"]) -> typing.Union[MetaOapg.properties.cid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createuserid"]) -> typing.Union[MetaOapg.properties.createuserid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usedCount"]) -> typing.Union[MetaOapg.properties.usedCount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["atchFolderId", "atchFolderName", "cid", "createuserid", "usedCount", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        atchFolderId: typing.Union[MetaOapg.properties.atchFolderId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        atchFolderName: typing.Union[MetaOapg.properties.atchFolderName, str, schemas.Unset] = schemas.unset,
        cid: typing.Union[MetaOapg.properties.cid, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        createuserid: typing.Union[MetaOapg.properties.createuserid, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        usedCount: typing.Union[MetaOapg.properties.usedCount, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'AttachmentFolderModel':
        return super().__new__(
            cls,
            *args,
            atchFolderId=atchFolderId,
            atchFolderName=atchFolderName,
            cid=cid,
            createuserid=createuserid,
            usedCount=usedCount,
            _configuration=_configuration,
            **kwargs,
        )
