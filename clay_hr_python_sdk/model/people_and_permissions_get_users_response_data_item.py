# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from clay_hr_python_sdk import schemas  # noqa: F401


class PeopleAndPermissionsGetUsersResponseDataItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            resourceId = schemas.StrSchema
            name = schemas.StrSchema
            position = schemas.StrSchema
            assignments = schemas.StrSchema
            allocation = schemas.StrSchema
            startDate = schemas.StrSchema
            endDate = schemas.StrSchema
            workerType = schemas.StrSchema
            location = schemas.StrSchema
            timeZone = schemas.StrSchema
            notes = schemas.StrSchema
            emailAddress = schemas.StrSchema
            phone = schemas.StrSchema
            im = schemas.StrSchema
            dateOfBirth = schemas.StrSchema
            gender = schemas.StrSchema
            imageName = schemas.StrSchema
            customFieldList = schemas.StrSchema
            department = schemas.StrSchema
            departmentLabel = schemas.StrSchema
            profileName = schemas.StrSchema
        
            @staticmethod
            def userReporterList() -> typing.Type['PeopleAndPermissionsGetUsersResponseDataItemUserReporterList']:
                return PeopleAndPermissionsGetUsersResponseDataItemUserReporterList
            empId = schemas.StrSchema
            __annotations__ = {
                "resourceId": resourceId,
                "name": name,
                "position": position,
                "assignments": assignments,
                "allocation": allocation,
                "startDate": startDate,
                "endDate": endDate,
                "workerType": workerType,
                "location": location,
                "timeZone": timeZone,
                "notes": notes,
                "emailAddress": emailAddress,
                "phone": phone,
                "im": im,
                "dateOfBirth": dateOfBirth,
                "gender": gender,
                "imageName": imageName,
                "customFieldList": customFieldList,
                "department": department,
                "departmentLabel": departmentLabel,
                "profileName": profileName,
                "userReporterList": userReporterList,
                "empId": empId,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["resourceId"]) -> MetaOapg.properties.resourceId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["position"]) -> MetaOapg.properties.position: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["assignments"]) -> MetaOapg.properties.assignments: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["allocation"]) -> MetaOapg.properties.allocation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["startDate"]) -> MetaOapg.properties.startDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["endDate"]) -> MetaOapg.properties.endDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["workerType"]) -> MetaOapg.properties.workerType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["location"]) -> MetaOapg.properties.location: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timeZone"]) -> MetaOapg.properties.timeZone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["notes"]) -> MetaOapg.properties.notes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["emailAddress"]) -> MetaOapg.properties.emailAddress: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["phone"]) -> MetaOapg.properties.phone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["im"]) -> MetaOapg.properties.im: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dateOfBirth"]) -> MetaOapg.properties.dateOfBirth: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gender"]) -> MetaOapg.properties.gender: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["imageName"]) -> MetaOapg.properties.imageName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customFieldList"]) -> MetaOapg.properties.customFieldList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["department"]) -> MetaOapg.properties.department: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["departmentLabel"]) -> MetaOapg.properties.departmentLabel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profileName"]) -> MetaOapg.properties.profileName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userReporterList"]) -> 'PeopleAndPermissionsGetUsersResponseDataItemUserReporterList': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["empId"]) -> MetaOapg.properties.empId: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["resourceId", "name", "position", "assignments", "allocation", "startDate", "endDate", "workerType", "location", "timeZone", "notes", "emailAddress", "phone", "im", "dateOfBirth", "gender", "imageName", "customFieldList", "department", "departmentLabel", "profileName", "userReporterList", "empId", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["resourceId"]) -> typing.Union[MetaOapg.properties.resourceId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["position"]) -> typing.Union[MetaOapg.properties.position, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["assignments"]) -> typing.Union[MetaOapg.properties.assignments, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["allocation"]) -> typing.Union[MetaOapg.properties.allocation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["startDate"]) -> typing.Union[MetaOapg.properties.startDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["endDate"]) -> typing.Union[MetaOapg.properties.endDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["workerType"]) -> typing.Union[MetaOapg.properties.workerType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["location"]) -> typing.Union[MetaOapg.properties.location, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timeZone"]) -> typing.Union[MetaOapg.properties.timeZone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["notes"]) -> typing.Union[MetaOapg.properties.notes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["emailAddress"]) -> typing.Union[MetaOapg.properties.emailAddress, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["phone"]) -> typing.Union[MetaOapg.properties.phone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["im"]) -> typing.Union[MetaOapg.properties.im, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dateOfBirth"]) -> typing.Union[MetaOapg.properties.dateOfBirth, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gender"]) -> typing.Union[MetaOapg.properties.gender, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["imageName"]) -> typing.Union[MetaOapg.properties.imageName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customFieldList"]) -> typing.Union[MetaOapg.properties.customFieldList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["department"]) -> typing.Union[MetaOapg.properties.department, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["departmentLabel"]) -> typing.Union[MetaOapg.properties.departmentLabel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profileName"]) -> typing.Union[MetaOapg.properties.profileName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userReporterList"]) -> typing.Union['PeopleAndPermissionsGetUsersResponseDataItemUserReporterList', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["empId"]) -> typing.Union[MetaOapg.properties.empId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["resourceId", "name", "position", "assignments", "allocation", "startDate", "endDate", "workerType", "location", "timeZone", "notes", "emailAddress", "phone", "im", "dateOfBirth", "gender", "imageName", "customFieldList", "department", "departmentLabel", "profileName", "userReporterList", "empId", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        resourceId: typing.Union[MetaOapg.properties.resourceId, str, schemas.Unset] = schemas.unset,
        name: typing.Union[MetaOapg.properties.name, str, schemas.Unset] = schemas.unset,
        position: typing.Union[MetaOapg.properties.position, str, schemas.Unset] = schemas.unset,
        assignments: typing.Union[MetaOapg.properties.assignments, str, schemas.Unset] = schemas.unset,
        allocation: typing.Union[MetaOapg.properties.allocation, str, schemas.Unset] = schemas.unset,
        startDate: typing.Union[MetaOapg.properties.startDate, str, schemas.Unset] = schemas.unset,
        endDate: typing.Union[MetaOapg.properties.endDate, str, schemas.Unset] = schemas.unset,
        workerType: typing.Union[MetaOapg.properties.workerType, str, schemas.Unset] = schemas.unset,
        location: typing.Union[MetaOapg.properties.location, str, schemas.Unset] = schemas.unset,
        timeZone: typing.Union[MetaOapg.properties.timeZone, str, schemas.Unset] = schemas.unset,
        notes: typing.Union[MetaOapg.properties.notes, str, schemas.Unset] = schemas.unset,
        emailAddress: typing.Union[MetaOapg.properties.emailAddress, str, schemas.Unset] = schemas.unset,
        phone: typing.Union[MetaOapg.properties.phone, str, schemas.Unset] = schemas.unset,
        im: typing.Union[MetaOapg.properties.im, str, schemas.Unset] = schemas.unset,
        dateOfBirth: typing.Union[MetaOapg.properties.dateOfBirth, str, schemas.Unset] = schemas.unset,
        gender: typing.Union[MetaOapg.properties.gender, str, schemas.Unset] = schemas.unset,
        imageName: typing.Union[MetaOapg.properties.imageName, str, schemas.Unset] = schemas.unset,
        customFieldList: typing.Union[MetaOapg.properties.customFieldList, str, schemas.Unset] = schemas.unset,
        department: typing.Union[MetaOapg.properties.department, str, schemas.Unset] = schemas.unset,
        departmentLabel: typing.Union[MetaOapg.properties.departmentLabel, str, schemas.Unset] = schemas.unset,
        profileName: typing.Union[MetaOapg.properties.profileName, str, schemas.Unset] = schemas.unset,
        userReporterList: typing.Union['PeopleAndPermissionsGetUsersResponseDataItemUserReporterList', schemas.Unset] = schemas.unset,
        empId: typing.Union[MetaOapg.properties.empId, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PeopleAndPermissionsGetUsersResponseDataItem':
        return super().__new__(
            cls,
            *args,
            resourceId=resourceId,
            name=name,
            position=position,
            assignments=assignments,
            allocation=allocation,
            startDate=startDate,
            endDate=endDate,
            workerType=workerType,
            location=location,
            timeZone=timeZone,
            notes=notes,
            emailAddress=emailAddress,
            phone=phone,
            im=im,
            dateOfBirth=dateOfBirth,
            gender=gender,
            imageName=imageName,
            customFieldList=customFieldList,
            department=department,
            departmentLabel=departmentLabel,
            profileName=profileName,
            userReporterList=userReporterList,
            empId=empId,
            _configuration=_configuration,
            **kwargs,
        )

from clay_hr_python_sdk.model.people_and_permissions_get_users_response_data_item_user_reporter_list import PeopleAndPermissionsGetUsersResponseDataItemUserReporterList
