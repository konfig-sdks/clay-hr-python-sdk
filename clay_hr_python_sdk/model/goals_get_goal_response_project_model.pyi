# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from clay_hr_python_sdk import schemas  # noqa: F401


class GoalsGetGoalResponseProjectModel(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            projectId = schemas.StrSchema
            projectName = schemas.StrSchema
            projectDesc = schemas.StrSchema
            startdate = schemas.StrSchema
            enddate = schemas.StrSchema
            contactPerson = schemas.StrSchema
            account = schemas.StrSchema
            accountModel = schemas.StrSchema
            userModelList = schemas.StrSchema
            status = schemas.StrSchema
            createts = schemas.IntSchema
            shortCode = schemas.StrSchema
            probability = schemas.StrSchema
            contactPersonName = schemas.StrSchema
            statusValue = schemas.StrSchema
            pgroupid = schemas.StrSchema
            puid = schemas.StrSchema
            billingType = schemas.StrSchema
            timeSheetOpenToAll = schemas.StrSchema
        
            @staticmethod
            def userModel() -> typing.Type['GoalsGetGoalResponseProjectModelUserModel']:
                return GoalsGetGoalResponseProjectModelUserModel
            projectGroupModel = schemas.StrSchema
            groupName = schemas.StrSchema
            accountName = schemas.StrSchema
            pmMail = schemas.StrSchema
            locationid = schemas.StrSchema
            reportMethod = schemas.StrSchema
            industry = schemas.StrSchema
            cid = schemas.StrSchema
            isAdmin = schemas.StrSchema
            createuserid = schemas.StrSchema
            lastupdateuserid = schemas.StrSchema
            admin = schemas.StrSchema
            projStatus = schemas.StrSchema
            projProbability = schemas.StrSchema
            __annotations__ = {
                "projectId": projectId,
                "projectName": projectName,
                "projectDesc": projectDesc,
                "startdate": startdate,
                "enddate": enddate,
                "contactPerson": contactPerson,
                "account": account,
                "accountModel": accountModel,
                "userModelList": userModelList,
                "status": status,
                "createts": createts,
                "shortCode": shortCode,
                "probability": probability,
                "contactPersonName": contactPersonName,
                "statusValue": statusValue,
                "pgroupid": pgroupid,
                "puid": puid,
                "billingType": billingType,
                "timeSheetOpenToAll": timeSheetOpenToAll,
                "userModel": userModel,
                "projectGroupModel": projectGroupModel,
                "groupName": groupName,
                "accountName": accountName,
                "pmMail": pmMail,
                "locationid": locationid,
                "reportMethod": reportMethod,
                "industry": industry,
                "cid": cid,
                "isAdmin": isAdmin,
                "createuserid": createuserid,
                "lastupdateuserid": lastupdateuserid,
                "admin": admin,
                "projStatus": projStatus,
                "projProbability": projProbability,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["projectId"]) -> MetaOapg.properties.projectId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["projectName"]) -> MetaOapg.properties.projectName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["projectDesc"]) -> MetaOapg.properties.projectDesc: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["startdate"]) -> MetaOapg.properties.startdate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enddate"]) -> MetaOapg.properties.enddate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["contactPerson"]) -> MetaOapg.properties.contactPerson: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["account"]) -> MetaOapg.properties.account: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["accountModel"]) -> MetaOapg.properties.accountModel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userModelList"]) -> MetaOapg.properties.userModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createts"]) -> MetaOapg.properties.createts: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["shortCode"]) -> MetaOapg.properties.shortCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["probability"]) -> MetaOapg.properties.probability: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["contactPersonName"]) -> MetaOapg.properties.contactPersonName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statusValue"]) -> MetaOapg.properties.statusValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pgroupid"]) -> MetaOapg.properties.pgroupid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["puid"]) -> MetaOapg.properties.puid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["billingType"]) -> MetaOapg.properties.billingType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timeSheetOpenToAll"]) -> MetaOapg.properties.timeSheetOpenToAll: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userModel"]) -> 'GoalsGetGoalResponseProjectModelUserModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["projectGroupModel"]) -> MetaOapg.properties.projectGroupModel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["groupName"]) -> MetaOapg.properties.groupName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["accountName"]) -> MetaOapg.properties.accountName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pmMail"]) -> MetaOapg.properties.pmMail: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["locationid"]) -> MetaOapg.properties.locationid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reportMethod"]) -> MetaOapg.properties.reportMethod: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["industry"]) -> MetaOapg.properties.industry: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cid"]) -> MetaOapg.properties.cid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isAdmin"]) -> MetaOapg.properties.isAdmin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createuserid"]) -> MetaOapg.properties.createuserid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastupdateuserid"]) -> MetaOapg.properties.lastupdateuserid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["admin"]) -> MetaOapg.properties.admin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["projStatus"]) -> MetaOapg.properties.projStatus: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["projProbability"]) -> MetaOapg.properties.projProbability: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["projectId", "projectName", "projectDesc", "startdate", "enddate", "contactPerson", "account", "accountModel", "userModelList", "status", "createts", "shortCode", "probability", "contactPersonName", "statusValue", "pgroupid", "puid", "billingType", "timeSheetOpenToAll", "userModel", "projectGroupModel", "groupName", "accountName", "pmMail", "locationid", "reportMethod", "industry", "cid", "isAdmin", "createuserid", "lastupdateuserid", "admin", "projStatus", "projProbability", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["projectId"]) -> typing.Union[MetaOapg.properties.projectId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["projectName"]) -> typing.Union[MetaOapg.properties.projectName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["projectDesc"]) -> typing.Union[MetaOapg.properties.projectDesc, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["startdate"]) -> typing.Union[MetaOapg.properties.startdate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enddate"]) -> typing.Union[MetaOapg.properties.enddate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["contactPerson"]) -> typing.Union[MetaOapg.properties.contactPerson, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["account"]) -> typing.Union[MetaOapg.properties.account, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["accountModel"]) -> typing.Union[MetaOapg.properties.accountModel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userModelList"]) -> typing.Union[MetaOapg.properties.userModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union[MetaOapg.properties.status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createts"]) -> typing.Union[MetaOapg.properties.createts, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["shortCode"]) -> typing.Union[MetaOapg.properties.shortCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["probability"]) -> typing.Union[MetaOapg.properties.probability, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["contactPersonName"]) -> typing.Union[MetaOapg.properties.contactPersonName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statusValue"]) -> typing.Union[MetaOapg.properties.statusValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pgroupid"]) -> typing.Union[MetaOapg.properties.pgroupid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["puid"]) -> typing.Union[MetaOapg.properties.puid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["billingType"]) -> typing.Union[MetaOapg.properties.billingType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timeSheetOpenToAll"]) -> typing.Union[MetaOapg.properties.timeSheetOpenToAll, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userModel"]) -> typing.Union['GoalsGetGoalResponseProjectModelUserModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["projectGroupModel"]) -> typing.Union[MetaOapg.properties.projectGroupModel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["groupName"]) -> typing.Union[MetaOapg.properties.groupName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["accountName"]) -> typing.Union[MetaOapg.properties.accountName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pmMail"]) -> typing.Union[MetaOapg.properties.pmMail, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["locationid"]) -> typing.Union[MetaOapg.properties.locationid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reportMethod"]) -> typing.Union[MetaOapg.properties.reportMethod, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["industry"]) -> typing.Union[MetaOapg.properties.industry, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cid"]) -> typing.Union[MetaOapg.properties.cid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isAdmin"]) -> typing.Union[MetaOapg.properties.isAdmin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createuserid"]) -> typing.Union[MetaOapg.properties.createuserid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastupdateuserid"]) -> typing.Union[MetaOapg.properties.lastupdateuserid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["admin"]) -> typing.Union[MetaOapg.properties.admin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["projStatus"]) -> typing.Union[MetaOapg.properties.projStatus, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["projProbability"]) -> typing.Union[MetaOapg.properties.projProbability, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["projectId", "projectName", "projectDesc", "startdate", "enddate", "contactPerson", "account", "accountModel", "userModelList", "status", "createts", "shortCode", "probability", "contactPersonName", "statusValue", "pgroupid", "puid", "billingType", "timeSheetOpenToAll", "userModel", "projectGroupModel", "groupName", "accountName", "pmMail", "locationid", "reportMethod", "industry", "cid", "isAdmin", "createuserid", "lastupdateuserid", "admin", "projStatus", "projProbability", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        projectId: typing.Union[MetaOapg.properties.projectId, str, schemas.Unset] = schemas.unset,
        projectName: typing.Union[MetaOapg.properties.projectName, str, schemas.Unset] = schemas.unset,
        projectDesc: typing.Union[MetaOapg.properties.projectDesc, str, schemas.Unset] = schemas.unset,
        startdate: typing.Union[MetaOapg.properties.startdate, str, schemas.Unset] = schemas.unset,
        enddate: typing.Union[MetaOapg.properties.enddate, str, schemas.Unset] = schemas.unset,
        contactPerson: typing.Union[MetaOapg.properties.contactPerson, str, schemas.Unset] = schemas.unset,
        account: typing.Union[MetaOapg.properties.account, str, schemas.Unset] = schemas.unset,
        accountModel: typing.Union[MetaOapg.properties.accountModel, str, schemas.Unset] = schemas.unset,
        userModelList: typing.Union[MetaOapg.properties.userModelList, str, schemas.Unset] = schemas.unset,
        status: typing.Union[MetaOapg.properties.status, str, schemas.Unset] = schemas.unset,
        createts: typing.Union[MetaOapg.properties.createts, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        shortCode: typing.Union[MetaOapg.properties.shortCode, str, schemas.Unset] = schemas.unset,
        probability: typing.Union[MetaOapg.properties.probability, str, schemas.Unset] = schemas.unset,
        contactPersonName: typing.Union[MetaOapg.properties.contactPersonName, str, schemas.Unset] = schemas.unset,
        statusValue: typing.Union[MetaOapg.properties.statusValue, str, schemas.Unset] = schemas.unset,
        pgroupid: typing.Union[MetaOapg.properties.pgroupid, str, schemas.Unset] = schemas.unset,
        puid: typing.Union[MetaOapg.properties.puid, str, schemas.Unset] = schemas.unset,
        billingType: typing.Union[MetaOapg.properties.billingType, str, schemas.Unset] = schemas.unset,
        timeSheetOpenToAll: typing.Union[MetaOapg.properties.timeSheetOpenToAll, str, schemas.Unset] = schemas.unset,
        userModel: typing.Union['GoalsGetGoalResponseProjectModelUserModel', schemas.Unset] = schemas.unset,
        projectGroupModel: typing.Union[MetaOapg.properties.projectGroupModel, str, schemas.Unset] = schemas.unset,
        groupName: typing.Union[MetaOapg.properties.groupName, str, schemas.Unset] = schemas.unset,
        accountName: typing.Union[MetaOapg.properties.accountName, str, schemas.Unset] = schemas.unset,
        pmMail: typing.Union[MetaOapg.properties.pmMail, str, schemas.Unset] = schemas.unset,
        locationid: typing.Union[MetaOapg.properties.locationid, str, schemas.Unset] = schemas.unset,
        reportMethod: typing.Union[MetaOapg.properties.reportMethod, str, schemas.Unset] = schemas.unset,
        industry: typing.Union[MetaOapg.properties.industry, str, schemas.Unset] = schemas.unset,
        cid: typing.Union[MetaOapg.properties.cid, str, schemas.Unset] = schemas.unset,
        isAdmin: typing.Union[MetaOapg.properties.isAdmin, str, schemas.Unset] = schemas.unset,
        createuserid: typing.Union[MetaOapg.properties.createuserid, str, schemas.Unset] = schemas.unset,
        lastupdateuserid: typing.Union[MetaOapg.properties.lastupdateuserid, str, schemas.Unset] = schemas.unset,
        admin: typing.Union[MetaOapg.properties.admin, str, schemas.Unset] = schemas.unset,
        projStatus: typing.Union[MetaOapg.properties.projStatus, str, schemas.Unset] = schemas.unset,
        projProbability: typing.Union[MetaOapg.properties.projProbability, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'GoalsGetGoalResponseProjectModel':
        return super().__new__(
            cls,
            *args,
            projectId=projectId,
            projectName=projectName,
            projectDesc=projectDesc,
            startdate=startdate,
            enddate=enddate,
            contactPerson=contactPerson,
            account=account,
            accountModel=accountModel,
            userModelList=userModelList,
            status=status,
            createts=createts,
            shortCode=shortCode,
            probability=probability,
            contactPersonName=contactPersonName,
            statusValue=statusValue,
            pgroupid=pgroupid,
            puid=puid,
            billingType=billingType,
            timeSheetOpenToAll=timeSheetOpenToAll,
            userModel=userModel,
            projectGroupModel=projectGroupModel,
            groupName=groupName,
            accountName=accountName,
            pmMail=pmMail,
            locationid=locationid,
            reportMethod=reportMethod,
            industry=industry,
            cid=cid,
            isAdmin=isAdmin,
            createuserid=createuserid,
            lastupdateuserid=lastupdateuserid,
            admin=admin,
            projStatus=projStatus,
            projProbability=projProbability,
            _configuration=_configuration,
            **kwargs,
        )

from clay_hr_python_sdk.model.goals_get_goal_response_project_model_user_model import GoalsGetGoalResponseProjectModelUserModel
