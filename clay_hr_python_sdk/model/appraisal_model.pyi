# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from clay_hr_python_sdk import schemas  # noqa: F401


class AppraisalModel(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            description = schemas.StrSchema
            appraisalId = schemas.Int32Schema
            appraisalName = schemas.StrSchema
            appraisalType = schemas.StrSchema
            candidatePositionId = schemas.Int64Schema
            cid = schemas.Int32Schema
            completionDate = schemas.DateSchema
            createUserId = schemas.Int32Schema
        
            @staticmethod
            def createUserModel() -> typing.Type['UserModel']:
                return UserModel
            createts = schemas.DateSchema
            endDate = schemas.DateSchema
            finalComment = schemas.StrSchema
            finalValue = schemas.Float64Schema
            finalValueStr = schemas.StrSchema
            managerId = schemas.Int32Schema
        
            @staticmethod
            def managerUserModel() -> typing.Type['UserModel']:
                return UserModel
            obtype = schemas.StrSchema
            preFinalComment = schemas.StrSchema
            preFinalValue = schemas.Float64Schema
            preFinalValueStr = schemas.StrSchema
            reviewMode = schemas.StrSchema
            saveForLater = schemas.Int32Schema
            scoreTemplateId = schemas.Int32Schema
        
            @staticmethod
            def scoreTemplateModel() -> typing.Type['AssessmentModel']:
                return AssessmentModel
            showFinalValue = schemas.Int32Schema
            showWeightedTotal = schemas.Int32Schema
            startDate = schemas.DateSchema
            status = schemas.StrSchema
            statusCode = schemas.StrSchema
            userId = schemas.Int32Schema
        
            @staticmethod
            def userModel() -> typing.Type['UserModel']:
                return UserModel
        
            @staticmethod
            def userViewModel() -> typing.Type['UserViewModel']:
                return UserViewModel
            workflowId = schemas.Int32Schema
            __annotations__ = {
                "description": description,
                "appraisalId": appraisalId,
                "appraisalName": appraisalName,
                "appraisalType": appraisalType,
                "candidatePositionId": candidatePositionId,
                "cid": cid,
                "completionDate": completionDate,
                "createUserId": createUserId,
                "createUserModel": createUserModel,
                "createts": createts,
                "endDate": endDate,
                "finalComment": finalComment,
                "finalValue": finalValue,
                "finalValueStr": finalValueStr,
                "managerId": managerId,
                "managerUserModel": managerUserModel,
                "obtype": obtype,
                "preFinalComment": preFinalComment,
                "preFinalValue": preFinalValue,
                "preFinalValueStr": preFinalValueStr,
                "reviewMode": reviewMode,
                "saveForLater": saveForLater,
                "scoreTemplateId": scoreTemplateId,
                "scoreTemplateModel": scoreTemplateModel,
                "showFinalValue": showFinalValue,
                "showWeightedTotal": showWeightedTotal,
                "startDate": startDate,
                "status": status,
                "statusCode": statusCode,
                "userId": userId,
                "userModel": userModel,
                "userViewModel": userViewModel,
                "workflowId": workflowId,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["appraisalId"]) -> MetaOapg.properties.appraisalId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["appraisalName"]) -> MetaOapg.properties.appraisalName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["appraisalType"]) -> MetaOapg.properties.appraisalType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["candidatePositionId"]) -> MetaOapg.properties.candidatePositionId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cid"]) -> MetaOapg.properties.cid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["completionDate"]) -> MetaOapg.properties.completionDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createUserId"]) -> MetaOapg.properties.createUserId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createUserModel"]) -> 'UserModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createts"]) -> MetaOapg.properties.createts: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["endDate"]) -> MetaOapg.properties.endDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["finalComment"]) -> MetaOapg.properties.finalComment: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["finalValue"]) -> MetaOapg.properties.finalValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["finalValueStr"]) -> MetaOapg.properties.finalValueStr: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["managerId"]) -> MetaOapg.properties.managerId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["managerUserModel"]) -> 'UserModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["obtype"]) -> MetaOapg.properties.obtype: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["preFinalComment"]) -> MetaOapg.properties.preFinalComment: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["preFinalValue"]) -> MetaOapg.properties.preFinalValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["preFinalValueStr"]) -> MetaOapg.properties.preFinalValueStr: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reviewMode"]) -> MetaOapg.properties.reviewMode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["saveForLater"]) -> MetaOapg.properties.saveForLater: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["scoreTemplateId"]) -> MetaOapg.properties.scoreTemplateId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["scoreTemplateModel"]) -> 'AssessmentModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["showFinalValue"]) -> MetaOapg.properties.showFinalValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["showWeightedTotal"]) -> MetaOapg.properties.showWeightedTotal: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["startDate"]) -> MetaOapg.properties.startDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statusCode"]) -> MetaOapg.properties.statusCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userId"]) -> MetaOapg.properties.userId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userModel"]) -> 'UserModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userViewModel"]) -> 'UserViewModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["workflowId"]) -> MetaOapg.properties.workflowId: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["description", "appraisalId", "appraisalName", "appraisalType", "candidatePositionId", "cid", "completionDate", "createUserId", "createUserModel", "createts", "endDate", "finalComment", "finalValue", "finalValueStr", "managerId", "managerUserModel", "obtype", "preFinalComment", "preFinalValue", "preFinalValueStr", "reviewMode", "saveForLater", "scoreTemplateId", "scoreTemplateModel", "showFinalValue", "showWeightedTotal", "startDate", "status", "statusCode", "userId", "userModel", "userViewModel", "workflowId", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> typing.Union[MetaOapg.properties.description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["appraisalId"]) -> typing.Union[MetaOapg.properties.appraisalId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["appraisalName"]) -> typing.Union[MetaOapg.properties.appraisalName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["appraisalType"]) -> typing.Union[MetaOapg.properties.appraisalType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["candidatePositionId"]) -> typing.Union[MetaOapg.properties.candidatePositionId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cid"]) -> typing.Union[MetaOapg.properties.cid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["completionDate"]) -> typing.Union[MetaOapg.properties.completionDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createUserId"]) -> typing.Union[MetaOapg.properties.createUserId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createUserModel"]) -> typing.Union['UserModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createts"]) -> typing.Union[MetaOapg.properties.createts, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["endDate"]) -> typing.Union[MetaOapg.properties.endDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["finalComment"]) -> typing.Union[MetaOapg.properties.finalComment, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["finalValue"]) -> typing.Union[MetaOapg.properties.finalValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["finalValueStr"]) -> typing.Union[MetaOapg.properties.finalValueStr, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["managerId"]) -> typing.Union[MetaOapg.properties.managerId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["managerUserModel"]) -> typing.Union['UserModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["obtype"]) -> typing.Union[MetaOapg.properties.obtype, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["preFinalComment"]) -> typing.Union[MetaOapg.properties.preFinalComment, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["preFinalValue"]) -> typing.Union[MetaOapg.properties.preFinalValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["preFinalValueStr"]) -> typing.Union[MetaOapg.properties.preFinalValueStr, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reviewMode"]) -> typing.Union[MetaOapg.properties.reviewMode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["saveForLater"]) -> typing.Union[MetaOapg.properties.saveForLater, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["scoreTemplateId"]) -> typing.Union[MetaOapg.properties.scoreTemplateId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["scoreTemplateModel"]) -> typing.Union['AssessmentModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["showFinalValue"]) -> typing.Union[MetaOapg.properties.showFinalValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["showWeightedTotal"]) -> typing.Union[MetaOapg.properties.showWeightedTotal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["startDate"]) -> typing.Union[MetaOapg.properties.startDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union[MetaOapg.properties.status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statusCode"]) -> typing.Union[MetaOapg.properties.statusCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userId"]) -> typing.Union[MetaOapg.properties.userId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userModel"]) -> typing.Union['UserModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userViewModel"]) -> typing.Union['UserViewModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["workflowId"]) -> typing.Union[MetaOapg.properties.workflowId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["description", "appraisalId", "appraisalName", "appraisalType", "candidatePositionId", "cid", "completionDate", "createUserId", "createUserModel", "createts", "endDate", "finalComment", "finalValue", "finalValueStr", "managerId", "managerUserModel", "obtype", "preFinalComment", "preFinalValue", "preFinalValueStr", "reviewMode", "saveForLater", "scoreTemplateId", "scoreTemplateModel", "showFinalValue", "showWeightedTotal", "startDate", "status", "statusCode", "userId", "userModel", "userViewModel", "workflowId", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        description: typing.Union[MetaOapg.properties.description, str, schemas.Unset] = schemas.unset,
        appraisalId: typing.Union[MetaOapg.properties.appraisalId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        appraisalName: typing.Union[MetaOapg.properties.appraisalName, str, schemas.Unset] = schemas.unset,
        appraisalType: typing.Union[MetaOapg.properties.appraisalType, str, schemas.Unset] = schemas.unset,
        candidatePositionId: typing.Union[MetaOapg.properties.candidatePositionId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        cid: typing.Union[MetaOapg.properties.cid, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        completionDate: typing.Union[MetaOapg.properties.completionDate, str, date, schemas.Unset] = schemas.unset,
        createUserId: typing.Union[MetaOapg.properties.createUserId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        createUserModel: typing.Union['UserModel', schemas.Unset] = schemas.unset,
        createts: typing.Union[MetaOapg.properties.createts, str, date, schemas.Unset] = schemas.unset,
        endDate: typing.Union[MetaOapg.properties.endDate, str, date, schemas.Unset] = schemas.unset,
        finalComment: typing.Union[MetaOapg.properties.finalComment, str, schemas.Unset] = schemas.unset,
        finalValue: typing.Union[MetaOapg.properties.finalValue, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        finalValueStr: typing.Union[MetaOapg.properties.finalValueStr, str, schemas.Unset] = schemas.unset,
        managerId: typing.Union[MetaOapg.properties.managerId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        managerUserModel: typing.Union['UserModel', schemas.Unset] = schemas.unset,
        obtype: typing.Union[MetaOapg.properties.obtype, str, schemas.Unset] = schemas.unset,
        preFinalComment: typing.Union[MetaOapg.properties.preFinalComment, str, schemas.Unset] = schemas.unset,
        preFinalValue: typing.Union[MetaOapg.properties.preFinalValue, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        preFinalValueStr: typing.Union[MetaOapg.properties.preFinalValueStr, str, schemas.Unset] = schemas.unset,
        reviewMode: typing.Union[MetaOapg.properties.reviewMode, str, schemas.Unset] = schemas.unset,
        saveForLater: typing.Union[MetaOapg.properties.saveForLater, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        scoreTemplateId: typing.Union[MetaOapg.properties.scoreTemplateId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        scoreTemplateModel: typing.Union['AssessmentModel', schemas.Unset] = schemas.unset,
        showFinalValue: typing.Union[MetaOapg.properties.showFinalValue, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        showWeightedTotal: typing.Union[MetaOapg.properties.showWeightedTotal, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        startDate: typing.Union[MetaOapg.properties.startDate, str, date, schemas.Unset] = schemas.unset,
        status: typing.Union[MetaOapg.properties.status, str, schemas.Unset] = schemas.unset,
        statusCode: typing.Union[MetaOapg.properties.statusCode, str, schemas.Unset] = schemas.unset,
        userId: typing.Union[MetaOapg.properties.userId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        userModel: typing.Union['UserModel', schemas.Unset] = schemas.unset,
        userViewModel: typing.Union['UserViewModel', schemas.Unset] = schemas.unset,
        workflowId: typing.Union[MetaOapg.properties.workflowId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'AppraisalModel':
        return super().__new__(
            cls,
            *args,
            description=description,
            appraisalId=appraisalId,
            appraisalName=appraisalName,
            appraisalType=appraisalType,
            candidatePositionId=candidatePositionId,
            cid=cid,
            completionDate=completionDate,
            createUserId=createUserId,
            createUserModel=createUserModel,
            createts=createts,
            endDate=endDate,
            finalComment=finalComment,
            finalValue=finalValue,
            finalValueStr=finalValueStr,
            managerId=managerId,
            managerUserModel=managerUserModel,
            obtype=obtype,
            preFinalComment=preFinalComment,
            preFinalValue=preFinalValue,
            preFinalValueStr=preFinalValueStr,
            reviewMode=reviewMode,
            saveForLater=saveForLater,
            scoreTemplateId=scoreTemplateId,
            scoreTemplateModel=scoreTemplateModel,
            showFinalValue=showFinalValue,
            showWeightedTotal=showWeightedTotal,
            startDate=startDate,
            status=status,
            statusCode=statusCode,
            userId=userId,
            userModel=userModel,
            userViewModel=userViewModel,
            workflowId=workflowId,
            _configuration=_configuration,
            **kwargs,
        )

from clay_hr_python_sdk.model.assessment_model import AssessmentModel
from clay_hr_python_sdk.model.user_model import UserModel
from clay_hr_python_sdk.model.user_view_model import UserViewModel
