# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from clay_hr_python_sdk import schemas  # noqa: F401


class CandidatesGetBasicDetailsResponseDataItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            recruitId = schemas.StrSchema
            name = schemas.StrSchema
            email = schemas.StrSchema
            phone = schemas.StrSchema
            dateOfBirth = schemas.StrSchema
            statusid = schemas.StrSchema
            referrerId = schemas.StrSchema
            createts = schemas.StrSchema
            notes = schemas.StrSchema
            source = schemas.StrSchema
            userid = schemas.StrSchema
            recruiterUserId = schemas.StrSchema
            summaryByCandidate = schemas.StrSchema
            candidateLock = schemas.StrSchema
            educationStr = schemas.StrSchema
            status = schemas.StrSchema
            appliedPositions = schemas.StrSchema
            updatedOn = schemas.StrSchema
            cid = schemas.StrSchema
            tagIds = schemas.StrSchema
            statusColor = schemas.StrSchema
            appliedPositionIds = schemas.StrSchema
            appliedPositionUids = schemas.StrSchema
            recruiterThumbnail = schemas.StrSchema
            recruiterName = schemas.StrSchema
            recruiterGender = schemas.StrSchema
            referrerName = schemas.StrSchema
            isInternalCand = schemas.StrSchema
            applicationStatus = schemas.StrSchema
            verified = schemas.StrSchema
            positionNameList = schemas.StrSchema
            internalCandidate = schemas.StrSchema
            __annotations__ = {
                "recruitId": recruitId,
                "name": name,
                "email": email,
                "phone": phone,
                "dateOfBirth": dateOfBirth,
                "statusid": statusid,
                "referrerId": referrerId,
                "createts": createts,
                "notes": notes,
                "source": source,
                "userid": userid,
                "recruiterUserId": recruiterUserId,
                "summaryByCandidate": summaryByCandidate,
                "candidateLock": candidateLock,
                "educationStr": educationStr,
                "status": status,
                "appliedPositions": appliedPositions,
                "updatedOn": updatedOn,
                "cid": cid,
                "tagIds": tagIds,
                "statusColor": statusColor,
                "appliedPositionIds": appliedPositionIds,
                "appliedPositionUids": appliedPositionUids,
                "recruiterThumbnail": recruiterThumbnail,
                "recruiterName": recruiterName,
                "recruiterGender": recruiterGender,
                "referrerName": referrerName,
                "isInternalCand": isInternalCand,
                "applicationStatus": applicationStatus,
                "verified": verified,
                "positionNameList": positionNameList,
                "internalCandidate": internalCandidate,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["recruitId"]) -> MetaOapg.properties.recruitId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["email"]) -> MetaOapg.properties.email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["phone"]) -> MetaOapg.properties.phone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dateOfBirth"]) -> MetaOapg.properties.dateOfBirth: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statusid"]) -> MetaOapg.properties.statusid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["referrerId"]) -> MetaOapg.properties.referrerId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createts"]) -> MetaOapg.properties.createts: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["notes"]) -> MetaOapg.properties.notes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["source"]) -> MetaOapg.properties.source: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userid"]) -> MetaOapg.properties.userid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["recruiterUserId"]) -> MetaOapg.properties.recruiterUserId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["summaryByCandidate"]) -> MetaOapg.properties.summaryByCandidate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["candidateLock"]) -> MetaOapg.properties.candidateLock: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["educationStr"]) -> MetaOapg.properties.educationStr: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["appliedPositions"]) -> MetaOapg.properties.appliedPositions: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["updatedOn"]) -> MetaOapg.properties.updatedOn: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cid"]) -> MetaOapg.properties.cid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tagIds"]) -> MetaOapg.properties.tagIds: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statusColor"]) -> MetaOapg.properties.statusColor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["appliedPositionIds"]) -> MetaOapg.properties.appliedPositionIds: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["appliedPositionUids"]) -> MetaOapg.properties.appliedPositionUids: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["recruiterThumbnail"]) -> MetaOapg.properties.recruiterThumbnail: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["recruiterName"]) -> MetaOapg.properties.recruiterName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["recruiterGender"]) -> MetaOapg.properties.recruiterGender: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["referrerName"]) -> MetaOapg.properties.referrerName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isInternalCand"]) -> MetaOapg.properties.isInternalCand: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["applicationStatus"]) -> MetaOapg.properties.applicationStatus: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["verified"]) -> MetaOapg.properties.verified: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["positionNameList"]) -> MetaOapg.properties.positionNameList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["internalCandidate"]) -> MetaOapg.properties.internalCandidate: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["recruitId", "name", "email", "phone", "dateOfBirth", "statusid", "referrerId", "createts", "notes", "source", "userid", "recruiterUserId", "summaryByCandidate", "candidateLock", "educationStr", "status", "appliedPositions", "updatedOn", "cid", "tagIds", "statusColor", "appliedPositionIds", "appliedPositionUids", "recruiterThumbnail", "recruiterName", "recruiterGender", "referrerName", "isInternalCand", "applicationStatus", "verified", "positionNameList", "internalCandidate", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["recruitId"]) -> typing.Union[MetaOapg.properties.recruitId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["email"]) -> typing.Union[MetaOapg.properties.email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["phone"]) -> typing.Union[MetaOapg.properties.phone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dateOfBirth"]) -> typing.Union[MetaOapg.properties.dateOfBirth, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statusid"]) -> typing.Union[MetaOapg.properties.statusid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["referrerId"]) -> typing.Union[MetaOapg.properties.referrerId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createts"]) -> typing.Union[MetaOapg.properties.createts, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["notes"]) -> typing.Union[MetaOapg.properties.notes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["source"]) -> typing.Union[MetaOapg.properties.source, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userid"]) -> typing.Union[MetaOapg.properties.userid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["recruiterUserId"]) -> typing.Union[MetaOapg.properties.recruiterUserId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["summaryByCandidate"]) -> typing.Union[MetaOapg.properties.summaryByCandidate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["candidateLock"]) -> typing.Union[MetaOapg.properties.candidateLock, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["educationStr"]) -> typing.Union[MetaOapg.properties.educationStr, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union[MetaOapg.properties.status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["appliedPositions"]) -> typing.Union[MetaOapg.properties.appliedPositions, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["updatedOn"]) -> typing.Union[MetaOapg.properties.updatedOn, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cid"]) -> typing.Union[MetaOapg.properties.cid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tagIds"]) -> typing.Union[MetaOapg.properties.tagIds, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statusColor"]) -> typing.Union[MetaOapg.properties.statusColor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["appliedPositionIds"]) -> typing.Union[MetaOapg.properties.appliedPositionIds, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["appliedPositionUids"]) -> typing.Union[MetaOapg.properties.appliedPositionUids, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["recruiterThumbnail"]) -> typing.Union[MetaOapg.properties.recruiterThumbnail, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["recruiterName"]) -> typing.Union[MetaOapg.properties.recruiterName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["recruiterGender"]) -> typing.Union[MetaOapg.properties.recruiterGender, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["referrerName"]) -> typing.Union[MetaOapg.properties.referrerName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isInternalCand"]) -> typing.Union[MetaOapg.properties.isInternalCand, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["applicationStatus"]) -> typing.Union[MetaOapg.properties.applicationStatus, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["verified"]) -> typing.Union[MetaOapg.properties.verified, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["positionNameList"]) -> typing.Union[MetaOapg.properties.positionNameList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["internalCandidate"]) -> typing.Union[MetaOapg.properties.internalCandidate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["recruitId", "name", "email", "phone", "dateOfBirth", "statusid", "referrerId", "createts", "notes", "source", "userid", "recruiterUserId", "summaryByCandidate", "candidateLock", "educationStr", "status", "appliedPositions", "updatedOn", "cid", "tagIds", "statusColor", "appliedPositionIds", "appliedPositionUids", "recruiterThumbnail", "recruiterName", "recruiterGender", "referrerName", "isInternalCand", "applicationStatus", "verified", "positionNameList", "internalCandidate", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        recruitId: typing.Union[MetaOapg.properties.recruitId, str, schemas.Unset] = schemas.unset,
        name: typing.Union[MetaOapg.properties.name, str, schemas.Unset] = schemas.unset,
        email: typing.Union[MetaOapg.properties.email, str, schemas.Unset] = schemas.unset,
        phone: typing.Union[MetaOapg.properties.phone, str, schemas.Unset] = schemas.unset,
        dateOfBirth: typing.Union[MetaOapg.properties.dateOfBirth, str, schemas.Unset] = schemas.unset,
        statusid: typing.Union[MetaOapg.properties.statusid, str, schemas.Unset] = schemas.unset,
        referrerId: typing.Union[MetaOapg.properties.referrerId, str, schemas.Unset] = schemas.unset,
        createts: typing.Union[MetaOapg.properties.createts, str, schemas.Unset] = schemas.unset,
        notes: typing.Union[MetaOapg.properties.notes, str, schemas.Unset] = schemas.unset,
        source: typing.Union[MetaOapg.properties.source, str, schemas.Unset] = schemas.unset,
        userid: typing.Union[MetaOapg.properties.userid, str, schemas.Unset] = schemas.unset,
        recruiterUserId: typing.Union[MetaOapg.properties.recruiterUserId, str, schemas.Unset] = schemas.unset,
        summaryByCandidate: typing.Union[MetaOapg.properties.summaryByCandidate, str, schemas.Unset] = schemas.unset,
        candidateLock: typing.Union[MetaOapg.properties.candidateLock, str, schemas.Unset] = schemas.unset,
        educationStr: typing.Union[MetaOapg.properties.educationStr, str, schemas.Unset] = schemas.unset,
        status: typing.Union[MetaOapg.properties.status, str, schemas.Unset] = schemas.unset,
        appliedPositions: typing.Union[MetaOapg.properties.appliedPositions, str, schemas.Unset] = schemas.unset,
        updatedOn: typing.Union[MetaOapg.properties.updatedOn, str, schemas.Unset] = schemas.unset,
        cid: typing.Union[MetaOapg.properties.cid, str, schemas.Unset] = schemas.unset,
        tagIds: typing.Union[MetaOapg.properties.tagIds, str, schemas.Unset] = schemas.unset,
        statusColor: typing.Union[MetaOapg.properties.statusColor, str, schemas.Unset] = schemas.unset,
        appliedPositionIds: typing.Union[MetaOapg.properties.appliedPositionIds, str, schemas.Unset] = schemas.unset,
        appliedPositionUids: typing.Union[MetaOapg.properties.appliedPositionUids, str, schemas.Unset] = schemas.unset,
        recruiterThumbnail: typing.Union[MetaOapg.properties.recruiterThumbnail, str, schemas.Unset] = schemas.unset,
        recruiterName: typing.Union[MetaOapg.properties.recruiterName, str, schemas.Unset] = schemas.unset,
        recruiterGender: typing.Union[MetaOapg.properties.recruiterGender, str, schemas.Unset] = schemas.unset,
        referrerName: typing.Union[MetaOapg.properties.referrerName, str, schemas.Unset] = schemas.unset,
        isInternalCand: typing.Union[MetaOapg.properties.isInternalCand, str, schemas.Unset] = schemas.unset,
        applicationStatus: typing.Union[MetaOapg.properties.applicationStatus, str, schemas.Unset] = schemas.unset,
        verified: typing.Union[MetaOapg.properties.verified, str, schemas.Unset] = schemas.unset,
        positionNameList: typing.Union[MetaOapg.properties.positionNameList, str, schemas.Unset] = schemas.unset,
        internalCandidate: typing.Union[MetaOapg.properties.internalCandidate, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CandidatesGetBasicDetailsResponseDataItem':
        return super().__new__(
            cls,
            *args,
            recruitId=recruitId,
            name=name,
            email=email,
            phone=phone,
            dateOfBirth=dateOfBirth,
            statusid=statusid,
            referrerId=referrerId,
            createts=createts,
            notes=notes,
            source=source,
            userid=userid,
            recruiterUserId=recruiterUserId,
            summaryByCandidate=summaryByCandidate,
            candidateLock=candidateLock,
            educationStr=educationStr,
            status=status,
            appliedPositions=appliedPositions,
            updatedOn=updatedOn,
            cid=cid,
            tagIds=tagIds,
            statusColor=statusColor,
            appliedPositionIds=appliedPositionIds,
            appliedPositionUids=appliedPositionUids,
            recruiterThumbnail=recruiterThumbnail,
            recruiterName=recruiterName,
            recruiterGender=recruiterGender,
            referrerName=referrerName,
            isInternalCand=isInternalCand,
            applicationStatus=applicationStatus,
            verified=verified,
            positionNameList=positionNameList,
            internalCandidate=internalCandidate,
            _configuration=_configuration,
            **kwargs,
        )
