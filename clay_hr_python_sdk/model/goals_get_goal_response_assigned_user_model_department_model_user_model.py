# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from clay_hr_python_sdk import schemas  # noqa: F401


class GoalsGetGoalResponseAssignedUserModelDepartmentModelUserModel(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            userId = schemas.StrSchema
            firstName = schemas.StrSchema
            lastName = schemas.StrSchema
            name = schemas.StrSchema
            phone = schemas.StrSchema
            email = schemas.StrSchema
            status = schemas.StrSchema
            shortName = schemas.StrSchema
            thumbnail = schemas.StrSchema
            gender = schemas.StrSchema
            jobTitle = schemas.StrSchema
            departmentId = schemas.StrSchema
            locationId = schemas.StrSchema
            department = schemas.StrSchema
            location = schemas.StrSchema
            profileId = schemas.StrSchema
            timezone = schemas.StrSchema
            userStartdate = schemas.StrSchema
            userEnddate = schemas.StrSchema
            cellPhone = schemas.StrSchema
            empId = schemas.StrSchema
            userdateOfBirth = schemas.StrSchema
            allocation = schemas.StrSchema
            userdateFormat = schemas.StrSchema
            star = schemas.StrSchema
            imageName = schemas.StrSchema
            notes = schemas.StrSchema
            im = schemas.StrSchema
            createuserid = schemas.StrSchema
            countryId = schemas.StrSchema
            cid = schemas.StrSchema
            guid = schemas.StrSchema
            hasAccess = schemas.StrSchema
            displayName = schemas.StrSchema
            id = schemas.StrSchema
            __annotations__ = {
                "userId": userId,
                "firstName": firstName,
                "lastName": lastName,
                "name": name,
                "phone": phone,
                "email": email,
                "status": status,
                "shortName": shortName,
                "thumbnail": thumbnail,
                "gender": gender,
                "jobTitle": jobTitle,
                "departmentId": departmentId,
                "locationId": locationId,
                "department": department,
                "location": location,
                "profileId": profileId,
                "timezone": timezone,
                "userStartdate": userStartdate,
                "userEnddate": userEnddate,
                "cellPhone": cellPhone,
                "empId": empId,
                "userdateOfBirth": userdateOfBirth,
                "allocation": allocation,
                "userdateFormat": userdateFormat,
                "star": star,
                "imageName": imageName,
                "notes": notes,
                "im": im,
                "createuserid": createuserid,
                "countryId": countryId,
                "cid": cid,
                "guid": guid,
                "hasAccess": hasAccess,
                "displayName": displayName,
                "id": id,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userId"]) -> MetaOapg.properties.userId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["firstName"]) -> MetaOapg.properties.firstName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastName"]) -> MetaOapg.properties.lastName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["phone"]) -> MetaOapg.properties.phone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["email"]) -> MetaOapg.properties.email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["shortName"]) -> MetaOapg.properties.shortName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumbnail"]) -> MetaOapg.properties.thumbnail: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gender"]) -> MetaOapg.properties.gender: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["jobTitle"]) -> MetaOapg.properties.jobTitle: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["departmentId"]) -> MetaOapg.properties.departmentId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["locationId"]) -> MetaOapg.properties.locationId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["department"]) -> MetaOapg.properties.department: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["location"]) -> MetaOapg.properties.location: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profileId"]) -> MetaOapg.properties.profileId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timezone"]) -> MetaOapg.properties.timezone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userStartdate"]) -> MetaOapg.properties.userStartdate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userEnddate"]) -> MetaOapg.properties.userEnddate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cellPhone"]) -> MetaOapg.properties.cellPhone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["empId"]) -> MetaOapg.properties.empId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userdateOfBirth"]) -> MetaOapg.properties.userdateOfBirth: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["allocation"]) -> MetaOapg.properties.allocation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userdateFormat"]) -> MetaOapg.properties.userdateFormat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["star"]) -> MetaOapg.properties.star: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["imageName"]) -> MetaOapg.properties.imageName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["notes"]) -> MetaOapg.properties.notes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["im"]) -> MetaOapg.properties.im: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createuserid"]) -> MetaOapg.properties.createuserid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["countryId"]) -> MetaOapg.properties.countryId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cid"]) -> MetaOapg.properties.cid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["guid"]) -> MetaOapg.properties.guid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hasAccess"]) -> MetaOapg.properties.hasAccess: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["displayName"]) -> MetaOapg.properties.displayName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["userId", "firstName", "lastName", "name", "phone", "email", "status", "shortName", "thumbnail", "gender", "jobTitle", "departmentId", "locationId", "department", "location", "profileId", "timezone", "userStartdate", "userEnddate", "cellPhone", "empId", "userdateOfBirth", "allocation", "userdateFormat", "star", "imageName", "notes", "im", "createuserid", "countryId", "cid", "guid", "hasAccess", "displayName", "id", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userId"]) -> typing.Union[MetaOapg.properties.userId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["firstName"]) -> typing.Union[MetaOapg.properties.firstName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastName"]) -> typing.Union[MetaOapg.properties.lastName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["phone"]) -> typing.Union[MetaOapg.properties.phone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["email"]) -> typing.Union[MetaOapg.properties.email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union[MetaOapg.properties.status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["shortName"]) -> typing.Union[MetaOapg.properties.shortName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumbnail"]) -> typing.Union[MetaOapg.properties.thumbnail, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gender"]) -> typing.Union[MetaOapg.properties.gender, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["jobTitle"]) -> typing.Union[MetaOapg.properties.jobTitle, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["departmentId"]) -> typing.Union[MetaOapg.properties.departmentId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["locationId"]) -> typing.Union[MetaOapg.properties.locationId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["department"]) -> typing.Union[MetaOapg.properties.department, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["location"]) -> typing.Union[MetaOapg.properties.location, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profileId"]) -> typing.Union[MetaOapg.properties.profileId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timezone"]) -> typing.Union[MetaOapg.properties.timezone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userStartdate"]) -> typing.Union[MetaOapg.properties.userStartdate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userEnddate"]) -> typing.Union[MetaOapg.properties.userEnddate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cellPhone"]) -> typing.Union[MetaOapg.properties.cellPhone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["empId"]) -> typing.Union[MetaOapg.properties.empId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userdateOfBirth"]) -> typing.Union[MetaOapg.properties.userdateOfBirth, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["allocation"]) -> typing.Union[MetaOapg.properties.allocation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userdateFormat"]) -> typing.Union[MetaOapg.properties.userdateFormat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["star"]) -> typing.Union[MetaOapg.properties.star, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["imageName"]) -> typing.Union[MetaOapg.properties.imageName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["notes"]) -> typing.Union[MetaOapg.properties.notes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["im"]) -> typing.Union[MetaOapg.properties.im, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createuserid"]) -> typing.Union[MetaOapg.properties.createuserid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["countryId"]) -> typing.Union[MetaOapg.properties.countryId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cid"]) -> typing.Union[MetaOapg.properties.cid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["guid"]) -> typing.Union[MetaOapg.properties.guid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hasAccess"]) -> typing.Union[MetaOapg.properties.hasAccess, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["displayName"]) -> typing.Union[MetaOapg.properties.displayName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["userId", "firstName", "lastName", "name", "phone", "email", "status", "shortName", "thumbnail", "gender", "jobTitle", "departmentId", "locationId", "department", "location", "profileId", "timezone", "userStartdate", "userEnddate", "cellPhone", "empId", "userdateOfBirth", "allocation", "userdateFormat", "star", "imageName", "notes", "im", "createuserid", "countryId", "cid", "guid", "hasAccess", "displayName", "id", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        userId: typing.Union[MetaOapg.properties.userId, str, schemas.Unset] = schemas.unset,
        firstName: typing.Union[MetaOapg.properties.firstName, str, schemas.Unset] = schemas.unset,
        lastName: typing.Union[MetaOapg.properties.lastName, str, schemas.Unset] = schemas.unset,
        name: typing.Union[MetaOapg.properties.name, str, schemas.Unset] = schemas.unset,
        phone: typing.Union[MetaOapg.properties.phone, str, schemas.Unset] = schemas.unset,
        email: typing.Union[MetaOapg.properties.email, str, schemas.Unset] = schemas.unset,
        status: typing.Union[MetaOapg.properties.status, str, schemas.Unset] = schemas.unset,
        shortName: typing.Union[MetaOapg.properties.shortName, str, schemas.Unset] = schemas.unset,
        thumbnail: typing.Union[MetaOapg.properties.thumbnail, str, schemas.Unset] = schemas.unset,
        gender: typing.Union[MetaOapg.properties.gender, str, schemas.Unset] = schemas.unset,
        jobTitle: typing.Union[MetaOapg.properties.jobTitle, str, schemas.Unset] = schemas.unset,
        departmentId: typing.Union[MetaOapg.properties.departmentId, str, schemas.Unset] = schemas.unset,
        locationId: typing.Union[MetaOapg.properties.locationId, str, schemas.Unset] = schemas.unset,
        department: typing.Union[MetaOapg.properties.department, str, schemas.Unset] = schemas.unset,
        location: typing.Union[MetaOapg.properties.location, str, schemas.Unset] = schemas.unset,
        profileId: typing.Union[MetaOapg.properties.profileId, str, schemas.Unset] = schemas.unset,
        timezone: typing.Union[MetaOapg.properties.timezone, str, schemas.Unset] = schemas.unset,
        userStartdate: typing.Union[MetaOapg.properties.userStartdate, str, schemas.Unset] = schemas.unset,
        userEnddate: typing.Union[MetaOapg.properties.userEnddate, str, schemas.Unset] = schemas.unset,
        cellPhone: typing.Union[MetaOapg.properties.cellPhone, str, schemas.Unset] = schemas.unset,
        empId: typing.Union[MetaOapg.properties.empId, str, schemas.Unset] = schemas.unset,
        userdateOfBirth: typing.Union[MetaOapg.properties.userdateOfBirth, str, schemas.Unset] = schemas.unset,
        allocation: typing.Union[MetaOapg.properties.allocation, str, schemas.Unset] = schemas.unset,
        userdateFormat: typing.Union[MetaOapg.properties.userdateFormat, str, schemas.Unset] = schemas.unset,
        star: typing.Union[MetaOapg.properties.star, str, schemas.Unset] = schemas.unset,
        imageName: typing.Union[MetaOapg.properties.imageName, str, schemas.Unset] = schemas.unset,
        notes: typing.Union[MetaOapg.properties.notes, str, schemas.Unset] = schemas.unset,
        im: typing.Union[MetaOapg.properties.im, str, schemas.Unset] = schemas.unset,
        createuserid: typing.Union[MetaOapg.properties.createuserid, str, schemas.Unset] = schemas.unset,
        countryId: typing.Union[MetaOapg.properties.countryId, str, schemas.Unset] = schemas.unset,
        cid: typing.Union[MetaOapg.properties.cid, str, schemas.Unset] = schemas.unset,
        guid: typing.Union[MetaOapg.properties.guid, str, schemas.Unset] = schemas.unset,
        hasAccess: typing.Union[MetaOapg.properties.hasAccess, str, schemas.Unset] = schemas.unset,
        displayName: typing.Union[MetaOapg.properties.displayName, str, schemas.Unset] = schemas.unset,
        id: typing.Union[MetaOapg.properties.id, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'GoalsGetGoalResponseAssignedUserModelDepartmentModelUserModel':
        return super().__new__(
            cls,
            *args,
            userId=userId,
            firstName=firstName,
            lastName=lastName,
            name=name,
            phone=phone,
            email=email,
            status=status,
            shortName=shortName,
            thumbnail=thumbnail,
            gender=gender,
            jobTitle=jobTitle,
            departmentId=departmentId,
            locationId=locationId,
            department=department,
            location=location,
            profileId=profileId,
            timezone=timezone,
            userStartdate=userStartdate,
            userEnddate=userEnddate,
            cellPhone=cellPhone,
            empId=empId,
            userdateOfBirth=userdateOfBirth,
            allocation=allocation,
            userdateFormat=userdateFormat,
            star=star,
            imageName=imageName,
            notes=notes,
            im=im,
            createuserid=createuserid,
            countryId=countryId,
            cid=cid,
            guid=guid,
            hasAccess=hasAccess,
            displayName=displayName,
            id=id,
            _configuration=_configuration,
            **kwargs,
        )
