# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from clay_hr_python_sdk import schemas  # noqa: F401


class CustomFieldsGetCustomFieldsResponseDataItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            customFieldId = schemas.StrSchema
            customFieldName = schemas.StrSchema
            customFieldType = schemas.StrSchema
            objectType = schemas.StrSchema
            sequence = schemas.StrSchema
            cid = schemas.StrSchema
            fieldType = schemas.StrSchema
            defaultValue = schemas.StrSchema
            cfcode = schemas.StrSchema
            cfgroupid = schemas.StrSchema
            style = schemas.StrSchema
            opValues = schemas.StrSchema
            fieldFormula = schemas.StrSchema
            customFieldValueModel = schemas.StrSchema
        
            @staticmethod
            def customFieldValueModelList() -> typing.Type['CustomFieldsGetCustomFieldsResponseDataItemCustomFieldValueModelList']:
                return CustomFieldsGetCustomFieldsResponseDataItemCustomFieldValueModelList
        
            @staticmethod
            def customFieldGroupModel() -> typing.Type['CustomFieldsGetCustomFieldsResponseDataItemCustomFieldGroupModel']:
                return CustomFieldsGetCustomFieldsResponseDataItemCustomFieldGroupModel
            objectAccessModel = schemas.StrSchema
            access = schemas.StrSchema
            userGroupId = schemas.StrSchema
            candidateAccess = schemas.StrSchema
            userAccess = schemas.StrSchema
            managerAccess = schemas.StrSchema
            integrationTypeId = schemas.StrSchema
            helpText = schemas.StrSchema
            createUserId = schemas.StrSchema
            createts = schemas.IntSchema
            customFieldStyleModel = schemas.StrSchema
            readAccessTypeCode = schemas.StrSchema
            readUserGroupId = schemas.StrSchema
            mandatory = schemas.StrSchema
            masked = schemas.StrSchema
            __annotations__ = {
                "customFieldId": customFieldId,
                "customFieldName": customFieldName,
                "customFieldType": customFieldType,
                "objectType": objectType,
                "sequence": sequence,
                "cid": cid,
                "fieldType": fieldType,
                "defaultValue": defaultValue,
                "cfcode": cfcode,
                "cfgroupid": cfgroupid,
                "style": style,
                "opValues": opValues,
                "fieldFormula": fieldFormula,
                "customFieldValueModel": customFieldValueModel,
                "customFieldValueModelList": customFieldValueModelList,
                "customFieldGroupModel": customFieldGroupModel,
                "objectAccessModel": objectAccessModel,
                "access": access,
                "userGroupId": userGroupId,
                "candidateAccess": candidateAccess,
                "userAccess": userAccess,
                "managerAccess": managerAccess,
                "integrationTypeId": integrationTypeId,
                "helpText": helpText,
                "createUserId": createUserId,
                "createts": createts,
                "customFieldStyleModel": customFieldStyleModel,
                "readAccessTypeCode": readAccessTypeCode,
                "readUserGroupId": readUserGroupId,
                "mandatory": mandatory,
                "masked": masked,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customFieldId"]) -> MetaOapg.properties.customFieldId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customFieldName"]) -> MetaOapg.properties.customFieldName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customFieldType"]) -> MetaOapg.properties.customFieldType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["objectType"]) -> MetaOapg.properties.objectType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sequence"]) -> MetaOapg.properties.sequence: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cid"]) -> MetaOapg.properties.cid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fieldType"]) -> MetaOapg.properties.fieldType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["defaultValue"]) -> MetaOapg.properties.defaultValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cfcode"]) -> MetaOapg.properties.cfcode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cfgroupid"]) -> MetaOapg.properties.cfgroupid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["style"]) -> MetaOapg.properties.style: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["opValues"]) -> MetaOapg.properties.opValues: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fieldFormula"]) -> MetaOapg.properties.fieldFormula: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customFieldValueModel"]) -> MetaOapg.properties.customFieldValueModel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customFieldValueModelList"]) -> 'CustomFieldsGetCustomFieldsResponseDataItemCustomFieldValueModelList': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customFieldGroupModel"]) -> 'CustomFieldsGetCustomFieldsResponseDataItemCustomFieldGroupModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["objectAccessModel"]) -> MetaOapg.properties.objectAccessModel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["access"]) -> MetaOapg.properties.access: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userGroupId"]) -> MetaOapg.properties.userGroupId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["candidateAccess"]) -> MetaOapg.properties.candidateAccess: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userAccess"]) -> MetaOapg.properties.userAccess: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["managerAccess"]) -> MetaOapg.properties.managerAccess: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["integrationTypeId"]) -> MetaOapg.properties.integrationTypeId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["helpText"]) -> MetaOapg.properties.helpText: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createUserId"]) -> MetaOapg.properties.createUserId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createts"]) -> MetaOapg.properties.createts: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customFieldStyleModel"]) -> MetaOapg.properties.customFieldStyleModel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["readAccessTypeCode"]) -> MetaOapg.properties.readAccessTypeCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["readUserGroupId"]) -> MetaOapg.properties.readUserGroupId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mandatory"]) -> MetaOapg.properties.mandatory: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["masked"]) -> MetaOapg.properties.masked: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["customFieldId", "customFieldName", "customFieldType", "objectType", "sequence", "cid", "fieldType", "defaultValue", "cfcode", "cfgroupid", "style", "opValues", "fieldFormula", "customFieldValueModel", "customFieldValueModelList", "customFieldGroupModel", "objectAccessModel", "access", "userGroupId", "candidateAccess", "userAccess", "managerAccess", "integrationTypeId", "helpText", "createUserId", "createts", "customFieldStyleModel", "readAccessTypeCode", "readUserGroupId", "mandatory", "masked", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customFieldId"]) -> typing.Union[MetaOapg.properties.customFieldId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customFieldName"]) -> typing.Union[MetaOapg.properties.customFieldName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customFieldType"]) -> typing.Union[MetaOapg.properties.customFieldType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["objectType"]) -> typing.Union[MetaOapg.properties.objectType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sequence"]) -> typing.Union[MetaOapg.properties.sequence, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cid"]) -> typing.Union[MetaOapg.properties.cid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fieldType"]) -> typing.Union[MetaOapg.properties.fieldType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["defaultValue"]) -> typing.Union[MetaOapg.properties.defaultValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cfcode"]) -> typing.Union[MetaOapg.properties.cfcode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cfgroupid"]) -> typing.Union[MetaOapg.properties.cfgroupid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["style"]) -> typing.Union[MetaOapg.properties.style, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["opValues"]) -> typing.Union[MetaOapg.properties.opValues, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fieldFormula"]) -> typing.Union[MetaOapg.properties.fieldFormula, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customFieldValueModel"]) -> typing.Union[MetaOapg.properties.customFieldValueModel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customFieldValueModelList"]) -> typing.Union['CustomFieldsGetCustomFieldsResponseDataItemCustomFieldValueModelList', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customFieldGroupModel"]) -> typing.Union['CustomFieldsGetCustomFieldsResponseDataItemCustomFieldGroupModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["objectAccessModel"]) -> typing.Union[MetaOapg.properties.objectAccessModel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["access"]) -> typing.Union[MetaOapg.properties.access, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userGroupId"]) -> typing.Union[MetaOapg.properties.userGroupId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["candidateAccess"]) -> typing.Union[MetaOapg.properties.candidateAccess, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userAccess"]) -> typing.Union[MetaOapg.properties.userAccess, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["managerAccess"]) -> typing.Union[MetaOapg.properties.managerAccess, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["integrationTypeId"]) -> typing.Union[MetaOapg.properties.integrationTypeId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["helpText"]) -> typing.Union[MetaOapg.properties.helpText, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createUserId"]) -> typing.Union[MetaOapg.properties.createUserId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createts"]) -> typing.Union[MetaOapg.properties.createts, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customFieldStyleModel"]) -> typing.Union[MetaOapg.properties.customFieldStyleModel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["readAccessTypeCode"]) -> typing.Union[MetaOapg.properties.readAccessTypeCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["readUserGroupId"]) -> typing.Union[MetaOapg.properties.readUserGroupId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mandatory"]) -> typing.Union[MetaOapg.properties.mandatory, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["masked"]) -> typing.Union[MetaOapg.properties.masked, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["customFieldId", "customFieldName", "customFieldType", "objectType", "sequence", "cid", "fieldType", "defaultValue", "cfcode", "cfgroupid", "style", "opValues", "fieldFormula", "customFieldValueModel", "customFieldValueModelList", "customFieldGroupModel", "objectAccessModel", "access", "userGroupId", "candidateAccess", "userAccess", "managerAccess", "integrationTypeId", "helpText", "createUserId", "createts", "customFieldStyleModel", "readAccessTypeCode", "readUserGroupId", "mandatory", "masked", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        customFieldId: typing.Union[MetaOapg.properties.customFieldId, str, schemas.Unset] = schemas.unset,
        customFieldName: typing.Union[MetaOapg.properties.customFieldName, str, schemas.Unset] = schemas.unset,
        customFieldType: typing.Union[MetaOapg.properties.customFieldType, str, schemas.Unset] = schemas.unset,
        objectType: typing.Union[MetaOapg.properties.objectType, str, schemas.Unset] = schemas.unset,
        sequence: typing.Union[MetaOapg.properties.sequence, str, schemas.Unset] = schemas.unset,
        cid: typing.Union[MetaOapg.properties.cid, str, schemas.Unset] = schemas.unset,
        fieldType: typing.Union[MetaOapg.properties.fieldType, str, schemas.Unset] = schemas.unset,
        defaultValue: typing.Union[MetaOapg.properties.defaultValue, str, schemas.Unset] = schemas.unset,
        cfcode: typing.Union[MetaOapg.properties.cfcode, str, schemas.Unset] = schemas.unset,
        cfgroupid: typing.Union[MetaOapg.properties.cfgroupid, str, schemas.Unset] = schemas.unset,
        style: typing.Union[MetaOapg.properties.style, str, schemas.Unset] = schemas.unset,
        opValues: typing.Union[MetaOapg.properties.opValues, str, schemas.Unset] = schemas.unset,
        fieldFormula: typing.Union[MetaOapg.properties.fieldFormula, str, schemas.Unset] = schemas.unset,
        customFieldValueModel: typing.Union[MetaOapg.properties.customFieldValueModel, str, schemas.Unset] = schemas.unset,
        customFieldValueModelList: typing.Union['CustomFieldsGetCustomFieldsResponseDataItemCustomFieldValueModelList', schemas.Unset] = schemas.unset,
        customFieldGroupModel: typing.Union['CustomFieldsGetCustomFieldsResponseDataItemCustomFieldGroupModel', schemas.Unset] = schemas.unset,
        objectAccessModel: typing.Union[MetaOapg.properties.objectAccessModel, str, schemas.Unset] = schemas.unset,
        access: typing.Union[MetaOapg.properties.access, str, schemas.Unset] = schemas.unset,
        userGroupId: typing.Union[MetaOapg.properties.userGroupId, str, schemas.Unset] = schemas.unset,
        candidateAccess: typing.Union[MetaOapg.properties.candidateAccess, str, schemas.Unset] = schemas.unset,
        userAccess: typing.Union[MetaOapg.properties.userAccess, str, schemas.Unset] = schemas.unset,
        managerAccess: typing.Union[MetaOapg.properties.managerAccess, str, schemas.Unset] = schemas.unset,
        integrationTypeId: typing.Union[MetaOapg.properties.integrationTypeId, str, schemas.Unset] = schemas.unset,
        helpText: typing.Union[MetaOapg.properties.helpText, str, schemas.Unset] = schemas.unset,
        createUserId: typing.Union[MetaOapg.properties.createUserId, str, schemas.Unset] = schemas.unset,
        createts: typing.Union[MetaOapg.properties.createts, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        customFieldStyleModel: typing.Union[MetaOapg.properties.customFieldStyleModel, str, schemas.Unset] = schemas.unset,
        readAccessTypeCode: typing.Union[MetaOapg.properties.readAccessTypeCode, str, schemas.Unset] = schemas.unset,
        readUserGroupId: typing.Union[MetaOapg.properties.readUserGroupId, str, schemas.Unset] = schemas.unset,
        mandatory: typing.Union[MetaOapg.properties.mandatory, str, schemas.Unset] = schemas.unset,
        masked: typing.Union[MetaOapg.properties.masked, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CustomFieldsGetCustomFieldsResponseDataItem':
        return super().__new__(
            cls,
            *args,
            customFieldId=customFieldId,
            customFieldName=customFieldName,
            customFieldType=customFieldType,
            objectType=objectType,
            sequence=sequence,
            cid=cid,
            fieldType=fieldType,
            defaultValue=defaultValue,
            cfcode=cfcode,
            cfgroupid=cfgroupid,
            style=style,
            opValues=opValues,
            fieldFormula=fieldFormula,
            customFieldValueModel=customFieldValueModel,
            customFieldValueModelList=customFieldValueModelList,
            customFieldGroupModel=customFieldGroupModel,
            objectAccessModel=objectAccessModel,
            access=access,
            userGroupId=userGroupId,
            candidateAccess=candidateAccess,
            userAccess=userAccess,
            managerAccess=managerAccess,
            integrationTypeId=integrationTypeId,
            helpText=helpText,
            createUserId=createUserId,
            createts=createts,
            customFieldStyleModel=customFieldStyleModel,
            readAccessTypeCode=readAccessTypeCode,
            readUserGroupId=readUserGroupId,
            mandatory=mandatory,
            masked=masked,
            _configuration=_configuration,
            **kwargs,
        )

from clay_hr_python_sdk.model.custom_fields_get_custom_fields_response_data_item_custom_field_group_model import CustomFieldsGetCustomFieldsResponseDataItemCustomFieldGroupModel
from clay_hr_python_sdk.model.custom_fields_get_custom_fields_response_data_item_custom_field_value_model_list import CustomFieldsGetCustomFieldsResponseDataItemCustomFieldValueModelList
