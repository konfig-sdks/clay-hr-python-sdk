# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from clay_hr_python_sdk import schemas  # noqa: F401


class DynamicFormAssignmentModel(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            allowGrader = schemas.BoolSchema
            assessmentScore = schemas.Float64Schema
        
            @staticmethod
            def assignCandidateModel() -> typing.Type['CandidateModel']:
                return CandidateModel
        
            @staticmethod
            def assignUserModel() -> typing.Type['UserModel']:
                return UserModel
        
            @staticmethod
            def assignUserViewModel() -> typing.Type['UserViewModel']:
                return UserViewModel
            assignmentId = schemas.Int32Schema
            cid = schemas.Int32Schema
        
            @staticmethod
            def createUserModel() -> typing.Type['UserModel']:
                return UserModel
        
            @staticmethod
            def createUserViewModel() -> typing.Type['UserViewModel']:
                return UserViewModel
        
            @staticmethod
            def createts() -> typing.Type['Timestamp']:
                return Timestamp
            dueDate = schemas.DateSchema
        
            @staticmethod
            def dynaFormModel() -> typing.Type['DynaFormSlimModel']:
                return DynaFormSlimModel
            
            
            class dynaFormSectionAssignmentModel(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['DynaFormSectionAssignmentModel']:
                        return DynaFormSectionAssignmentModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['DynaFormSectionAssignmentModel'], typing.List['DynaFormSectionAssignmentModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'dynaFormSectionAssignmentModel':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'DynaFormSectionAssignmentModel':
                    return super().__getitem__(i)
            formSummary = schemas.StrSchema
        
            @staticmethod
            def graderUserModel() -> typing.Type['UserModel']:
                return UserModel
        
            @staticmethod
            def lastupdatets() -> typing.Type['Timestamp']:
                return Timestamp
            optedOutForEmail = schemas.BoolSchema
            status = schemas.StrSchema
        
            @staticmethod
            def testEndts() -> typing.Type['Timestamp']:
                return Timestamp
            testResult = schemas.StrSchema
        
            @staticmethod
            def testStartts() -> typing.Type['Timestamp']:
                return Timestamp
            testTimeStatus = schemas.StrSchema
            __annotations__ = {
                "allowGrader": allowGrader,
                "assessmentScore": assessmentScore,
                "assignCandidateModel": assignCandidateModel,
                "assignUserModel": assignUserModel,
                "assignUserViewModel": assignUserViewModel,
                "assignmentId": assignmentId,
                "cid": cid,
                "createUserModel": createUserModel,
                "createUserViewModel": createUserViewModel,
                "createts": createts,
                "dueDate": dueDate,
                "dynaFormModel": dynaFormModel,
                "dynaFormSectionAssignmentModel": dynaFormSectionAssignmentModel,
                "formSummary": formSummary,
                "graderUserModel": graderUserModel,
                "lastupdatets": lastupdatets,
                "optedOutForEmail": optedOutForEmail,
                "status": status,
                "testEndts": testEndts,
                "testResult": testResult,
                "testStartts": testStartts,
                "testTimeStatus": testTimeStatus,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["allowGrader"]) -> MetaOapg.properties.allowGrader: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["assessmentScore"]) -> MetaOapg.properties.assessmentScore: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["assignCandidateModel"]) -> 'CandidateModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["assignUserModel"]) -> 'UserModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["assignUserViewModel"]) -> 'UserViewModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["assignmentId"]) -> MetaOapg.properties.assignmentId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cid"]) -> MetaOapg.properties.cid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createUserModel"]) -> 'UserModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createUserViewModel"]) -> 'UserViewModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createts"]) -> 'Timestamp': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dueDate"]) -> MetaOapg.properties.dueDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dynaFormModel"]) -> 'DynaFormSlimModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dynaFormSectionAssignmentModel"]) -> MetaOapg.properties.dynaFormSectionAssignmentModel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["formSummary"]) -> MetaOapg.properties.formSummary: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["graderUserModel"]) -> 'UserModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastupdatets"]) -> 'Timestamp': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["optedOutForEmail"]) -> MetaOapg.properties.optedOutForEmail: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["testEndts"]) -> 'Timestamp': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["testResult"]) -> MetaOapg.properties.testResult: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["testStartts"]) -> 'Timestamp': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["testTimeStatus"]) -> MetaOapg.properties.testTimeStatus: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["allowGrader", "assessmentScore", "assignCandidateModel", "assignUserModel", "assignUserViewModel", "assignmentId", "cid", "createUserModel", "createUserViewModel", "createts", "dueDate", "dynaFormModel", "dynaFormSectionAssignmentModel", "formSummary", "graderUserModel", "lastupdatets", "optedOutForEmail", "status", "testEndts", "testResult", "testStartts", "testTimeStatus", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["allowGrader"]) -> typing.Union[MetaOapg.properties.allowGrader, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["assessmentScore"]) -> typing.Union[MetaOapg.properties.assessmentScore, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["assignCandidateModel"]) -> typing.Union['CandidateModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["assignUserModel"]) -> typing.Union['UserModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["assignUserViewModel"]) -> typing.Union['UserViewModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["assignmentId"]) -> typing.Union[MetaOapg.properties.assignmentId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cid"]) -> typing.Union[MetaOapg.properties.cid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createUserModel"]) -> typing.Union['UserModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createUserViewModel"]) -> typing.Union['UserViewModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createts"]) -> typing.Union['Timestamp', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dueDate"]) -> typing.Union[MetaOapg.properties.dueDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dynaFormModel"]) -> typing.Union['DynaFormSlimModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dynaFormSectionAssignmentModel"]) -> typing.Union[MetaOapg.properties.dynaFormSectionAssignmentModel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["formSummary"]) -> typing.Union[MetaOapg.properties.formSummary, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["graderUserModel"]) -> typing.Union['UserModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastupdatets"]) -> typing.Union['Timestamp', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["optedOutForEmail"]) -> typing.Union[MetaOapg.properties.optedOutForEmail, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union[MetaOapg.properties.status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["testEndts"]) -> typing.Union['Timestamp', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["testResult"]) -> typing.Union[MetaOapg.properties.testResult, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["testStartts"]) -> typing.Union['Timestamp', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["testTimeStatus"]) -> typing.Union[MetaOapg.properties.testTimeStatus, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["allowGrader", "assessmentScore", "assignCandidateModel", "assignUserModel", "assignUserViewModel", "assignmentId", "cid", "createUserModel", "createUserViewModel", "createts", "dueDate", "dynaFormModel", "dynaFormSectionAssignmentModel", "formSummary", "graderUserModel", "lastupdatets", "optedOutForEmail", "status", "testEndts", "testResult", "testStartts", "testTimeStatus", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        allowGrader: typing.Union[MetaOapg.properties.allowGrader, bool, schemas.Unset] = schemas.unset,
        assessmentScore: typing.Union[MetaOapg.properties.assessmentScore, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        assignCandidateModel: typing.Union['CandidateModel', schemas.Unset] = schemas.unset,
        assignUserModel: typing.Union['UserModel', schemas.Unset] = schemas.unset,
        assignUserViewModel: typing.Union['UserViewModel', schemas.Unset] = schemas.unset,
        assignmentId: typing.Union[MetaOapg.properties.assignmentId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        cid: typing.Union[MetaOapg.properties.cid, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        createUserModel: typing.Union['UserModel', schemas.Unset] = schemas.unset,
        createUserViewModel: typing.Union['UserViewModel', schemas.Unset] = schemas.unset,
        createts: typing.Union['Timestamp', schemas.Unset] = schemas.unset,
        dueDate: typing.Union[MetaOapg.properties.dueDate, str, date, schemas.Unset] = schemas.unset,
        dynaFormModel: typing.Union['DynaFormSlimModel', schemas.Unset] = schemas.unset,
        dynaFormSectionAssignmentModel: typing.Union[MetaOapg.properties.dynaFormSectionAssignmentModel, list, tuple, schemas.Unset] = schemas.unset,
        formSummary: typing.Union[MetaOapg.properties.formSummary, str, schemas.Unset] = schemas.unset,
        graderUserModel: typing.Union['UserModel', schemas.Unset] = schemas.unset,
        lastupdatets: typing.Union['Timestamp', schemas.Unset] = schemas.unset,
        optedOutForEmail: typing.Union[MetaOapg.properties.optedOutForEmail, bool, schemas.Unset] = schemas.unset,
        status: typing.Union[MetaOapg.properties.status, str, schemas.Unset] = schemas.unset,
        testEndts: typing.Union['Timestamp', schemas.Unset] = schemas.unset,
        testResult: typing.Union[MetaOapg.properties.testResult, str, schemas.Unset] = schemas.unset,
        testStartts: typing.Union['Timestamp', schemas.Unset] = schemas.unset,
        testTimeStatus: typing.Union[MetaOapg.properties.testTimeStatus, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'DynamicFormAssignmentModel':
        return super().__new__(
            cls,
            *args,
            allowGrader=allowGrader,
            assessmentScore=assessmentScore,
            assignCandidateModel=assignCandidateModel,
            assignUserModel=assignUserModel,
            assignUserViewModel=assignUserViewModel,
            assignmentId=assignmentId,
            cid=cid,
            createUserModel=createUserModel,
            createUserViewModel=createUserViewModel,
            createts=createts,
            dueDate=dueDate,
            dynaFormModel=dynaFormModel,
            dynaFormSectionAssignmentModel=dynaFormSectionAssignmentModel,
            formSummary=formSummary,
            graderUserModel=graderUserModel,
            lastupdatets=lastupdatets,
            optedOutForEmail=optedOutForEmail,
            status=status,
            testEndts=testEndts,
            testResult=testResult,
            testStartts=testStartts,
            testTimeStatus=testTimeStatus,
            _configuration=_configuration,
            **kwargs,
        )

from clay_hr_python_sdk.model.candidate_model import CandidateModel
from clay_hr_python_sdk.model.dyna_form_section_assignment_model import DynaFormSectionAssignmentModel
from clay_hr_python_sdk.model.dyna_form_slim_model import DynaFormSlimModel
from clay_hr_python_sdk.model.timestamp import Timestamp
from clay_hr_python_sdk.model.user_model import UserModel
from clay_hr_python_sdk.model.user_view_model import UserViewModel
