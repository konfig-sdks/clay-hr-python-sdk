# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from clay_hr_python_sdk import schemas  # noqa: F401


class DynaFormItemOptionModel(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            cid = schemas.Int32Schema
        
            @staticmethod
            def createts() -> typing.Type['Timestamp']:
                return Timestamp
            dynaFormItemId = schemas.Int32Schema
            optionId = schemas.Int32Schema
            optionValue = schemas.StrSchema
            __annotations__ = {
                "cid": cid,
                "createts": createts,
                "dynaFormItemId": dynaFormItemId,
                "optionId": optionId,
                "optionValue": optionValue,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cid"]) -> MetaOapg.properties.cid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createts"]) -> 'Timestamp': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dynaFormItemId"]) -> MetaOapg.properties.dynaFormItemId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["optionId"]) -> MetaOapg.properties.optionId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["optionValue"]) -> MetaOapg.properties.optionValue: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["cid", "createts", "dynaFormItemId", "optionId", "optionValue", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cid"]) -> typing.Union[MetaOapg.properties.cid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createts"]) -> typing.Union['Timestamp', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dynaFormItemId"]) -> typing.Union[MetaOapg.properties.dynaFormItemId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["optionId"]) -> typing.Union[MetaOapg.properties.optionId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["optionValue"]) -> typing.Union[MetaOapg.properties.optionValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["cid", "createts", "dynaFormItemId", "optionId", "optionValue", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        cid: typing.Union[MetaOapg.properties.cid, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        createts: typing.Union['Timestamp', schemas.Unset] = schemas.unset,
        dynaFormItemId: typing.Union[MetaOapg.properties.dynaFormItemId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        optionId: typing.Union[MetaOapg.properties.optionId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        optionValue: typing.Union[MetaOapg.properties.optionValue, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'DynaFormItemOptionModel':
        return super().__new__(
            cls,
            *args,
            cid=cid,
            createts=createts,
            dynaFormItemId=dynaFormItemId,
            optionId=optionId,
            optionValue=optionValue,
            _configuration=_configuration,
            **kwargs,
        )

from clay_hr_python_sdk.model.timestamp import Timestamp
