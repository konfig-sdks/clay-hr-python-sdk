# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from clay_hr_python_sdk import schemas  # noqa: F401


class UserModel(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "userId",
        }
        
        class properties:
            userId = schemas.Int32Schema
            
            
            class addressModelList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['AddressModel']:
                        return AddressModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['AddressModel'], typing.List['AddressModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'addressModelList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'AddressModel':
                    return super().__getitem__(i)
            adpAssociateOID = schemas.StrSchema
            allocation = schemas.Float64Schema
            appleUserIdentifier = schemas.StrSchema
            assignments = schemas.StrSchema
            
            
            class awardModelList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['AwardModel']:
                        return AwardModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['AwardModel'], typing.List['AwardModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'awardModelList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'AwardModel':
                    return super().__getitem__(i)
        
            @staticmethod
            def bankAccountModel() -> typing.Type['BankAccountModel']:
                return BankAccountModel
            calWeekPref = schemas.StrSchema
            calendarId = schemas.Int32Schema
        
            @staticmethod
            def calendarModel() -> typing.Type['HRCalendarModel']:
                return HRCalendarModel
            candidateId = schemas.Int32Schema
            careerPathwayId = schemas.Int32Schema
            cellPhone = schemas.StrSchema
            cid = schemas.Int32Schema
            countryId = schemas.Int32Schema
        
            @staticmethod
            def createts() -> typing.Type['Timestamp']:
                return Timestamp
            
            
            class customFieldValueModelList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['CustomFieldValueModel']:
                        return CustomFieldValueModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['CustomFieldValueModel'], typing.List['CustomFieldValueModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'customFieldValueModelList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'CustomFieldValueModel':
                    return super().__getitem__(i)
            
            
            class customTableModelList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['CustomTableModel']:
                        return CustomTableModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['CustomTableModel'], typing.List['CustomTableModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'customTableModelList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'CustomTableModel':
                    return super().__getitem__(i)
        
            @staticmethod
            def departmentModel() -> typing.Type['DepartmentModel']:
                return DepartmentModel
            departmentName = schemas.StrSchema
            displayFullName = schemas.StrSchema
            
            
            class educationModelList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['EducationModel']:
                        return EducationModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['EducationModel'], typing.List['EducationModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'educationModelList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'EducationModel':
                    return super().__getitem__(i)
            email = schemas.StrSchema
            empId = schemas.StrSchema
            
            
            class employmentModelList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['EmploymentModel']:
                        return EmploymentModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['EmploymentModel'], typing.List['EmploymentModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'employmentModelList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'EmploymentModel':
                    return super().__getitem__(i)
            familySuffix = schemas.StrSchema
            
            
            class financialModelList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['FinancialModel']:
                        return FinancialModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['FinancialModel'], typing.List['FinancialModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'financialModelList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'FinancialModel':
                    return super().__getitem__(i)
            firstName = schemas.StrSchema
            gender = schemas.StrSchema
            guid = schemas.StrSchema
            hasAccess = schemas.BoolSchema
            hrPortal = schemas.StrSchema
            im = schemas.StrSchema
            imageName = schemas.StrSchema
            isView = schemas.BoolSchema
            jobGrade = schemas.StrSchema
            languagePreference = schemas.StrSchema
            lastName = schemas.StrSchema
            lastUpdateUsername = schemas.StrSchema
            lastupdatets = schemas.DateSchema
            lastupdateuserid = schemas.Int32Schema
            
            
            class licenseModelList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['CertificationModel']:
                        return CertificationModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['CertificationModel'], typing.List['CertificationModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'licenseModelList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'CertificationModel':
                    return super().__getitem__(i)
        
            @staticmethod
            def locationModel() -> typing.Type['LocationModel']:
                return LocationModel
            mfaPreference = schemas.BoolSchema
            mfaSecretKey = schemas.StrSchema
            middleName = schemas.StrSchema
            namePronunciation = schemas.StrSchema
            notifications = schemas.BoolSchema
            paId = schemas.Int32Schema
            phone = schemas.StrSchema
            position = schemas.StrSchema
            prefixSalutation = schemas.StrSchema
            profileId = schemas.Int32Schema
            profileName = schemas.StrSchema
        
            @staticmethod
            def projectModel() -> typing.Type['ProjectModel']:
                return ProjectModel
            
            
            class projectModelList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['ProjectModel']:
                        return ProjectModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['ProjectModel'], typing.List['ProjectModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'projectModelList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'ProjectModel':
                    return super().__getitem__(i)
            ptoannual = schemas.Float32Schema
            ptobalance = schemas.Float32Schema
            qboPref = schemas.Int32Schema
            relativeDate = schemas.StrSchema
        
            @staticmethod
            def reportsToListMap() -> typing.Type['UserModelReportsToListMap']:
                return UserModelReportsToListMap
            secondLastName = schemas.StrSchema
            shortName = schemas.StrSchema
            
            
            class skillUserModelList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['SkillUserModel']:
                        return SkillUserModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['SkillUserModel'], typing.List['SkillUserModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'skillUserModelList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'SkillUserModel':
                    return super().__getitem__(i)
            star = schemas.Int32Schema
            status = schemas.StrSchema
            stripeId = schemas.StrSchema
            
            
            class supervisorModelList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['UserThinModel']:
                        return UserThinModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['UserThinModel'], typing.List['UserThinModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'supervisorModelList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'UserThinModel':
                    return super().__getitem__(i)
            thumbnail = schemas.StrSchema
            timecardPeriodPref = schemas.StrSchema
            timezone = schemas.StrSchema
            tosVersion = schemas.StrSchema
            userCountry = schemas.StrSchema
            userDateFormat = schemas.StrSchema
            userDateOfBirth = schemas.DateSchema
            userDisplayName = schemas.StrSchema
            userEndDate = schemas.DateSchema
            userNameFormat = schemas.StrSchema
        
            @staticmethod
            def userProfileModel() -> typing.Type['UserProfileModel']:
                return UserProfileModel
            userStartDate = schemas.DateSchema
            
            
            class userTrainingModelList(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['UserTrainingModel']:
                        return UserTrainingModel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['UserTrainingModel'], typing.List['UserTrainingModel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'userTrainingModelList':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'UserTrainingModel':
                    return super().__getitem__(i)
            userType = schemas.StrSchema
            view = schemas.BoolSchema
            workerType = schemas.StrSchema
        
            @staticmethod
            def workerTypeModel() -> typing.Type['WorkerTypeModel']:
                return WorkerTypeModel
            workingDays = schemas.StrSchema
            userName = schemas.StrSchema
            __annotations__ = {
                "userId": userId,
                "addressModelList": addressModelList,
                "adpAssociateOID": adpAssociateOID,
                "allocation": allocation,
                "appleUserIdentifier": appleUserIdentifier,
                "assignments": assignments,
                "awardModelList": awardModelList,
                "bankAccountModel": bankAccountModel,
                "calWeekPref": calWeekPref,
                "calendarId": calendarId,
                "calendarModel": calendarModel,
                "candidateId": candidateId,
                "careerPathwayId": careerPathwayId,
                "cellPhone": cellPhone,
                "cid": cid,
                "countryId": countryId,
                "createts": createts,
                "customFieldValueModelList": customFieldValueModelList,
                "customTableModelList": customTableModelList,
                "departmentModel": departmentModel,
                "departmentName": departmentName,
                "displayFullName": displayFullName,
                "educationModelList": educationModelList,
                "email": email,
                "empId": empId,
                "employmentModelList": employmentModelList,
                "familySuffix": familySuffix,
                "financialModelList": financialModelList,
                "firstName": firstName,
                "gender": gender,
                "guid": guid,
                "hasAccess": hasAccess,
                "hrPortal": hrPortal,
                "im": im,
                "imageName": imageName,
                "isView": isView,
                "jobGrade": jobGrade,
                "languagePreference": languagePreference,
                "lastName": lastName,
                "lastUpdateUsername": lastUpdateUsername,
                "lastupdatets": lastupdatets,
                "lastupdateuserid": lastupdateuserid,
                "licenseModelList": licenseModelList,
                "locationModel": locationModel,
                "mfaPreference": mfaPreference,
                "mfaSecretKey": mfaSecretKey,
                "middleName": middleName,
                "namePronunciation": namePronunciation,
                "notifications": notifications,
                "paId": paId,
                "phone": phone,
                "position": position,
                "prefixSalutation": prefixSalutation,
                "profileId": profileId,
                "profileName": profileName,
                "projectModel": projectModel,
                "projectModelList": projectModelList,
                "ptoannual": ptoannual,
                "ptobalance": ptobalance,
                "qboPref": qboPref,
                "relativeDate": relativeDate,
                "reportsToListMap": reportsToListMap,
                "secondLastName": secondLastName,
                "shortName": shortName,
                "skillUserModelList": skillUserModelList,
                "star": star,
                "status": status,
                "stripeId": stripeId,
                "supervisorModelList": supervisorModelList,
                "thumbnail": thumbnail,
                "timecardPeriodPref": timecardPeriodPref,
                "timezone": timezone,
                "tosVersion": tosVersion,
                "userCountry": userCountry,
                "userDateFormat": userDateFormat,
                "userDateOfBirth": userDateOfBirth,
                "userDisplayName": userDisplayName,
                "userEndDate": userEndDate,
                "userNameFormat": userNameFormat,
                "userProfileModel": userProfileModel,
                "userStartDate": userStartDate,
                "userTrainingModelList": userTrainingModelList,
                "userType": userType,
                "view": view,
                "workerType": workerType,
                "workerTypeModel": workerTypeModel,
                "workingDays": workingDays,
                "userName": userName,
            }
    
    userId: MetaOapg.properties.userId
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userId"]) -> MetaOapg.properties.userId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressModelList"]) -> MetaOapg.properties.addressModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["adpAssociateOID"]) -> MetaOapg.properties.adpAssociateOID: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["allocation"]) -> MetaOapg.properties.allocation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["appleUserIdentifier"]) -> MetaOapg.properties.appleUserIdentifier: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["assignments"]) -> MetaOapg.properties.assignments: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["awardModelList"]) -> MetaOapg.properties.awardModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["bankAccountModel"]) -> 'BankAccountModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["calWeekPref"]) -> MetaOapg.properties.calWeekPref: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["calendarId"]) -> MetaOapg.properties.calendarId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["calendarModel"]) -> 'HRCalendarModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["candidateId"]) -> MetaOapg.properties.candidateId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["careerPathwayId"]) -> MetaOapg.properties.careerPathwayId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cellPhone"]) -> MetaOapg.properties.cellPhone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cid"]) -> MetaOapg.properties.cid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["countryId"]) -> MetaOapg.properties.countryId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createts"]) -> 'Timestamp': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customFieldValueModelList"]) -> MetaOapg.properties.customFieldValueModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customTableModelList"]) -> MetaOapg.properties.customTableModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["departmentModel"]) -> 'DepartmentModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["departmentName"]) -> MetaOapg.properties.departmentName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["displayFullName"]) -> MetaOapg.properties.displayFullName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["educationModelList"]) -> MetaOapg.properties.educationModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["email"]) -> MetaOapg.properties.email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["empId"]) -> MetaOapg.properties.empId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employmentModelList"]) -> MetaOapg.properties.employmentModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["familySuffix"]) -> MetaOapg.properties.familySuffix: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["financialModelList"]) -> MetaOapg.properties.financialModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["firstName"]) -> MetaOapg.properties.firstName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gender"]) -> MetaOapg.properties.gender: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["guid"]) -> MetaOapg.properties.guid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hasAccess"]) -> MetaOapg.properties.hasAccess: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hrPortal"]) -> MetaOapg.properties.hrPortal: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["im"]) -> MetaOapg.properties.im: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["imageName"]) -> MetaOapg.properties.imageName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isView"]) -> MetaOapg.properties.isView: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["jobGrade"]) -> MetaOapg.properties.jobGrade: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["languagePreference"]) -> MetaOapg.properties.languagePreference: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastName"]) -> MetaOapg.properties.lastName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastUpdateUsername"]) -> MetaOapg.properties.lastUpdateUsername: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastupdatets"]) -> MetaOapg.properties.lastupdatets: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastupdateuserid"]) -> MetaOapg.properties.lastupdateuserid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["licenseModelList"]) -> MetaOapg.properties.licenseModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["locationModel"]) -> 'LocationModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mfaPreference"]) -> MetaOapg.properties.mfaPreference: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mfaSecretKey"]) -> MetaOapg.properties.mfaSecretKey: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["middleName"]) -> MetaOapg.properties.middleName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["namePronunciation"]) -> MetaOapg.properties.namePronunciation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["notifications"]) -> MetaOapg.properties.notifications: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["paId"]) -> MetaOapg.properties.paId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["phone"]) -> MetaOapg.properties.phone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["position"]) -> MetaOapg.properties.position: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prefixSalutation"]) -> MetaOapg.properties.prefixSalutation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profileId"]) -> MetaOapg.properties.profileId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profileName"]) -> MetaOapg.properties.profileName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["projectModel"]) -> 'ProjectModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["projectModelList"]) -> MetaOapg.properties.projectModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ptoannual"]) -> MetaOapg.properties.ptoannual: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ptobalance"]) -> MetaOapg.properties.ptobalance: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["qboPref"]) -> MetaOapg.properties.qboPref: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["relativeDate"]) -> MetaOapg.properties.relativeDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reportsToListMap"]) -> 'UserModelReportsToListMap': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["secondLastName"]) -> MetaOapg.properties.secondLastName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["shortName"]) -> MetaOapg.properties.shortName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["skillUserModelList"]) -> MetaOapg.properties.skillUserModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["star"]) -> MetaOapg.properties.star: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stripeId"]) -> MetaOapg.properties.stripeId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supervisorModelList"]) -> MetaOapg.properties.supervisorModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumbnail"]) -> MetaOapg.properties.thumbnail: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timecardPeriodPref"]) -> MetaOapg.properties.timecardPeriodPref: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timezone"]) -> MetaOapg.properties.timezone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tosVersion"]) -> MetaOapg.properties.tosVersion: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userCountry"]) -> MetaOapg.properties.userCountry: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userDateFormat"]) -> MetaOapg.properties.userDateFormat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userDateOfBirth"]) -> MetaOapg.properties.userDateOfBirth: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userDisplayName"]) -> MetaOapg.properties.userDisplayName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userEndDate"]) -> MetaOapg.properties.userEndDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userNameFormat"]) -> MetaOapg.properties.userNameFormat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userProfileModel"]) -> 'UserProfileModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userStartDate"]) -> MetaOapg.properties.userStartDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userTrainingModelList"]) -> MetaOapg.properties.userTrainingModelList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userType"]) -> MetaOapg.properties.userType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["view"]) -> MetaOapg.properties.view: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["workerType"]) -> MetaOapg.properties.workerType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["workerTypeModel"]) -> 'WorkerTypeModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["workingDays"]) -> MetaOapg.properties.workingDays: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userName"]) -> MetaOapg.properties.userName: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["userId", "addressModelList", "adpAssociateOID", "allocation", "appleUserIdentifier", "assignments", "awardModelList", "bankAccountModel", "calWeekPref", "calendarId", "calendarModel", "candidateId", "careerPathwayId", "cellPhone", "cid", "countryId", "createts", "customFieldValueModelList", "customTableModelList", "departmentModel", "departmentName", "displayFullName", "educationModelList", "email", "empId", "employmentModelList", "familySuffix", "financialModelList", "firstName", "gender", "guid", "hasAccess", "hrPortal", "im", "imageName", "isView", "jobGrade", "languagePreference", "lastName", "lastUpdateUsername", "lastupdatets", "lastupdateuserid", "licenseModelList", "locationModel", "mfaPreference", "mfaSecretKey", "middleName", "namePronunciation", "notifications", "paId", "phone", "position", "prefixSalutation", "profileId", "profileName", "projectModel", "projectModelList", "ptoannual", "ptobalance", "qboPref", "relativeDate", "reportsToListMap", "secondLastName", "shortName", "skillUserModelList", "star", "status", "stripeId", "supervisorModelList", "thumbnail", "timecardPeriodPref", "timezone", "tosVersion", "userCountry", "userDateFormat", "userDateOfBirth", "userDisplayName", "userEndDate", "userNameFormat", "userProfileModel", "userStartDate", "userTrainingModelList", "userType", "view", "workerType", "workerTypeModel", "workingDays", "userName", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userId"]) -> MetaOapg.properties.userId: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressModelList"]) -> typing.Union[MetaOapg.properties.addressModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["adpAssociateOID"]) -> typing.Union[MetaOapg.properties.adpAssociateOID, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["allocation"]) -> typing.Union[MetaOapg.properties.allocation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["appleUserIdentifier"]) -> typing.Union[MetaOapg.properties.appleUserIdentifier, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["assignments"]) -> typing.Union[MetaOapg.properties.assignments, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["awardModelList"]) -> typing.Union[MetaOapg.properties.awardModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["bankAccountModel"]) -> typing.Union['BankAccountModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["calWeekPref"]) -> typing.Union[MetaOapg.properties.calWeekPref, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["calendarId"]) -> typing.Union[MetaOapg.properties.calendarId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["calendarModel"]) -> typing.Union['HRCalendarModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["candidateId"]) -> typing.Union[MetaOapg.properties.candidateId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["careerPathwayId"]) -> typing.Union[MetaOapg.properties.careerPathwayId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cellPhone"]) -> typing.Union[MetaOapg.properties.cellPhone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cid"]) -> typing.Union[MetaOapg.properties.cid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["countryId"]) -> typing.Union[MetaOapg.properties.countryId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createts"]) -> typing.Union['Timestamp', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customFieldValueModelList"]) -> typing.Union[MetaOapg.properties.customFieldValueModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customTableModelList"]) -> typing.Union[MetaOapg.properties.customTableModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["departmentModel"]) -> typing.Union['DepartmentModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["departmentName"]) -> typing.Union[MetaOapg.properties.departmentName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["displayFullName"]) -> typing.Union[MetaOapg.properties.displayFullName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["educationModelList"]) -> typing.Union[MetaOapg.properties.educationModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["email"]) -> typing.Union[MetaOapg.properties.email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["empId"]) -> typing.Union[MetaOapg.properties.empId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employmentModelList"]) -> typing.Union[MetaOapg.properties.employmentModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["familySuffix"]) -> typing.Union[MetaOapg.properties.familySuffix, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["financialModelList"]) -> typing.Union[MetaOapg.properties.financialModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["firstName"]) -> typing.Union[MetaOapg.properties.firstName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gender"]) -> typing.Union[MetaOapg.properties.gender, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["guid"]) -> typing.Union[MetaOapg.properties.guid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hasAccess"]) -> typing.Union[MetaOapg.properties.hasAccess, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hrPortal"]) -> typing.Union[MetaOapg.properties.hrPortal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["im"]) -> typing.Union[MetaOapg.properties.im, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["imageName"]) -> typing.Union[MetaOapg.properties.imageName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isView"]) -> typing.Union[MetaOapg.properties.isView, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["jobGrade"]) -> typing.Union[MetaOapg.properties.jobGrade, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["languagePreference"]) -> typing.Union[MetaOapg.properties.languagePreference, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastName"]) -> typing.Union[MetaOapg.properties.lastName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastUpdateUsername"]) -> typing.Union[MetaOapg.properties.lastUpdateUsername, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastupdatets"]) -> typing.Union[MetaOapg.properties.lastupdatets, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastupdateuserid"]) -> typing.Union[MetaOapg.properties.lastupdateuserid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["licenseModelList"]) -> typing.Union[MetaOapg.properties.licenseModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["locationModel"]) -> typing.Union['LocationModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mfaPreference"]) -> typing.Union[MetaOapg.properties.mfaPreference, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mfaSecretKey"]) -> typing.Union[MetaOapg.properties.mfaSecretKey, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["middleName"]) -> typing.Union[MetaOapg.properties.middleName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["namePronunciation"]) -> typing.Union[MetaOapg.properties.namePronunciation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["notifications"]) -> typing.Union[MetaOapg.properties.notifications, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["paId"]) -> typing.Union[MetaOapg.properties.paId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["phone"]) -> typing.Union[MetaOapg.properties.phone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["position"]) -> typing.Union[MetaOapg.properties.position, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prefixSalutation"]) -> typing.Union[MetaOapg.properties.prefixSalutation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profileId"]) -> typing.Union[MetaOapg.properties.profileId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profileName"]) -> typing.Union[MetaOapg.properties.profileName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["projectModel"]) -> typing.Union['ProjectModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["projectModelList"]) -> typing.Union[MetaOapg.properties.projectModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ptoannual"]) -> typing.Union[MetaOapg.properties.ptoannual, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ptobalance"]) -> typing.Union[MetaOapg.properties.ptobalance, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["qboPref"]) -> typing.Union[MetaOapg.properties.qboPref, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["relativeDate"]) -> typing.Union[MetaOapg.properties.relativeDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reportsToListMap"]) -> typing.Union['UserModelReportsToListMap', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["secondLastName"]) -> typing.Union[MetaOapg.properties.secondLastName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["shortName"]) -> typing.Union[MetaOapg.properties.shortName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["skillUserModelList"]) -> typing.Union[MetaOapg.properties.skillUserModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["star"]) -> typing.Union[MetaOapg.properties.star, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union[MetaOapg.properties.status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stripeId"]) -> typing.Union[MetaOapg.properties.stripeId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supervisorModelList"]) -> typing.Union[MetaOapg.properties.supervisorModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumbnail"]) -> typing.Union[MetaOapg.properties.thumbnail, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timecardPeriodPref"]) -> typing.Union[MetaOapg.properties.timecardPeriodPref, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timezone"]) -> typing.Union[MetaOapg.properties.timezone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tosVersion"]) -> typing.Union[MetaOapg.properties.tosVersion, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userCountry"]) -> typing.Union[MetaOapg.properties.userCountry, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userDateFormat"]) -> typing.Union[MetaOapg.properties.userDateFormat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userDateOfBirth"]) -> typing.Union[MetaOapg.properties.userDateOfBirth, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userDisplayName"]) -> typing.Union[MetaOapg.properties.userDisplayName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userEndDate"]) -> typing.Union[MetaOapg.properties.userEndDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userNameFormat"]) -> typing.Union[MetaOapg.properties.userNameFormat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userProfileModel"]) -> typing.Union['UserProfileModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userStartDate"]) -> typing.Union[MetaOapg.properties.userStartDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userTrainingModelList"]) -> typing.Union[MetaOapg.properties.userTrainingModelList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userType"]) -> typing.Union[MetaOapg.properties.userType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["view"]) -> typing.Union[MetaOapg.properties.view, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["workerType"]) -> typing.Union[MetaOapg.properties.workerType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["workerTypeModel"]) -> typing.Union['WorkerTypeModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["workingDays"]) -> typing.Union[MetaOapg.properties.workingDays, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userName"]) -> typing.Union[MetaOapg.properties.userName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["userId", "addressModelList", "adpAssociateOID", "allocation", "appleUserIdentifier", "assignments", "awardModelList", "bankAccountModel", "calWeekPref", "calendarId", "calendarModel", "candidateId", "careerPathwayId", "cellPhone", "cid", "countryId", "createts", "customFieldValueModelList", "customTableModelList", "departmentModel", "departmentName", "displayFullName", "educationModelList", "email", "empId", "employmentModelList", "familySuffix", "financialModelList", "firstName", "gender", "guid", "hasAccess", "hrPortal", "im", "imageName", "isView", "jobGrade", "languagePreference", "lastName", "lastUpdateUsername", "lastupdatets", "lastupdateuserid", "licenseModelList", "locationModel", "mfaPreference", "mfaSecretKey", "middleName", "namePronunciation", "notifications", "paId", "phone", "position", "prefixSalutation", "profileId", "profileName", "projectModel", "projectModelList", "ptoannual", "ptobalance", "qboPref", "relativeDate", "reportsToListMap", "secondLastName", "shortName", "skillUserModelList", "star", "status", "stripeId", "supervisorModelList", "thumbnail", "timecardPeriodPref", "timezone", "tosVersion", "userCountry", "userDateFormat", "userDateOfBirth", "userDisplayName", "userEndDate", "userNameFormat", "userProfileModel", "userStartDate", "userTrainingModelList", "userType", "view", "workerType", "workerTypeModel", "workingDays", "userName", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        userId: typing.Union[MetaOapg.properties.userId, decimal.Decimal, int, ],
        addressModelList: typing.Union[MetaOapg.properties.addressModelList, list, tuple, schemas.Unset] = schemas.unset,
        adpAssociateOID: typing.Union[MetaOapg.properties.adpAssociateOID, str, schemas.Unset] = schemas.unset,
        allocation: typing.Union[MetaOapg.properties.allocation, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        appleUserIdentifier: typing.Union[MetaOapg.properties.appleUserIdentifier, str, schemas.Unset] = schemas.unset,
        assignments: typing.Union[MetaOapg.properties.assignments, str, schemas.Unset] = schemas.unset,
        awardModelList: typing.Union[MetaOapg.properties.awardModelList, list, tuple, schemas.Unset] = schemas.unset,
        bankAccountModel: typing.Union['BankAccountModel', schemas.Unset] = schemas.unset,
        calWeekPref: typing.Union[MetaOapg.properties.calWeekPref, str, schemas.Unset] = schemas.unset,
        calendarId: typing.Union[MetaOapg.properties.calendarId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        calendarModel: typing.Union['HRCalendarModel', schemas.Unset] = schemas.unset,
        candidateId: typing.Union[MetaOapg.properties.candidateId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        careerPathwayId: typing.Union[MetaOapg.properties.careerPathwayId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        cellPhone: typing.Union[MetaOapg.properties.cellPhone, str, schemas.Unset] = schemas.unset,
        cid: typing.Union[MetaOapg.properties.cid, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        countryId: typing.Union[MetaOapg.properties.countryId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        createts: typing.Union['Timestamp', schemas.Unset] = schemas.unset,
        customFieldValueModelList: typing.Union[MetaOapg.properties.customFieldValueModelList, list, tuple, schemas.Unset] = schemas.unset,
        customTableModelList: typing.Union[MetaOapg.properties.customTableModelList, list, tuple, schemas.Unset] = schemas.unset,
        departmentModel: typing.Union['DepartmentModel', schemas.Unset] = schemas.unset,
        departmentName: typing.Union[MetaOapg.properties.departmentName, str, schemas.Unset] = schemas.unset,
        displayFullName: typing.Union[MetaOapg.properties.displayFullName, str, schemas.Unset] = schemas.unset,
        educationModelList: typing.Union[MetaOapg.properties.educationModelList, list, tuple, schemas.Unset] = schemas.unset,
        email: typing.Union[MetaOapg.properties.email, str, schemas.Unset] = schemas.unset,
        empId: typing.Union[MetaOapg.properties.empId, str, schemas.Unset] = schemas.unset,
        employmentModelList: typing.Union[MetaOapg.properties.employmentModelList, list, tuple, schemas.Unset] = schemas.unset,
        familySuffix: typing.Union[MetaOapg.properties.familySuffix, str, schemas.Unset] = schemas.unset,
        financialModelList: typing.Union[MetaOapg.properties.financialModelList, list, tuple, schemas.Unset] = schemas.unset,
        firstName: typing.Union[MetaOapg.properties.firstName, str, schemas.Unset] = schemas.unset,
        gender: typing.Union[MetaOapg.properties.gender, str, schemas.Unset] = schemas.unset,
        guid: typing.Union[MetaOapg.properties.guid, str, schemas.Unset] = schemas.unset,
        hasAccess: typing.Union[MetaOapg.properties.hasAccess, bool, schemas.Unset] = schemas.unset,
        hrPortal: typing.Union[MetaOapg.properties.hrPortal, str, schemas.Unset] = schemas.unset,
        im: typing.Union[MetaOapg.properties.im, str, schemas.Unset] = schemas.unset,
        imageName: typing.Union[MetaOapg.properties.imageName, str, schemas.Unset] = schemas.unset,
        isView: typing.Union[MetaOapg.properties.isView, bool, schemas.Unset] = schemas.unset,
        jobGrade: typing.Union[MetaOapg.properties.jobGrade, str, schemas.Unset] = schemas.unset,
        languagePreference: typing.Union[MetaOapg.properties.languagePreference, str, schemas.Unset] = schemas.unset,
        lastName: typing.Union[MetaOapg.properties.lastName, str, schemas.Unset] = schemas.unset,
        lastUpdateUsername: typing.Union[MetaOapg.properties.lastUpdateUsername, str, schemas.Unset] = schemas.unset,
        lastupdatets: typing.Union[MetaOapg.properties.lastupdatets, str, date, schemas.Unset] = schemas.unset,
        lastupdateuserid: typing.Union[MetaOapg.properties.lastupdateuserid, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        licenseModelList: typing.Union[MetaOapg.properties.licenseModelList, list, tuple, schemas.Unset] = schemas.unset,
        locationModel: typing.Union['LocationModel', schemas.Unset] = schemas.unset,
        mfaPreference: typing.Union[MetaOapg.properties.mfaPreference, bool, schemas.Unset] = schemas.unset,
        mfaSecretKey: typing.Union[MetaOapg.properties.mfaSecretKey, str, schemas.Unset] = schemas.unset,
        middleName: typing.Union[MetaOapg.properties.middleName, str, schemas.Unset] = schemas.unset,
        namePronunciation: typing.Union[MetaOapg.properties.namePronunciation, str, schemas.Unset] = schemas.unset,
        notifications: typing.Union[MetaOapg.properties.notifications, bool, schemas.Unset] = schemas.unset,
        paId: typing.Union[MetaOapg.properties.paId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        phone: typing.Union[MetaOapg.properties.phone, str, schemas.Unset] = schemas.unset,
        position: typing.Union[MetaOapg.properties.position, str, schemas.Unset] = schemas.unset,
        prefixSalutation: typing.Union[MetaOapg.properties.prefixSalutation, str, schemas.Unset] = schemas.unset,
        profileId: typing.Union[MetaOapg.properties.profileId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        profileName: typing.Union[MetaOapg.properties.profileName, str, schemas.Unset] = schemas.unset,
        projectModel: typing.Union['ProjectModel', schemas.Unset] = schemas.unset,
        projectModelList: typing.Union[MetaOapg.properties.projectModelList, list, tuple, schemas.Unset] = schemas.unset,
        ptoannual: typing.Union[MetaOapg.properties.ptoannual, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ptobalance: typing.Union[MetaOapg.properties.ptobalance, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        qboPref: typing.Union[MetaOapg.properties.qboPref, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        relativeDate: typing.Union[MetaOapg.properties.relativeDate, str, schemas.Unset] = schemas.unset,
        reportsToListMap: typing.Union['UserModelReportsToListMap', schemas.Unset] = schemas.unset,
        secondLastName: typing.Union[MetaOapg.properties.secondLastName, str, schemas.Unset] = schemas.unset,
        shortName: typing.Union[MetaOapg.properties.shortName, str, schemas.Unset] = schemas.unset,
        skillUserModelList: typing.Union[MetaOapg.properties.skillUserModelList, list, tuple, schemas.Unset] = schemas.unset,
        star: typing.Union[MetaOapg.properties.star, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        status: typing.Union[MetaOapg.properties.status, str, schemas.Unset] = schemas.unset,
        stripeId: typing.Union[MetaOapg.properties.stripeId, str, schemas.Unset] = schemas.unset,
        supervisorModelList: typing.Union[MetaOapg.properties.supervisorModelList, list, tuple, schemas.Unset] = schemas.unset,
        thumbnail: typing.Union[MetaOapg.properties.thumbnail, str, schemas.Unset] = schemas.unset,
        timecardPeriodPref: typing.Union[MetaOapg.properties.timecardPeriodPref, str, schemas.Unset] = schemas.unset,
        timezone: typing.Union[MetaOapg.properties.timezone, str, schemas.Unset] = schemas.unset,
        tosVersion: typing.Union[MetaOapg.properties.tosVersion, str, schemas.Unset] = schemas.unset,
        userCountry: typing.Union[MetaOapg.properties.userCountry, str, schemas.Unset] = schemas.unset,
        userDateFormat: typing.Union[MetaOapg.properties.userDateFormat, str, schemas.Unset] = schemas.unset,
        userDateOfBirth: typing.Union[MetaOapg.properties.userDateOfBirth, str, date, schemas.Unset] = schemas.unset,
        userDisplayName: typing.Union[MetaOapg.properties.userDisplayName, str, schemas.Unset] = schemas.unset,
        userEndDate: typing.Union[MetaOapg.properties.userEndDate, str, date, schemas.Unset] = schemas.unset,
        userNameFormat: typing.Union[MetaOapg.properties.userNameFormat, str, schemas.Unset] = schemas.unset,
        userProfileModel: typing.Union['UserProfileModel', schemas.Unset] = schemas.unset,
        userStartDate: typing.Union[MetaOapg.properties.userStartDate, str, date, schemas.Unset] = schemas.unset,
        userTrainingModelList: typing.Union[MetaOapg.properties.userTrainingModelList, list, tuple, schemas.Unset] = schemas.unset,
        userType: typing.Union[MetaOapg.properties.userType, str, schemas.Unset] = schemas.unset,
        view: typing.Union[MetaOapg.properties.view, bool, schemas.Unset] = schemas.unset,
        workerType: typing.Union[MetaOapg.properties.workerType, str, schemas.Unset] = schemas.unset,
        workerTypeModel: typing.Union['WorkerTypeModel', schemas.Unset] = schemas.unset,
        workingDays: typing.Union[MetaOapg.properties.workingDays, str, schemas.Unset] = schemas.unset,
        userName: typing.Union[MetaOapg.properties.userName, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'UserModel':
        return super().__new__(
            cls,
            *args,
            userId=userId,
            addressModelList=addressModelList,
            adpAssociateOID=adpAssociateOID,
            allocation=allocation,
            appleUserIdentifier=appleUserIdentifier,
            assignments=assignments,
            awardModelList=awardModelList,
            bankAccountModel=bankAccountModel,
            calWeekPref=calWeekPref,
            calendarId=calendarId,
            calendarModel=calendarModel,
            candidateId=candidateId,
            careerPathwayId=careerPathwayId,
            cellPhone=cellPhone,
            cid=cid,
            countryId=countryId,
            createts=createts,
            customFieldValueModelList=customFieldValueModelList,
            customTableModelList=customTableModelList,
            departmentModel=departmentModel,
            departmentName=departmentName,
            displayFullName=displayFullName,
            educationModelList=educationModelList,
            email=email,
            empId=empId,
            employmentModelList=employmentModelList,
            familySuffix=familySuffix,
            financialModelList=financialModelList,
            firstName=firstName,
            gender=gender,
            guid=guid,
            hasAccess=hasAccess,
            hrPortal=hrPortal,
            im=im,
            imageName=imageName,
            isView=isView,
            jobGrade=jobGrade,
            languagePreference=languagePreference,
            lastName=lastName,
            lastUpdateUsername=lastUpdateUsername,
            lastupdatets=lastupdatets,
            lastupdateuserid=lastupdateuserid,
            licenseModelList=licenseModelList,
            locationModel=locationModel,
            mfaPreference=mfaPreference,
            mfaSecretKey=mfaSecretKey,
            middleName=middleName,
            namePronunciation=namePronunciation,
            notifications=notifications,
            paId=paId,
            phone=phone,
            position=position,
            prefixSalutation=prefixSalutation,
            profileId=profileId,
            profileName=profileName,
            projectModel=projectModel,
            projectModelList=projectModelList,
            ptoannual=ptoannual,
            ptobalance=ptobalance,
            qboPref=qboPref,
            relativeDate=relativeDate,
            reportsToListMap=reportsToListMap,
            secondLastName=secondLastName,
            shortName=shortName,
            skillUserModelList=skillUserModelList,
            star=star,
            status=status,
            stripeId=stripeId,
            supervisorModelList=supervisorModelList,
            thumbnail=thumbnail,
            timecardPeriodPref=timecardPeriodPref,
            timezone=timezone,
            tosVersion=tosVersion,
            userCountry=userCountry,
            userDateFormat=userDateFormat,
            userDateOfBirth=userDateOfBirth,
            userDisplayName=userDisplayName,
            userEndDate=userEndDate,
            userNameFormat=userNameFormat,
            userProfileModel=userProfileModel,
            userStartDate=userStartDate,
            userTrainingModelList=userTrainingModelList,
            userType=userType,
            view=view,
            workerType=workerType,
            workerTypeModel=workerTypeModel,
            workingDays=workingDays,
            userName=userName,
            _configuration=_configuration,
            **kwargs,
        )

from clay_hr_python_sdk.model.address_model import AddressModel
from clay_hr_python_sdk.model.award_model import AwardModel
from clay_hr_python_sdk.model.bank_account_model import BankAccountModel
from clay_hr_python_sdk.model.certification_model import CertificationModel
from clay_hr_python_sdk.model.custom_field_value_model import CustomFieldValueModel
from clay_hr_python_sdk.model.custom_table_model import CustomTableModel
from clay_hr_python_sdk.model.department_model import DepartmentModel
from clay_hr_python_sdk.model.education_model import EducationModel
from clay_hr_python_sdk.model.employment_model import EmploymentModel
from clay_hr_python_sdk.model.financial_model import FinancialModel
from clay_hr_python_sdk.model.hr_calendar_model import HRCalendarModel
from clay_hr_python_sdk.model.location_model import LocationModel
from clay_hr_python_sdk.model.project_model import ProjectModel
from clay_hr_python_sdk.model.skill_user_model import SkillUserModel
from clay_hr_python_sdk.model.timestamp import Timestamp
from clay_hr_python_sdk.model.user_model_reports_to_list_map import UserModelReportsToListMap
from clay_hr_python_sdk.model.user_profile_model import UserProfileModel
from clay_hr_python_sdk.model.user_thin_model import UserThinModel
from clay_hr_python_sdk.model.user_training_model import UserTrainingModel
from clay_hr_python_sdk.model.worker_type_model import WorkerTypeModel
