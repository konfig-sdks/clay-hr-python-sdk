# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from clay_hr_python_sdk import schemas  # noqa: F401


class GoalsGetGoalResponseGoalCollaborationModelItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            collabid = schemas.StrSchema
            goalid = schemas.StrSchema
            userid = schemas.StrSchema
            extuserid = schemas.StrSchema
            cid = schemas.StrSchema
        
            @staticmethod
            def userModel() -> typing.Type['GoalsGetGoalResponseGoalCollaborationModelItemUserModel']:
                return GoalsGetGoalResponseGoalCollaborationModelItemUserModel
            extuserModel = schemas.StrSchema
            __annotations__ = {
                "collabid": collabid,
                "goalid": goalid,
                "userid": userid,
                "extuserid": extuserid,
                "cid": cid,
                "userModel": userModel,
                "extuserModel": extuserModel,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["collabid"]) -> MetaOapg.properties.collabid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["goalid"]) -> MetaOapg.properties.goalid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userid"]) -> MetaOapg.properties.userid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["extuserid"]) -> MetaOapg.properties.extuserid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cid"]) -> MetaOapg.properties.cid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userModel"]) -> 'GoalsGetGoalResponseGoalCollaborationModelItemUserModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["extuserModel"]) -> MetaOapg.properties.extuserModel: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["collabid", "goalid", "userid", "extuserid", "cid", "userModel", "extuserModel", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["collabid"]) -> typing.Union[MetaOapg.properties.collabid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["goalid"]) -> typing.Union[MetaOapg.properties.goalid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userid"]) -> typing.Union[MetaOapg.properties.userid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["extuserid"]) -> typing.Union[MetaOapg.properties.extuserid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cid"]) -> typing.Union[MetaOapg.properties.cid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userModel"]) -> typing.Union['GoalsGetGoalResponseGoalCollaborationModelItemUserModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["extuserModel"]) -> typing.Union[MetaOapg.properties.extuserModel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["collabid", "goalid", "userid", "extuserid", "cid", "userModel", "extuserModel", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        collabid: typing.Union[MetaOapg.properties.collabid, str, schemas.Unset] = schemas.unset,
        goalid: typing.Union[MetaOapg.properties.goalid, str, schemas.Unset] = schemas.unset,
        userid: typing.Union[MetaOapg.properties.userid, str, schemas.Unset] = schemas.unset,
        extuserid: typing.Union[MetaOapg.properties.extuserid, str, schemas.Unset] = schemas.unset,
        cid: typing.Union[MetaOapg.properties.cid, str, schemas.Unset] = schemas.unset,
        userModel: typing.Union['GoalsGetGoalResponseGoalCollaborationModelItemUserModel', schemas.Unset] = schemas.unset,
        extuserModel: typing.Union[MetaOapg.properties.extuserModel, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'GoalsGetGoalResponseGoalCollaborationModelItem':
        return super().__new__(
            cls,
            *args,
            collabid=collabid,
            goalid=goalid,
            userid=userid,
            extuserid=extuserid,
            cid=cid,
            userModel=userModel,
            extuserModel=extuserModel,
            _configuration=_configuration,
            **kwargs,
        )

from clay_hr_python_sdk.model.goals_get_goal_response_goal_collaboration_model_item_user_model import GoalsGetGoalResponseGoalCollaborationModelItemUserModel
