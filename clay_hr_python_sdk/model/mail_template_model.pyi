# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from clay_hr_python_sdk import schemas  # noqa: F401


class MailTemplateModel(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            title = schemas.StrSchema
            cid = schemas.Int32Schema
            communicationType = schemas.StrSchema
        
            @staticmethod
            def createUserModel() -> typing.Type['UserModel']:
                return UserModel
        
            @staticmethod
            def createts() -> typing.Type['Timestamp']:
                return Timestamp
            footerAdditionalInfo = schemas.StrSchema
            footerCompanyAddress = schemas.BoolSchema
            footerCompanyLogo = schemas.BoolSchema
            footerContentAlignmnet = schemas.StrSchema
            headerAdditionalInfo = schemas.StrSchema
            headerCompanyAddress = schemas.BoolSchema
            headerCompanyLogo = schemas.BoolSchema
            headerContentAlignment = schemas.StrSchema
        
            @staticmethod
            def lastupdatets() -> typing.Type['Timestamp']:
                return Timestamp
            message = schemas.StrSchema
            object = schemas.StrSchema
            subject = schemas.StrSchema
            systemUsage = schemas.StrSchema
            templateId = schemas.Int32Schema
            __annotations__ = {
                "title": title,
                "cid": cid,
                "communicationType": communicationType,
                "createUserModel": createUserModel,
                "createts": createts,
                "footerAdditionalInfo": footerAdditionalInfo,
                "footerCompanyAddress": footerCompanyAddress,
                "footerCompanyLogo": footerCompanyLogo,
                "footerContentAlignmnet": footerContentAlignmnet,
                "headerAdditionalInfo": headerAdditionalInfo,
                "headerCompanyAddress": headerCompanyAddress,
                "headerCompanyLogo": headerCompanyLogo,
                "headerContentAlignment": headerContentAlignment,
                "lastupdatets": lastupdatets,
                "message": message,
                "object": object,
                "subject": subject,
                "systemUsage": systemUsage,
                "templateId": templateId,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["title"]) -> MetaOapg.properties.title: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cid"]) -> MetaOapg.properties.cid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["communicationType"]) -> MetaOapg.properties.communicationType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createUserModel"]) -> 'UserModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createts"]) -> 'Timestamp': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["footerAdditionalInfo"]) -> MetaOapg.properties.footerAdditionalInfo: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["footerCompanyAddress"]) -> MetaOapg.properties.footerCompanyAddress: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["footerCompanyLogo"]) -> MetaOapg.properties.footerCompanyLogo: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["footerContentAlignmnet"]) -> MetaOapg.properties.footerContentAlignmnet: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["headerAdditionalInfo"]) -> MetaOapg.properties.headerAdditionalInfo: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["headerCompanyAddress"]) -> MetaOapg.properties.headerCompanyAddress: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["headerCompanyLogo"]) -> MetaOapg.properties.headerCompanyLogo: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["headerContentAlignment"]) -> MetaOapg.properties.headerContentAlignment: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastupdatets"]) -> 'Timestamp': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["message"]) -> MetaOapg.properties.message: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["object"]) -> MetaOapg.properties.object: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["subject"]) -> MetaOapg.properties.subject: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["systemUsage"]) -> MetaOapg.properties.systemUsage: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["templateId"]) -> MetaOapg.properties.templateId: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["title", "cid", "communicationType", "createUserModel", "createts", "footerAdditionalInfo", "footerCompanyAddress", "footerCompanyLogo", "footerContentAlignmnet", "headerAdditionalInfo", "headerCompanyAddress", "headerCompanyLogo", "headerContentAlignment", "lastupdatets", "message", "object", "subject", "systemUsage", "templateId", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["title"]) -> typing.Union[MetaOapg.properties.title, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cid"]) -> typing.Union[MetaOapg.properties.cid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["communicationType"]) -> typing.Union[MetaOapg.properties.communicationType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createUserModel"]) -> typing.Union['UserModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createts"]) -> typing.Union['Timestamp', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["footerAdditionalInfo"]) -> typing.Union[MetaOapg.properties.footerAdditionalInfo, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["footerCompanyAddress"]) -> typing.Union[MetaOapg.properties.footerCompanyAddress, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["footerCompanyLogo"]) -> typing.Union[MetaOapg.properties.footerCompanyLogo, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["footerContentAlignmnet"]) -> typing.Union[MetaOapg.properties.footerContentAlignmnet, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["headerAdditionalInfo"]) -> typing.Union[MetaOapg.properties.headerAdditionalInfo, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["headerCompanyAddress"]) -> typing.Union[MetaOapg.properties.headerCompanyAddress, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["headerCompanyLogo"]) -> typing.Union[MetaOapg.properties.headerCompanyLogo, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["headerContentAlignment"]) -> typing.Union[MetaOapg.properties.headerContentAlignment, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastupdatets"]) -> typing.Union['Timestamp', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["message"]) -> typing.Union[MetaOapg.properties.message, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["object"]) -> typing.Union[MetaOapg.properties.object, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["subject"]) -> typing.Union[MetaOapg.properties.subject, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["systemUsage"]) -> typing.Union[MetaOapg.properties.systemUsage, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["templateId"]) -> typing.Union[MetaOapg.properties.templateId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["title", "cid", "communicationType", "createUserModel", "createts", "footerAdditionalInfo", "footerCompanyAddress", "footerCompanyLogo", "footerContentAlignmnet", "headerAdditionalInfo", "headerCompanyAddress", "headerCompanyLogo", "headerContentAlignment", "lastupdatets", "message", "object", "subject", "systemUsage", "templateId", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        title: typing.Union[MetaOapg.properties.title, str, schemas.Unset] = schemas.unset,
        cid: typing.Union[MetaOapg.properties.cid, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        communicationType: typing.Union[MetaOapg.properties.communicationType, str, schemas.Unset] = schemas.unset,
        createUserModel: typing.Union['UserModel', schemas.Unset] = schemas.unset,
        createts: typing.Union['Timestamp', schemas.Unset] = schemas.unset,
        footerAdditionalInfo: typing.Union[MetaOapg.properties.footerAdditionalInfo, str, schemas.Unset] = schemas.unset,
        footerCompanyAddress: typing.Union[MetaOapg.properties.footerCompanyAddress, bool, schemas.Unset] = schemas.unset,
        footerCompanyLogo: typing.Union[MetaOapg.properties.footerCompanyLogo, bool, schemas.Unset] = schemas.unset,
        footerContentAlignmnet: typing.Union[MetaOapg.properties.footerContentAlignmnet, str, schemas.Unset] = schemas.unset,
        headerAdditionalInfo: typing.Union[MetaOapg.properties.headerAdditionalInfo, str, schemas.Unset] = schemas.unset,
        headerCompanyAddress: typing.Union[MetaOapg.properties.headerCompanyAddress, bool, schemas.Unset] = schemas.unset,
        headerCompanyLogo: typing.Union[MetaOapg.properties.headerCompanyLogo, bool, schemas.Unset] = schemas.unset,
        headerContentAlignment: typing.Union[MetaOapg.properties.headerContentAlignment, str, schemas.Unset] = schemas.unset,
        lastupdatets: typing.Union['Timestamp', schemas.Unset] = schemas.unset,
        message: typing.Union[MetaOapg.properties.message, str, schemas.Unset] = schemas.unset,
        object: typing.Union[MetaOapg.properties.object, str, schemas.Unset] = schemas.unset,
        subject: typing.Union[MetaOapg.properties.subject, str, schemas.Unset] = schemas.unset,
        systemUsage: typing.Union[MetaOapg.properties.systemUsage, str, schemas.Unset] = schemas.unset,
        templateId: typing.Union[MetaOapg.properties.templateId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'MailTemplateModel':
        return super().__new__(
            cls,
            *args,
            title=title,
            cid=cid,
            communicationType=communicationType,
            createUserModel=createUserModel,
            createts=createts,
            footerAdditionalInfo=footerAdditionalInfo,
            footerCompanyAddress=footerCompanyAddress,
            footerCompanyLogo=footerCompanyLogo,
            footerContentAlignmnet=footerContentAlignmnet,
            headerAdditionalInfo=headerAdditionalInfo,
            headerCompanyAddress=headerCompanyAddress,
            headerCompanyLogo=headerCompanyLogo,
            headerContentAlignment=headerContentAlignment,
            lastupdatets=lastupdatets,
            message=message,
            object=object,
            subject=subject,
            systemUsage=systemUsage,
            templateId=templateId,
            _configuration=_configuration,
            **kwargs,
        )

from clay_hr_python_sdk.model.timestamp import Timestamp
from clay_hr_python_sdk.model.user_model import UserModel
