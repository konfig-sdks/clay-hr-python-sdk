# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from clay_hr_python_sdk import schemas  # noqa: F401


class SkillsCreateNewSkillResponse(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            Status = schemas.StrSchema
            Description = schemas.StrSchema
            SkillCode = schemas.StrSchema
        
            @staticmethod
            def SkillTypeModel() -> typing.Type['SkillsCreateNewSkillResponseSkillTypeModel']:
                return SkillsCreateNewSkillResponseSkillTypeModel
        
            @staticmethod
            def AssessmentModel() -> typing.Type['SkillsCreateNewSkillResponseAssessmentModel']:
                return SkillsCreateNewSkillResponseAssessmentModel
            SkillId = schemas.StrSchema
            message = schemas.StrSchema
            __annotations__ = {
                "Status": Status,
                "Description": Description,
                "SkillCode": SkillCode,
                "SkillTypeModel": SkillTypeModel,
                "AssessmentModel": AssessmentModel,
                "SkillId": SkillId,
                "message": message,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Status"]) -> MetaOapg.properties.Status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Description"]) -> MetaOapg.properties.Description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SkillCode"]) -> MetaOapg.properties.SkillCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SkillTypeModel"]) -> 'SkillsCreateNewSkillResponseSkillTypeModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["AssessmentModel"]) -> 'SkillsCreateNewSkillResponseAssessmentModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SkillId"]) -> MetaOapg.properties.SkillId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["message"]) -> MetaOapg.properties.message: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["Status", "Description", "SkillCode", "SkillTypeModel", "AssessmentModel", "SkillId", "message", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Status"]) -> typing.Union[MetaOapg.properties.Status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Description"]) -> typing.Union[MetaOapg.properties.Description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SkillCode"]) -> typing.Union[MetaOapg.properties.SkillCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SkillTypeModel"]) -> typing.Union['SkillsCreateNewSkillResponseSkillTypeModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["AssessmentModel"]) -> typing.Union['SkillsCreateNewSkillResponseAssessmentModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SkillId"]) -> typing.Union[MetaOapg.properties.SkillId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["message"]) -> typing.Union[MetaOapg.properties.message, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["Status", "Description", "SkillCode", "SkillTypeModel", "AssessmentModel", "SkillId", "message", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        Status: typing.Union[MetaOapg.properties.Status, str, schemas.Unset] = schemas.unset,
        Description: typing.Union[MetaOapg.properties.Description, str, schemas.Unset] = schemas.unset,
        SkillCode: typing.Union[MetaOapg.properties.SkillCode, str, schemas.Unset] = schemas.unset,
        SkillTypeModel: typing.Union['SkillsCreateNewSkillResponseSkillTypeModel', schemas.Unset] = schemas.unset,
        AssessmentModel: typing.Union['SkillsCreateNewSkillResponseAssessmentModel', schemas.Unset] = schemas.unset,
        SkillId: typing.Union[MetaOapg.properties.SkillId, str, schemas.Unset] = schemas.unset,
        message: typing.Union[MetaOapg.properties.message, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'SkillsCreateNewSkillResponse':
        return super().__new__(
            cls,
            *args,
            Status=Status,
            Description=Description,
            SkillCode=SkillCode,
            SkillTypeModel=SkillTypeModel,
            AssessmentModel=AssessmentModel,
            SkillId=SkillId,
            message=message,
            _configuration=_configuration,
            **kwargs,
        )

from clay_hr_python_sdk.model.skills_create_new_skill_response_assessment_model import SkillsCreateNewSkillResponseAssessmentModel
from clay_hr_python_sdk.model.skills_create_new_skill_response_skill_type_model import SkillsCreateNewSkillResponseSkillTypeModel
