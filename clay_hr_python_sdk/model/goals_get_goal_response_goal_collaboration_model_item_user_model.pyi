# coding: utf-8

"""
    Expense Reports

    API Documentation

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from clay_hr_python_sdk import schemas  # noqa: F401


class GoalsGetGoalResponseGoalCollaborationModelItemUserModel(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            cid = schemas.StrSchema
            empId = schemas.StrSchema
            userId = schemas.StrSchema
            firstName = schemas.StrSchema
            shortName = schemas.StrSchema
            lastName = schemas.StrSchema
            displayFullName = schemas.StrSchema
            email = schemas.StrSchema
            userName = schemas.StrSchema
        
            @staticmethod
            def userProfileModel() -> typing.Type['GoalsGetGoalResponseGoalCollaborationModelItemUserModelUserProfileModel']:
                return GoalsGetGoalResponseGoalCollaborationModelItemUserModelUserProfileModel
            status = schemas.StrSchema
            ptoannual = schemas.StrSchema
            ptobalance = schemas.StrSchema
            gender = schemas.StrSchema
            phone = schemas.StrSchema
            createts = schemas.IntSchema
            timezone = schemas.StrSchema
            profileId = schemas.StrSchema
            allocation = schemas.StrSchema
            lastupdatets = schemas.StrSchema
            userdateFormat = schemas.StrSchema
            hrPortal = schemas.StrSchema
            star = schemas.StrSchema
            timecardPeriodPref = schemas.StrSchema
            languagePreference = schemas.StrSchema
            guid = schemas.StrSchema
            hasAccess = schemas.StrSchema
            notifications = schemas.StrSchema
            isView = schemas.StrSchema
            view = schemas.StrSchema
            __annotations__ = {
                "cid": cid,
                "empId": empId,
                "userId": userId,
                "firstName": firstName,
                "shortName": shortName,
                "lastName": lastName,
                "displayFullName": displayFullName,
                "email": email,
                "userName": userName,
                "userProfileModel": userProfileModel,
                "status": status,
                "ptoannual": ptoannual,
                "ptobalance": ptobalance,
                "gender": gender,
                "phone": phone,
                "createts": createts,
                "timezone": timezone,
                "profileId": profileId,
                "allocation": allocation,
                "lastupdatets": lastupdatets,
                "userdateFormat": userdateFormat,
                "hrPortal": hrPortal,
                "star": star,
                "timecardPeriodPref": timecardPeriodPref,
                "languagePreference": languagePreference,
                "guid": guid,
                "hasAccess": hasAccess,
                "notifications": notifications,
                "isView": isView,
                "view": view,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cid"]) -> MetaOapg.properties.cid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["empId"]) -> MetaOapg.properties.empId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userId"]) -> MetaOapg.properties.userId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["firstName"]) -> MetaOapg.properties.firstName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["shortName"]) -> MetaOapg.properties.shortName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastName"]) -> MetaOapg.properties.lastName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["displayFullName"]) -> MetaOapg.properties.displayFullName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["email"]) -> MetaOapg.properties.email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userName"]) -> MetaOapg.properties.userName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userProfileModel"]) -> 'GoalsGetGoalResponseGoalCollaborationModelItemUserModelUserProfileModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ptoannual"]) -> MetaOapg.properties.ptoannual: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ptobalance"]) -> MetaOapg.properties.ptobalance: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gender"]) -> MetaOapg.properties.gender: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["phone"]) -> MetaOapg.properties.phone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createts"]) -> MetaOapg.properties.createts: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timezone"]) -> MetaOapg.properties.timezone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["profileId"]) -> MetaOapg.properties.profileId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["allocation"]) -> MetaOapg.properties.allocation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastupdatets"]) -> MetaOapg.properties.lastupdatets: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userdateFormat"]) -> MetaOapg.properties.userdateFormat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hrPortal"]) -> MetaOapg.properties.hrPortal: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["star"]) -> MetaOapg.properties.star: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timecardPeriodPref"]) -> MetaOapg.properties.timecardPeriodPref: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["languagePreference"]) -> MetaOapg.properties.languagePreference: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["guid"]) -> MetaOapg.properties.guid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hasAccess"]) -> MetaOapg.properties.hasAccess: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["notifications"]) -> MetaOapg.properties.notifications: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isView"]) -> MetaOapg.properties.isView: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["view"]) -> MetaOapg.properties.view: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["cid", "empId", "userId", "firstName", "shortName", "lastName", "displayFullName", "email", "userName", "userProfileModel", "status", "ptoannual", "ptobalance", "gender", "phone", "createts", "timezone", "profileId", "allocation", "lastupdatets", "userdateFormat", "hrPortal", "star", "timecardPeriodPref", "languagePreference", "guid", "hasAccess", "notifications", "isView", "view", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cid"]) -> typing.Union[MetaOapg.properties.cid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["empId"]) -> typing.Union[MetaOapg.properties.empId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userId"]) -> typing.Union[MetaOapg.properties.userId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["firstName"]) -> typing.Union[MetaOapg.properties.firstName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["shortName"]) -> typing.Union[MetaOapg.properties.shortName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastName"]) -> typing.Union[MetaOapg.properties.lastName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["displayFullName"]) -> typing.Union[MetaOapg.properties.displayFullName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["email"]) -> typing.Union[MetaOapg.properties.email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userName"]) -> typing.Union[MetaOapg.properties.userName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userProfileModel"]) -> typing.Union['GoalsGetGoalResponseGoalCollaborationModelItemUserModelUserProfileModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union[MetaOapg.properties.status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ptoannual"]) -> typing.Union[MetaOapg.properties.ptoannual, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ptobalance"]) -> typing.Union[MetaOapg.properties.ptobalance, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gender"]) -> typing.Union[MetaOapg.properties.gender, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["phone"]) -> typing.Union[MetaOapg.properties.phone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createts"]) -> typing.Union[MetaOapg.properties.createts, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timezone"]) -> typing.Union[MetaOapg.properties.timezone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["profileId"]) -> typing.Union[MetaOapg.properties.profileId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["allocation"]) -> typing.Union[MetaOapg.properties.allocation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastupdatets"]) -> typing.Union[MetaOapg.properties.lastupdatets, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userdateFormat"]) -> typing.Union[MetaOapg.properties.userdateFormat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hrPortal"]) -> typing.Union[MetaOapg.properties.hrPortal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["star"]) -> typing.Union[MetaOapg.properties.star, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timecardPeriodPref"]) -> typing.Union[MetaOapg.properties.timecardPeriodPref, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["languagePreference"]) -> typing.Union[MetaOapg.properties.languagePreference, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["guid"]) -> typing.Union[MetaOapg.properties.guid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hasAccess"]) -> typing.Union[MetaOapg.properties.hasAccess, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["notifications"]) -> typing.Union[MetaOapg.properties.notifications, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isView"]) -> typing.Union[MetaOapg.properties.isView, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["view"]) -> typing.Union[MetaOapg.properties.view, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["cid", "empId", "userId", "firstName", "shortName", "lastName", "displayFullName", "email", "userName", "userProfileModel", "status", "ptoannual", "ptobalance", "gender", "phone", "createts", "timezone", "profileId", "allocation", "lastupdatets", "userdateFormat", "hrPortal", "star", "timecardPeriodPref", "languagePreference", "guid", "hasAccess", "notifications", "isView", "view", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        cid: typing.Union[MetaOapg.properties.cid, str, schemas.Unset] = schemas.unset,
        empId: typing.Union[MetaOapg.properties.empId, str, schemas.Unset] = schemas.unset,
        userId: typing.Union[MetaOapg.properties.userId, str, schemas.Unset] = schemas.unset,
        firstName: typing.Union[MetaOapg.properties.firstName, str, schemas.Unset] = schemas.unset,
        shortName: typing.Union[MetaOapg.properties.shortName, str, schemas.Unset] = schemas.unset,
        lastName: typing.Union[MetaOapg.properties.lastName, str, schemas.Unset] = schemas.unset,
        displayFullName: typing.Union[MetaOapg.properties.displayFullName, str, schemas.Unset] = schemas.unset,
        email: typing.Union[MetaOapg.properties.email, str, schemas.Unset] = schemas.unset,
        userName: typing.Union[MetaOapg.properties.userName, str, schemas.Unset] = schemas.unset,
        userProfileModel: typing.Union['GoalsGetGoalResponseGoalCollaborationModelItemUserModelUserProfileModel', schemas.Unset] = schemas.unset,
        status: typing.Union[MetaOapg.properties.status, str, schemas.Unset] = schemas.unset,
        ptoannual: typing.Union[MetaOapg.properties.ptoannual, str, schemas.Unset] = schemas.unset,
        ptobalance: typing.Union[MetaOapg.properties.ptobalance, str, schemas.Unset] = schemas.unset,
        gender: typing.Union[MetaOapg.properties.gender, str, schemas.Unset] = schemas.unset,
        phone: typing.Union[MetaOapg.properties.phone, str, schemas.Unset] = schemas.unset,
        createts: typing.Union[MetaOapg.properties.createts, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        timezone: typing.Union[MetaOapg.properties.timezone, str, schemas.Unset] = schemas.unset,
        profileId: typing.Union[MetaOapg.properties.profileId, str, schemas.Unset] = schemas.unset,
        allocation: typing.Union[MetaOapg.properties.allocation, str, schemas.Unset] = schemas.unset,
        lastupdatets: typing.Union[MetaOapg.properties.lastupdatets, str, schemas.Unset] = schemas.unset,
        userdateFormat: typing.Union[MetaOapg.properties.userdateFormat, str, schemas.Unset] = schemas.unset,
        hrPortal: typing.Union[MetaOapg.properties.hrPortal, str, schemas.Unset] = schemas.unset,
        star: typing.Union[MetaOapg.properties.star, str, schemas.Unset] = schemas.unset,
        timecardPeriodPref: typing.Union[MetaOapg.properties.timecardPeriodPref, str, schemas.Unset] = schemas.unset,
        languagePreference: typing.Union[MetaOapg.properties.languagePreference, str, schemas.Unset] = schemas.unset,
        guid: typing.Union[MetaOapg.properties.guid, str, schemas.Unset] = schemas.unset,
        hasAccess: typing.Union[MetaOapg.properties.hasAccess, str, schemas.Unset] = schemas.unset,
        notifications: typing.Union[MetaOapg.properties.notifications, str, schemas.Unset] = schemas.unset,
        isView: typing.Union[MetaOapg.properties.isView, str, schemas.Unset] = schemas.unset,
        view: typing.Union[MetaOapg.properties.view, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'GoalsGetGoalResponseGoalCollaborationModelItemUserModel':
        return super().__new__(
            cls,
            *args,
            cid=cid,
            empId=empId,
            userId=userId,
            firstName=firstName,
            shortName=shortName,
            lastName=lastName,
            displayFullName=displayFullName,
            email=email,
            userName=userName,
            userProfileModel=userProfileModel,
            status=status,
            ptoannual=ptoannual,
            ptobalance=ptobalance,
            gender=gender,
            phone=phone,
            createts=createts,
            timezone=timezone,
            profileId=profileId,
            allocation=allocation,
            lastupdatets=lastupdatets,
            userdateFormat=userdateFormat,
            hrPortal=hrPortal,
            star=star,
            timecardPeriodPref=timecardPeriodPref,
            languagePreference=languagePreference,
            guid=guid,
            hasAccess=hasAccess,
            notifications=notifications,
            isView=isView,
            view=view,
            _configuration=_configuration,
            **kwargs,
        )

from clay_hr_python_sdk.model.goals_get_goal_response_goal_collaboration_model_item_user_model_user_profile_model import GoalsGetGoalResponseGoalCollaborationModelItemUserModelUserProfileModel
